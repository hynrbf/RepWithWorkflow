import { AppointedRepresentativeActivity } from "./AppointedRepresentativeActivity";
import { FirmRepresentative } from "../FirmRepresentative";
import { CustomerBase } from "@/entities/CustomerBase";
import { ARFirmDetail } from "@/entities/ar-details/ARFirmDetail";
import { ProvidersEntity } from "@/entities/providers-and-introducers/ProvidersEntity";
import { BankAccountDetails } from "@/entities/ar-details/BankAccountDetails";
import { AdditionalInformation } from "@/entities/ar-details/AdditionalInformation";
import { ArDataProtectionLicenceEntity } from "@/entities/data-protection-license/ARDataProtectionLicenceEntity";
import { IntroducersEntity } from "@/entities/providers-and-introducers/IntroducersEntity";
import { Money } from "@/entities/Money";
import { FeeEntity } from "@/entities/appointed-representatives/FeeEntity";

export class AppointedRepresentative extends CustomerBase {
  public isCompany: boolean | null = null;
  public name?: string;
  public tradingNames?: string[];
  public isTradingNamesChanged: boolean = false;
  public isTradingSameAsRegisteredAddress: boolean = false;
  public proposedCommencementDate?: number;
  public registeredAddress?: string;
  public tradingAddress?: string;
  public website?: string;
  public title?: string;
  public forename?: string;
  public surname?: string;
  public homeAddress?: string;
  public residenceStartDate?: number;
  public dateOfBirth?: number;
  public countryOfBirth?: string;
  public nationality?: string;
  public nationalities?: string[];
  public nationalityInsuranceNumber?: string;
  public passportNumber?: string;
  public representative = new FirmRepresentative();
  public activities: AppointedRepresentativeActivity[] = [];
  public isBeIntroducer: boolean | null = null;
  public primaryReason?: string;
  public isPayForServices: boolean | null = null;
  public serviceToPayFor?: string;
  public fees?: FeeEntity[] = [];
  public isActivitiesCoveredByPii: boolean | null = null;
  public piiActivitiesCovered?: string;
  public createdAt?: number;
  public updatedAt?: number;
  public customerId?: string;
  public status: number = 1;
  public firmDetail?: ARFirmDetail;
  public providers?: ProvidersEntity[];
  public bankAccountDetails?: BankAccountDetails;
  public additionalInformation?: AdditionalInformation;
  public dataProtectionLicense?: ArDataProtectionLicenceEntity;
  public dataProtectionLicenseCache?: ArDataProtectionLicenceEntity;
  public introducers?: IntroducersEntity[];
  public isActivityAdvisorDriven?: boolean;
  public hasAdditionalServices?: boolean;
  public forecastedAnnualRevenueActivities?: Money;
  public forecastedAnnualRevenueServices?: Money;
  public preferredCommencementDate?: number;

  // ToDo. Check if needed
  public url?: string;
  public frn?: string;
  public isCurrentRepresentative: boolean = false;
  public principalFirmName?: string;
  public principalFrn?: string;
  public isEeaTiedAgent: boolean = false;
  public isTiedAgent: boolean = false;
  public terminationDate?: number;
  public terminationDateStr?: string;
  public effectiveDate?: number;
  public effectiveDateStr?: string;
  public fcaFirmRefNo?: number;
  public firmType?: string;
  public isIntroducer?: boolean;
  public service?: string;
}
