import {
  ProgressBar
} from "./chunk-T2ROD4JR.js";
import {
  provideLocalizationService
} from "./chunk-TNWINVQ6.js";
import {
  Popup
} from "./chunk-P43752AQ.js";
import {
  Fade,
  Reveal,
  Slide
} from "./chunk-GK4QQKT7.js";
import {
  caretAltDownIcon,
  caretAltLeftIcon,
  caretAltRightIcon,
  caretAltUpIcon,
  checkOutlineIcon,
  chevronDownIcon,
  chevronUpIcon,
  exclamationCircleIcon
} from "./chunk-HKPTYRTE.js";
import {
  index_esm_exports,
  main_exports
} from "./chunk-NCGOQWHX.js";
import {
  vue_runtime_esm_bundler_exports
} from "./chunk-4NBGFDBU.js";

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/isObject.js
var isObject = function(value2) {
  return typeof value2 === "object";
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/classNames.js
var classNames = function() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  return args.filter(function(arg) {
    return arg !== true && !!arg;
  }).map(function(arg) {
    return Array.isArray(arg) ? classNames.apply(void 0, arg) : isObject(arg) ? Object.keys(arg).map(function(key, idx) {
      return arg[idx] || arg[key] && key || null;
    }).filter(function(el) {
      return el !== null;
    }).join(" ") : arg;
  }).filter(function(arg) {
    return !!arg;
  }).join(" ");
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/guid.js
var guid = function() {
  var id = "";
  var i;
  var random;
  for (i = 0; i < 32; i++) {
    random = Math.random() * 16 | 0;
    if (i === 8 || i === 12 || i === 16 || i === 20) {
      id += "-";
    }
    id += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);
  }
  return id;
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/keys.js
var Keys = {
  backspace: 8,
  tab: 9,
  enter: 13,
  shift: 16,
  esc: 27,
  space: 32,
  pageUp: 33,
  pageDown: 34,
  end: 35,
  home: 36,
  left: 37,
  up: 38,
  right: 39,
  down: 40,
  delete: 46
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/canUseDOM.js
var canUseDOM = Boolean(
  // from fbjs
  typeof window !== "undefined" && window.document && window.document.createElement
);

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/refs.js
function getRef(comp, refName, customRef) {
  return comp.v3 ? comp["".concat(refName, "Ref")] : comp.$refs["".concat(customRef || refName)];
}
function setRef(comp, refName, customRef) {
  return comp.v3 ? function(el) {
    comp["".concat(refName, "Ref")] = el;
  } : customRef || refName;
}

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/focus.js
var FOCUSABLE_SELECTOR = 'input, [tabindex]:not([tabindex="-1"])';
var focusFirstFocusableChild = function(element) {
  if (element) {
    var elements = element.querySelectorAll(FOCUSABLE_SELECTOR);
    if (elements.length && elements[0].focus) {
      elements[0].focus();
    }
  }
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/defaultSlots.js
function getDefaultSlots(component) {
  var defaultSlots = component.$slots.default;
  return component.v3 && defaultSlots && typeof defaultSlots === "function" ? defaultSlots() : defaultSlots;
}

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/Draggable.js
var _DraggableVue;
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
function _defineProperty(obj, key, value2) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value2, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return (typeof key === "undefined" ? "undefined" : _typeof(key)) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if ((typeof input === "undefined" ? "undefined" : _typeof(input)) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if ((typeof res === "undefined" ? "undefined" : _typeof(res)) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var allVue = vue_runtime_esm_bundler_exports;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === "3";
var DraggableVue2 = (_DraggableVue = {
  // @ts-ignore
  emits: {
    press: null,
    drag: null,
    release: null
  },
  inheritAttrs: false,
  created: function created() {
    this.element = null;
    var draggable = main_exports;
    var dp = typeof draggable !== "undefined" && draggable.Draggable ? draggable : draggable.default;
    this.draggable = new dp.Draggable({
      press: this.press,
      drag: this.drag,
      release: this.release
    });
  },
  // @ts-ignore
  setup: !isV3 ? void 0 : function() {
    var v3 = !!isV3;
    return {
      v3
    };
  },
  mounted: function mounted() {
    if (this.$el) {
      this.element = this.$el.nodeType === 3 ? this.$el.nextElementSibling : this.$el;
      this.draggable.bindTo(this.element);
    }
  },
  destroyed: !!isV3 ? void 0 : function() {
    this.draggable.destroy();
  },
  // @ts-ignore
  unmounted: function unmounted() {
    this.draggable.destroy();
  },
  methods: {
    press: function press(event) {
      if (this.element) {
        this.$emit("press", event, this.element);
      }
    },
    drag: function drag(event) {
      if (this.element) {
        this.$emit("drag", event, this.element);
      }
    },
    release: function release(event) {
      if (this.element) {
        this.$emit("release", event, this.element);
      }
    }
  }
}, _defineProperty(_DraggableVue, "setup", !isV3 ? void 0 : function() {
  var v3 = !!isV3;
  return {
    v3
  };
}), _defineProperty(_DraggableVue, "render", function render(createElement) {
  var h = gh || createElement;
  return getDefaultSlots(this);
}), _DraggableVue);
var Draggable = DraggableVue2;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/constants/main.js
var FIELD_REGEX = /\[(?:(\d+)|['"](.*?)['"])\]|((?:(?!\[.*?\]|\.).)+)/g;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/getter.js
var getterCache = {};
getterCache.undefined = function() {
  return void 0;
};
function getter(field) {
  if (getterCache[field]) {
    return getterCache[field];
  }
  var fields = [];
  field.replace(FIELD_REGEX, function(_match, index, indexAccessor, fieldName) {
    fields.push(index !== void 0 ? index : indexAccessor || fieldName);
  });
  getterCache[field] = function(obj) {
    var result = obj;
    for (var idx = 0; idx < fields.length && result; idx++) {
      result = result[fields[idx]];
    }
    return result;
  };
  return getterCache[field];
}

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/setter.js
var setterCache = {};
setterCache.undefined = function(obj) {
  return obj;
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/listeners.js
function getListeners() {
  if (this.v3) {
    var listeners = {};
    for (var key in this.$attrs) {
      if (key.startsWith("on")) {
        listeners[key] = this.$attrs[key];
      }
    }
    return listeners;
  } else {
    return this.$listeners;
  }
}

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/templateRendering.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var allVue2 = vue_runtime_esm_bundler_exports;
var isV32 = allVue2.version && allVue2.version[0] === "3";
function templateRendering(template, listeners) {
  if (!template && template !== false) {
    return void 0;
  }
  if (template.kt) {
    return template;
  }
  var scopedSlot = isV32 ? this.$slots[template] || (template.toLowerCase ? this.$slots[template.toLowerCase()] : null) : this.$scopedSlots[template] || (template.toLowerCase ? this.$scopedSlots[template.toLowerCase()] : null);
  if (typeof template === "string" && scopedSlot) {
    return { kt: true, type: "slot", render: scopedSlot, listeners };
  }
  if (typeof template === "string" || isObject(template) || typeof template === "function" && template.component) {
    return { kt: true, type: "component", render: template, listeners };
  }
  return { kt: true, type: "renderFunction", render: template, listeners };
}
function getTemplate(_a3) {
  var h = _a3.h, template = _a3.template, defaultRendering = _a3.defaultRendering, defaultSlots = _a3.defaultSlots, additionalProps = _a3.additionalProps, additionalListeners = _a3.additionalListeners, swapDefaultSlots = _a3.swapDefaultSlots;
  if (!template || template && template.render === true) {
    return defaultRendering;
  }
  var events;
  var props;
  var componentOptions;
  if (isV32) {
    var passedProps = defaultRendering ? defaultRendering.props : {};
    events = __assign(__assign({}, transformListeners(additionalListeners)), template.listeners);
    props = __assign(__assign(__assign({}, passedProps), additionalProps), events);
    componentOptions = __assign(__assign({}, props), events);
  } else {
    var hasComponentOptions = defaultRendering && defaultRendering.componentOptions;
    var defaultListeners = hasComponentOptions ? defaultRendering.componentOptions.listeners : {};
    var defaultProps = hasComponentOptions ? defaultRendering.componentOptions.propsData : {};
    events = __assign(__assign(__assign(__assign({}, defaultListeners), additionalListeners), transformListeners(additionalListeners)), template.listeners);
    props = __assign(__assign(__assign({}, defaultProps), additionalProps), events);
    componentOptions = { props, on: events };
  }
  if (template.type === "slot") {
    var slotTemplate = template.render({
      props,
      listeners: events,
      methods: events,
      defaultSlots
    });
    return isV32 ? slotTemplate : slotTemplate ? slotTemplate[0] : void 0;
  } else if (template.type === "renderFunction") {
    if (swapDefaultSlots) {
      return template.render ? template.render(h, defaultRendering, defaultSlots, props, events) : void 0;
    }
    return template.render ? template.render(h, defaultRendering, props, events, defaultSlots) : void 0;
  } else {
    return h(template.render, componentOptions, isV32 ? function() {
      return [defaultSlots];
    } : [defaultSlots]);
  }
}
function transformListeners(listeners) {
  if (!listeners) {
    return listeners;
  }
  var newListeners = {};
  var listenersKeys = Object.keys(listeners);
  for (var i = 0; i < listenersKeys.length; i++) {
    var currentKey = listenersKeys[i];
    newListeners["on" + currentKey.charAt(0).toUpperCase() + currentKey.slice(1)] = listeners[currentKey];
  }
  return newListeners;
}

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/getTabIndex.js
var DISABLED_TABINDEX = -1;
var DEFAULT_TABINDEX = 0;
var getTabIndex = function(tabIndex, disabled, useDefaultTabIndexWhenDisabled) {
  var parsedTabIndex = typeof tabIndex === "string" ? parseInt(tabIndex, void 0) : tabIndex;
  if (parsedTabIndex === NaN) {
    return void 0;
  }
  return parsedTabIndex !== void 0 ? parsedTabIndex : disabled ? useDefaultTabIndexWhenDisabled ? void 0 : DISABLED_TABINDEX : DEFAULT_TABINDEX;
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/isRtl.js
function isRtl(element) {
  return Boolean(canUseDOM && element && getComputedStyle(element).direction === "rtl");
}
function getDir(element, initialDir) {
  if (!initialDir && canUseDOM && element) {
    var rtlCandidate = window.getComputedStyle(element).direction;
    if (rtlCandidate) {
      return rtlCandidate;
    }
  }
  return initialDir;
}

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/validate-package.js
function validatePackage(packageMetadata2) {
  var licensing = index_esm_exports;
  var ls = typeof licensing !== "undefined" && licensing.validatePackage ? licensing : licensing.default;
  if (ls && ls.validatePackage) {
    ls.validatePackage(packageMetadata2);
  } else {
    var message = "License activation failed for ".concat(packageMetadata2.name, "\n");
    message += "The @progress/kendo-licensing script is not loaded.\n";
    message += "See ".concat(packageMetadata2.licensingDocsUrl, " for more information.\n");
    console.warn(message);
  }
}

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/theme.js
var kendoThemeMaps = {
  sizeMap: {
    small: "sm",
    medium: "md",
    large: "lg"
  },
  roundedMap: {
    small: "sm",
    medium: "md",
    large: "lg"
  }
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/browser-support.service.js
var getDocument = function() {
  return typeof document !== "undefined" ? document : {};
};
var BrowserSupportService = (
  /** @class */
  function() {
    function BrowserSupportService2() {
    }
    Object.defineProperty(BrowserSupportService2.prototype, "scrollbarWidth", {
      get: function() {
        var document2 = getDocument();
        if (!this.scrollbar && document2 && document2.createElement) {
          var div = document2.createElement("div");
          div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
          div.innerHTML = "&nbsp;";
          document2.body.appendChild(div);
          this.scrollbar = div.offsetWidth - div.scrollWidth;
          document2.body.removeChild(div);
        }
        return this.scrollbar;
      },
      enumerable: false,
      configurable: true
    });
    return BrowserSupportService2;
  }()
);

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/icons/constants.js
var SIZE_CLASSES = {
  "default": "",
  "xsmall": "k-icon-xs",
  "small": "k-icon-sm",
  "medium": "k-icon-md",
  "large": "k-icon-lg",
  "xlarge": "k-icon-xl",
  "xxlarge": "k-icon-xxl",
  "xxxlarge": "k-icon-xxxl"
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/icons/FontIcon.js
var allVue3 = vue_runtime_esm_bundler_exports;
var gh2 = allVue3.h;
var isV33 = allVue3.version && allVue3.version[0] === "3";
var FontIconVue2 = {
  name: "KendoFontIcon",
  // @ts-ignore
  emits: {
    click: null
  },
  props: {
    name: String,
    themeColor: {
      type: String
    },
    size: {
      type: String
    },
    flip: {
      type: String
    },
    id: String,
    ariaLabel: String,
    title: String,
    tabIndex: Number
  },
  computed: {
    fontClassNames: function fontClassNames() {
      var _a3;
      var _b = this.$props, name = _b.name, flip = _b.flip, size = _b.size, themeColor = _b.themeColor;
      return _a3 = {
        "k-icon": true
      }, _a3["k-i-" + name] = name, _a3["k-color-" + themeColor] = themeColor, _a3["k-flip-h"] = flip === "horizontal" || flip === "both", _a3["k-flip-v"] = flip === "vertical" || flip === "both", _a3[SIZE_CLASSES[size]] = size, _a3;
    }
  },
  // @ts-ignore
  setup: !isV33 ? void 0 : function() {
    var v3 = !!isV33;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render2(createElement) {
    var h = gh2 || createElement;
    var _a3 = this.$props, id = _a3.id, title = _a3.title, tabIndex = _a3.tabIndex, ariaLabel2 = _a3.ariaLabel;
    return h("span", {
      "class": this.fontClassNames,
      id,
      attrs: this.v3 ? void 0 : {
        id,
        title,
        "aria-label": ariaLabel2,
        tabIndex,
        role: "presentation"
      },
      title,
      "aria-label": ariaLabel2,
      tabIndex,
      role: "presentation",
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    });
  },
  methods: {
    handleClick: function handleClick(e) {
      this.$emit("click", e);
    }
  }
};
var FontIcon = FontIconVue2;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/icons/SvgIcon.js
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var allVue4 = vue_runtime_esm_bundler_exports;
var gh3 = allVue4.h;
var isV34 = allVue4.version && allVue4.version[0] === "3";
var SvgIconVue2 = {
  name: "KendoSvgIcon",
  // @ts-ignore
  emits: {
    click: null
  },
  props: {
    name: String,
    icon: Object,
    themeColor: {
      type: String
    },
    size: {
      type: String
    },
    flip: {
      type: String
    },
    id: String,
    ariaLabel: String,
    title: String,
    viewBox: {
      type: String,
      default: "0 0 24 24"
    },
    tabIndex: Number,
    svgClassName: String,
    svgStyle: Object
  },
  computed: {
    wrapperClass: function wrapperClass() {
      var _a3;
      var _b = this.$props, name = _b.name, flip = _b.flip, size = _b.size, themeColor = _b.themeColor;
      return _a3 = {
        "k-svg-icon": true
      }, _a3["k-color-" + themeColor] = themeColor, _a3["k-svg-i-" + name] = name, _a3["k-flip-h"] = flip === "horizontal" || flip === "both", _a3["k-flip-v"] = flip === "vertical" || flip === "both", _a3[SIZE_CLASSES[size]] = size, _a3;
    }
  },
  // @ts-ignore
  setup: !isV34 ? void 0 : function() {
    var v3 = !!isV34;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render3(createElement) {
    var h = gh3 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a3 = this.$props, svgClassName = _a3.svgClassName, icon = _a3.icon, id = _a3.id, tabIndex = _a3.tabIndex, svgStyle = _a3.svgStyle, viewBox = _a3.viewBox, title = _a3.title, ariaLabel2 = _a3.ariaLabel;
    var innerHTML = icon ? icon.content : void 0;
    var attrs = {
      id,
      title,
      "aria-hidden": true,
      tabIndex,
      ariaLabel: ariaLabel2,
      focusable: "false",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: icon ? icon.viewBox : viewBox
    };
    var svg = h("svg", __assign2(__assign2({}, attrs), {
      attrs: this.v3 ? void 0 : attrs,
      domProps: this.v3 ? void 0 : {
        innerHTML
      },
      innerHTML,
      "class": svgClassName,
      style: svgStyle
    }), icon ? [] : [defaultSlot]);
    return h("span", {
      "class": this.wrapperClass,
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    }, [svg]);
  },
  methods: {
    handleClick: function handleClick2(e) {
      this.$emit("click", e);
    }
  }
};
var SvgIcon = SvgIconVue2;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/icons/Icon.js
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var allVue5 = vue_runtime_esm_bundler_exports;
var gh4 = allVue5.h;
var isV35 = allVue5.version && allVue5.version[0] === "3";
var IconVue2 = {
  name: "KendoIcon",
  // @ts-ignore
  emits: {
    click: null
  },
  inject: {
    kendoIcons: {
      default: {
        type: "svg",
        icons: {}
      }
    }
  },
  props: {
    name: String,
    icon: Object,
    title: String,
    themeColor: {
      type: String
    },
    size: {
      type: String
    },
    flip: {
      type: String
    },
    id: String,
    ariaLabel: String,
    viewBox: {
      type: String,
      default: "0 0 24 24"
    },
    tabIndex: Number
  },
  // @ts-ignore
  setup: !isV35 ? void 0 : function() {
    var v3 = !!isV35;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render4(createElement) {
    var h = gh4 || createElement;
    var _a3 = this.$props, name = _a3.name, icon = _a3.icon, themeColor = _a3.themeColor, size = _a3.size, flip = _a3.flip, id = _a3.id, viewBox = _a3.viewBox, tabIndex = _a3.tabIndex, title = _a3.title, ariaLabel2 = _a3.ariaLabel;
    var svg = name && this.kendoIcons && this.kendoIcons.icons && this.kendoIcons.icons[name] || icon;
    var renderSVG = this.kendoIcons && this.kendoIcons.type === "svg" && svg !== void 0;
    var newSize = this.kendoIcons && this.kendoIcons.size ? this.kendoIcons.size : size;
    var newFlip = this.kendoIcons && this.kendoIcons.flip ? this.kendoIcons.flip : flip;
    var resolvedName = name || (icon && icon.name ? icon.name : void 0);
    var commonProps = {
      themeColor,
      size: newSize,
      flip: newFlip,
      id,
      tabIndex,
      title,
      ariaLabel: ariaLabel2
    };
    var fontIcon = h(FontIcon, __assign3(__assign3({}, commonProps), {
      name: resolvedName,
      attrs: this.v3 ? void 0 : __assign3(__assign3({}, commonProps), {
        name: resolvedName
      }),
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    }));
    var svgIcon = h(SvgIcon, __assign3(__assign3({}, commonProps), {
      icon: svg,
      viewBox,
      name: resolvedName,
      attrs: this.v3 ? void 0 : __assign3(__assign3({}, commonProps), {
        icon: svg,
        viewBox,
        name: resolvedName
      }),
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    }));
    return renderSVG ? svgIcon : fontIcon;
  },
  methods: {
    handleClick: function handleClick3(e) {
      this.$emit("click", e);
    }
  }
};
var Icon = IconVue2;

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/icons/getIconName.js
var getIconName = function(iconName) {
  return iconName && iconName.indexOf("k-i-") !== -1 ? iconName.split("k-i-")[1] : iconName;
};

// node_modules/@progress/kendo-vue-layout/node_modules/@progress/kendo-vue-common/dist/es/navigation.js
var FOCUSABLE_ELEMENTS = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var Navigation = (
  /** @class */
  function() {
    function Navigation2(options) {
      var _this = this;
      this.rovingTabIndex = true;
      this.update = function() {
      };
      this.focusNextIndex = function(target, indexDiff) {
        var all = _this.elements;
        var index = all.indexOf(target) + indexDiff;
        index = index < 0 ? all.length - 1 : index;
        _this.focusElement(all[index % all.length], target);
      };
      this.tabIndex = options.tabIndex || 0;
      this.root = options.root;
      this.selectors = options.selectors;
      this.rovingTabIndex = options.rovingTabIndex !== void 0 ? options.rovingTabIndex : true;
      this.mouseEvents = options.mouseEvents || {};
      this.keyboardEvents = options.keyboardEvents || {};
    }
    Object.defineProperty(Navigation2.prototype, "elements", {
      get: function() {
        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(","))) : [];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "first", {
      get: function() {
        return this.root && this.root.querySelector(this.selectors.join(",")) || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "last", {
      get: function() {
        var all = this.elements;
        return all[all.length - 1] || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "current", {
      get: function() {
        return this.elements.find(function(el) {
          return el.matches(":focus");
        }) || null;
      },
      enumerable: false,
      configurable: true
    });
    Navigation2.prototype.focusNext = function(target) {
      this.focusNextIndex(target, 1);
    };
    Navigation2.prototype.focusPrevious = function(target) {
      this.focusNextIndex(target, -1);
    };
    Navigation2.prototype.triggerKeyboardEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var key = ev.key === " " ? "Space" : ev.key;
      var eventType = ev.type;
      if (target && this.keyboardEvents[eventType][key]) {
        this.keyboardEvents[eventType][key].call(void 0, target, this, ev);
      }
    };
    Navigation2.prototype.triggerMouseEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var eventType = ev.type;
      if (target) {
        this.mouseEvents[eventType].call(void 0, target, this, ev);
      }
    };
    Navigation2.prototype.focusElement = function(element, previous) {
      if (element) {
        if (previous) {
          if (this.rovingTabIndex) {
            previous.removeAttribute("tabindex");
          }
          previous.classList.remove("k-focus");
        }
        if (this.rovingTabIndex) {
          element.setAttribute("tabindex", String(this.tabIndex));
        }
        element.focus({ preventScroll: true });
      }
    };
    return Navigation2;
  }()
);

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStripNavigationItem.js
var allVue6 = vue_runtime_esm_bundler_exports;
var gh5 = allVue6.h;
var isV36 = allVue6.version && allVue6.version[0] === "3";
var TabStripNavigationItemVue2 = {
  name: "KendoTabStripNavigationItem",
  // @ts-ignore
  emits: {
    select: null
  },
  props: {
    active: Boolean,
    disabled: Boolean,
    index: Number,
    title: {
      type: String,
      default: "Untitled"
    },
    id: {
      type: String
    },
    titleRender: [String, Function, Object],
    first: {
      type: Boolean,
      default: void 0
    },
    last: {
      type: Boolean,
      default: void 0
    }
  },
  computed: {
    itemClasses: {
      get: function get() {
        var _a3;
        var _b = this.$props, active = _b.active, disabled = _b.disabled, first = _b.first, last = _b.last;
        return _a3 = {}, _a3["k-first"] = first, _a3["k-last"] = last, _a3["k-item"] = true, _a3["k-disabled"] = disabled, _a3["k-active"] = active, _a3;
      }
    }
  },
  methods: {
    onClick: function onClick() {
      if (!this.$props.disabled) {
        this.$emit("select", this.$props.index);
      }
    }
  },
  // @ts-ignore
  setup: !isV36 ? void 0 : function() {
    var v3 = !!isV36;
    return {
      v3
    };
  },
  render: function render5(createElement) {
    var h = gh5 || createElement;
    var _a3 = this.$props, active = _a3.active, _b = _a3.title, title = _b === void 0 ? "Untitled" : _b, id = _a3.id;
    var titleRender = this.$props.titleRender;
    var titleElement = getTemplate.call(this, {
      h,
      template: titleRender,
      defaultRendering: title,
      additionalProps: this.$props,
      additionalListeners: {
        select: this.onClick
      }
    });
    return h("li", {
      "aria-selected": active,
      attrs: this.v3 ? void 0 : {
        "aria-selected": active,
        role: "tab",
        id
      },
      role: "tab",
      id,
      onClick: this.onClick,
      on: this.v3 ? void 0 : {
        "click": this.onClick
      },
      "class": this.itemClasses
    }, [h("span", {
      "class": "k-link"
    }, [titleElement])]);
  }
};
var TabStripNavigationItem = TabStripNavigationItemVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStripNavigation.js
var allVue7 = vue_runtime_esm_bundler_exports;
var gh6 = allVue7.h;
var isV37 = allVue7.version && allVue7.version[0] === "3";
var ref = allVue7.ref;
var inject = allVue7.inject;
var times = function times2(count) {
  return Array.apply(null, Array(count));
};
var TabStripNavigationVue2 = {
  name: "KendoTabStripNavigation",
  // @ts-ignore
  emits: {
    select: null,
    keydown: null
  },
  props: {
    tabs: Array,
    selected: Number,
    tabIndex: Number,
    tabPosition: String
  },
  computed: {
    wrapperNavClasses: {
      get: function get2() {
        return {
          "k-tabstrip-items-wrapper": true,
          "k-hstack": this.$props.tabPosition === "top" || this.$props.tabPosition === "bottom",
          "k-vstack": this.$props.tabPosition === "left" || this.$props.tabPosition === "right"
        };
      }
    },
    navClasses: {
      get: function get3() {
        return {
          "k-tabstrip-items": true,
          "k-reset": true
        };
      }
    }
  },
  // @ts-ignore
  setup: !isV37 ? void 0 : function() {
    var v3 = !!isV37;
    return {
      v3
    };
  },
  render: function render6(createElement) {
    var h = gh6 || createElement;
    var _a3 = this.$props, tabs = _a3.tabs, selected2 = _a3.selected;
    var tabsCount = tabs.length;
    var renderTabs = function renderTabs2() {
      return times(tabsCount).map(function(_, index, array) {
        return (
          // @ts-ignore function children
          h(TabStripNavigationItem, {
            key: index,
            active: selected2 === index,
            attrs: this.v3 ? void 0 : {
              active: selected2 === index,
              disabled: tabs[index].disabled,
              index,
              title: tabs[index].title,
              id: tabs[index].id,
              titleRender: tabs[index].titleRender,
              first: index === 0,
              last: index === array.length - 1
            },
            disabled: tabs[index].disabled,
            index,
            title: tabs[index].title,
            id: tabs[index].id,
            titleRender: tabs[index].titleRender,
            first: index === 0,
            last: index === array.length - 1,
            onSelect: this.onSelect,
            on: this.v3 ? void 0 : {
              "select": this.onSelect
            }
          })
        );
      }, this);
    };
    return h("div", {
      "class": this.wrapperNavClasses
    }, [h("ul", {
      "class": this.navClasses,
      role: "tablist",
      attrs: this.v3 ? void 0 : {
        role: "tablist",
        tabindex: this.$props.tabIndex
      },
      tabindex: this.$props.tabIndex,
      onKeydown: this.onKeyDown,
      on: this.v3 ? void 0 : {
        "keydown": this.onKeyDown
      }
    }, [renderTabs.call(this)])]);
  },
  methods: {
    onKeyDown: function onKeyDown(e) {
      this.$emit("keydown", e);
    },
    onSelect: function onSelect(idx) {
      this.$emit("select", idx);
    }
  }
};
var TabStripNavigation = TabStripNavigationVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/utils.js
var getTabs = function(curTabs, children) {
  var that = this;
  var foundTabs = [];
  children.forEach(function(child) {
    if (that.v3 && child.children && child.children.length) {
      foundTabs = getTabs.call(that, curTabs, child.children);
    }
    if (child && child.tag && child.tag.toLowerCase().indexOf("tab") !== -1 || child.type && child.type.name && child.type.name.toLowerCase().indexOf("kendotabstriptab") !== -1) {
      foundTabs.push(child);
    }
  });
  return foundTabs;
};

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStripContent.js
var allVue8 = vue_runtime_esm_bundler_exports;
var gh7 = allVue8.h;
var isV38 = allVue8.version && allVue8.version[0] === "3";
var ref2 = allVue8.ref;
var inject2 = allVue8.inject;
var TabStripContentVue2 = {
  name: "KendoTabStripContent",
  props: {
    showAll: Boolean,
    animation: Boolean,
    tabs: Array,
    selected: Number,
    hasTabs: Boolean
  },
  created: function created2() {
    this.contentId = guid();
  },
  // @ts-ignore
  setup: !isV38 ? void 0 : function() {
    var v3 = !!isV38;
    return {
      v3
    };
  },
  data: function data() {
    return {
      midAnimation: false
    };
  },
  computed: {
    animationClass: function animationClass() {
      var that = this;
      return this.tabs.map(function(_t, idx) {
        var visible = idx === that.$props.selected;
        return {
          "k-fade-appear": that.animation && !visible,
          "k-fade-enter-active": that.animation && visible
        };
      });
    }
  },
  render: function render7(createElement) {
    var h = gh7 || createElement;
    var _a3 = this.$props, tabs = _a3.tabs, selected2 = _a3.selected, showAll = _a3.showAll, hasTabs = _a3.hasTabs;
    var selectedTab = tabs && typeof selected2 === "number" && tabs[selected2];
    var defaultSlots = getDefaultSlots(this);
    var innerTabs = hasTabs ? tabs : getTabs.call(this, [], defaultSlots || []);
    var tabStyles = selected2 < innerTabs.length && selected2 > -1;
    var contentClasses = classNames({
      "k-content": tabStyles
    }, {
      "k-active": tabStyles
    }, selectedTab && selectedTab.contentClassName);
    var renderChild = function renderChild2(tab, idx) {
      var visible = idx === this.$props.selected;
      var animationStyle = {
        position: "initial",
        height: visible ? void 0 : "0px",
        width: visible ? void 0 : "0px"
      };
      var content = hasTabs ? getTemplate.call(this, {
        h,
        template: tab.content,
        defaultRendering: null,
        additionalProps: {
          dataItem: tab
        }
      }) : tab;
      var tabPanel = h("div", {
        role: "tabpanel",
        attrs: this.v3 ? void 0 : {
          role: "tabpanel",
          "aria-expanded": true,
          id: String(this.contentId + idx)
        },
        "aria-expanded": true,
        id: String(this.contentId + idx),
        key: idx
      }, [content]);
      return (hasTabs ? this.animation : true) ? (
        // @ts-ignore function children
        h(Fade, {
          appear: this.v3 ? true : visible,
          attrs: this.v3 ? void 0 : {
            appear: this.v3 ? true : visible,
            enter: this.$props.animation,
            exit: this.$props.keepTabsMounted
          },
          key: idx,
          "class": this.animationClass[idx],
          enter: this.$props.animation,
          exit: this.$props.keepTabsMounted,
          style: animationStyle
        }, this.v3 ? function() {
          return [tabPanel];
        } : [tabPanel])
      ) : h("div", {
        "class": visible ? void 0 : "k-hidden"
      }, [tabPanel]);
    };
    var renderContent = function renderContent2() {
      return innerTabs.map(function(tab, idx) {
        return renderChild.call(this, tab, idx);
      }, this);
    };
    return h("div", {
      "class": contentClasses,
      style: this.$props.style
    }, [renderContent.call(this)]);
  }
};
var TabStripContent = TabStripContentVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-vue-layout",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1693312682,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStrip.js
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var allVue9 = vue_runtime_esm_bundler_exports;
var gh8 = allVue9.h;
var isV39 = allVue9.version && allVue9.version[0] === "3";
var ref3 = allVue9.ref;
var inject3 = allVue9.inject;
var TabStripVue2 = {
  name: "KendoTabStrip",
  // @ts-ignore
  emits: {
    select: null
  },
  props: {
    animation: {
      type: Boolean,
      default: true
    },
    selected: Number,
    tabContentStyle: Object,
    tabPosition: {
      type: String,
      default: "top"
    },
    tabs: {
      type: Array,
      default: void 0
    },
    tabIndex: Number,
    dir: String
  },
  data: function data2() {
    return {
      currentShowAll: true,
      currentTabs: []
    };
  },
  computed: {
    compTabs: function compTabs() {
      return this.tabs !== void 0 ? this.tabs.map(function(tab) {
        var content = templateRendering.call(this, tab.content, getListeners.call(this));
        var titleRender = templateRendering.call(this, tab.titleRender, getListeners.call(this));
        return __assign4(__assign4({}, tab), {
          content,
          titleRender
        });
      }, this) : this.currentTabs;
    }
  },
  provide: function provide() {
    return {
      addRenderTitle: this.addRenderTitle,
      addTab: this.addTab,
      removeTab: this.removeTab
    };
  },
  created: function created3() {
    var _a3;
    var _this = this;
    this.keyBinding = (_a3 = {}, _a3[Keys.left] = function() {
      return _this.prevNavigatableTab();
    }, _a3[Keys.right] = function() {
      return _this.nextNavigatableTab();
    }, _a3[Keys.down] = function() {
      return _this.nextNavigatableTab();
    }, _a3[Keys.up] = function() {
      return _this.prevNavigatableTab();
    }, _a3[Keys.home] = function() {
      return 0;
    }, _a3[Keys.end] = function() {
      return _this.compTabs.length - 1;
    }, _a3);
    validatePackage(packageMetadata);
  },
  watch: {
    selected: function selected(_prevIndex, _nextIndex) {
      if (this.$props.animation) {
        this.currentShowAll = false;
        this.$nextTick(function() {
          this.currentShowAll = true;
        });
      }
    }
  },
  methods: {
    addRenderTitle: function addRenderTitle(currentId, titleTemplate) {
      var indexToUpdate = this.compTabs.findIndex(function(e) {
        return e.tabId === currentId;
      });
      if (this.v3) {
        this.compTabs[indexToUpdate].titleRender = titleTemplate;
      } else {
        this.compTabs[indexToUpdate] = __assign4(__assign4({}, this.compTabs[indexToUpdate]), {
          titleRender: titleTemplate
        });
      }
    },
    addTab: function addTab(newTab) {
      this.currentTabs.push(newTab);
    },
    removeTab: function removeTab(currentId) {
      var indexToRemove = this.currentTabs.findIndex(function(e) {
        return e.tabId === currentId;
      });
      this.currentTabs.splice(indexToRemove, 1);
    },
    onSelect: function onSelect2(index) {
      if (this.$props.selected !== index) {
        this.$emit("select", {
          selected: index
        });
      }
    },
    onKeyDown: function onKeyDown2(event) {
      var handler;
      switch (event.keyCode) {
        case Keys.left:
          handler = this.keyBinding[this.invertKeys(Keys.left, Keys.right)];
          break;
        case Keys.right:
          handler = this.keyBinding[this.invertKeys(Keys.right, Keys.left)];
          break;
        case Keys.up:
          handler = this.keyBinding[Keys.up];
          break;
        case Keys.down:
          handler = this.keyBinding[Keys.down];
          break;
        case Keys.home:
          handler = this.keyBinding[Keys.home];
          break;
        case Keys.end:
          handler = this.keyBinding[Keys.end];
          break;
        default:
          break;
      }
      if (handler) {
        event.preventDefault();
        this.onSelect(handler());
      }
    },
    invertKeys: function invertKeys(original, inverted) {
      var rtl = this.$el && getComputedStyle(this.$el).direction === "rtl" || false;
      return rtl ? inverted : original;
    },
    firstNavigatableTab: function firstNavigatableTab() {
      var length = this.compTabs.length;
      if (length) {
        for (var i = 0; i < length; i++) {
          if (!this.compTabs[i].disabled) {
            return i;
          }
        }
      }
    },
    lastNavigatableTab: function lastNavigatableTab() {
      var length = this.compTabs.length;
      if (length) {
        for (var i = length - 1; i > 0; i--) {
          if (!this.compTabs[i].disabled) {
            return i;
          }
        }
      }
    },
    prevNavigatableTab: function prevNavigatableTab() {
      var length = this.compTabs.length;
      var selected2 = this.$props.selected;
      var index = selected2 ? selected2 - 1 : -1;
      if (index < 0) {
        return this.lastNavigatableTab();
      }
      if (length) {
        for (var i = index; i > -1; i--) {
          if (!this.compTabs[i].disabled) {
            return i;
          }
          if (i === 0) {
            return this.lastNavigatableTab();
          }
        }
      }
    },
    nextNavigatableTab: function nextNavigatableTab() {
      var length = this.compTabs.length;
      var selected2 = this.$props.selected;
      var index = selected2 ? selected2 + 1 : 1;
      if (index >= length) {
        return this.firstNavigatableTab();
      }
      if (length) {
        for (var i = index; i < length; i++) {
          if (!this.compTabs[i].disabled) {
            return i;
          }
          if (i + 1 === length) {
            return this.firstNavigatableTab();
          }
        }
      }
    }
  },
  // @ts-ignore
  setup: !isV39 ? void 0 : function() {
    var v3 = !!isV39;
    return {
      v3
    };
  },
  render: function render8(createElement) {
    var _a3;
    var h = gh8 || createElement;
    var _b = this.$props, tabPosition = _b.tabPosition, _c = _b.tabIndex, tabIndex = _c === void 0 ? 0 : _c;
    var bottom = tabPosition === "bottom";
    var componentClasses = classNames("k-widget", "k-tabstrip", (_a3 = {}, _a3["k-tabstrip-left"] = tabPosition === "left", _a3["k-tabstrip-right"] = tabPosition === "right", _a3["k-tabstrip-bottom"] = tabPosition === "bottom", _a3["k-tabstrip-top"] = tabPosition === "top", _a3));
    var renderContent = function renderContent2(currentTabProps) {
      var selected2 = currentTabProps.selected, tabContentStyle = currentTabProps.tabContentStyle;
      var defaultSlots = getDefaultSlots(this);
      var tabContentProps = {
        index: selected2,
        animation: this.$props.animation,
        tabs: this.compTabs,
        hasTabs: this.tabs !== void 0,
        selected: selected2,
        tabContentStyle,
        showAll: this.currentShowAll
      };
      return h(TabStripContent, __assign4(__assign4({}, tabContentProps), {
        attrs: this.v3 ? void 0 : __assign4({}, tabContentProps)
      }), this.v3 ? function() {
        return defaultSlots;
      } : [defaultSlots]);
    };
    return h("div", {
      dir: this.$props.dir,
      attrs: this.v3 ? void 0 : {
        dir: this.$props.dir
      },
      "class": componentClasses
    }, [!bottom && // @ts-ignore function children
    h(TabStripNavigation, {
      tabs: this.compTabs,
      attrs: this.v3 ? void 0 : {
        tabs: this.compTabs,
        selected: this.$props.selected,
        tabContentStyle: this.$props.tabContentStyle,
        tabIndex
      },
      selected: this.$props.selected,
      tabContentStyle: this.$props.tabContentStyle,
      onSelect: this.onSelect,
      on: this.v3 ? void 0 : {
        "select": this.onSelect,
        "keydown": this.onKeyDown
      },
      onKeydown: this.onKeyDown,
      tabIndex
    }), renderContent.call(this, this.$props), bottom && // @ts-ignore function children
    h(TabStripNavigation, {
      tabs: this.compTabs,
      attrs: this.v3 ? void 0 : {
        tabs: this.compTabs,
        selected: this.$props.selected,
        tabContentStyle: this.$props.tabContentStyle,
        tabIndex
      },
      selected: this.$props.selected,
      tabContentStyle: this.$props.tabContentStyle,
      onSelect: this.onSelect,
      on: this.v3 ? void 0 : {
        "select": this.onSelect,
        "keydown": this.onKeyDown
      },
      onKeydown: this.onKeyDown,
      tabIndex
    })]);
  }
};
var TabStrip = TabStripVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/tabstrip/TabStripTab.js
var allVue10 = vue_runtime_esm_bundler_exports;
var gh9 = allVue10.h;
var isV310 = allVue10.version && allVue10.version[0] === "3";
var ref4 = allVue10.ref;
var inject4 = allVue10.inject;
var TabStripTabVue2 = {
  name: "KendoTabStripTab",
  props: {
    disabled: Boolean,
    contentClassName: String,
    title: String,
    id: String,
    titleRender: [String, Function, Object]
  },
  inject: {
    addRenderTitle: {
      default: null
    },
    addTab: {
      default: null
    },
    removeTab: {
      default: null
    }
  },
  created: function created4() {
    this.tabId = guid();
    this.addTab({
      title: this.$props.title,
      tabId: this.tabId,
      id: this.id,
      disabled: this.$props.disabled,
      contentClassName: this.$props.contentClassName
    });
  },
  destroyed: !!isV310 ? void 0 : function() {
    this.removeTab(this.tabId);
  },
  // @ts-ignore
  unmounted: function unmounted2() {
    this.removeTab(this.tabId);
  },
  // @ts-ignore
  setup: !isV310 ? void 0 : function() {
    var v3 = !!isV310;
    return {
      v3
    };
  },
  render: function render9(createElement) {
    var h = gh9 || createElement;
    var titleRender = this.$props.titleRender ? templateRendering.call(this, this.$props.titleRender, getListeners.call(this)) : null;
    if (titleRender) {
      this.addRenderTitle(this.tabId, titleRender);
    }
    return h("div", [getDefaultSlots(this)]);
  }
};
var TabStripTab = TabStripTabVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/interfaces/Enums.js
var avatarShape;
(function(avatarShape2) {
  avatarShape2["CIRCLE"] = "circle";
  avatarShape2["SQUARE"] = "square";
  avatarShape2["ROUNDED"] = "rounded";
  avatarShape2["RECTANGLE"] = "rectangle";
})(avatarShape || (avatarShape = {}));
var avatarType;
(function(avatarType2) {
  avatarType2["TEXT"] = "text";
  avatarType2["IMAGE"] = "image";
  avatarType2["ICON"] = "icon";
})(avatarType || (avatarType = {}));
var cardOrientation;
(function(cardOrientation2) {
  cardOrientation2["HORIZONTAL"] = "horizontal";
  cardOrientation2["VERTICAL"] = "vertical";
})(cardOrientation || (cardOrientation = {}));
var cardType;
(function(cardType2) {
  cardType2["DEFAULT"] = "default";
  cardType2["primary"] = "primary";
  cardType2["INFO"] = "info";
  cardType2["SUCCESS"] = "success";
  cardType2["WARNING"] = "warning";
  cardType2["ERROR"] = "error";
})(cardType || (cardType = {}));
var cardActionsLayout;
(function(cardActionsLayout2) {
  cardActionsLayout2["START"] = "start";
  cardActionsLayout2["CENTER"] = "center";
  cardActionsLayout2["END"] = "end";
  cardActionsLayout2["STRETCHED"] = "stretched";
})(cardActionsLayout || (cardActionsLayout = {}));

// node_modules/@progress/kendo-vue-layout/dist/es/card/Card.js
var allVue11 = vue_runtime_esm_bundler_exports;
var gh10 = allVue11.h;
var isV311 = allVue11.version && allVue11.version[0] === "3";
var CardVue2 = {
  name: "KendoCard",
  props: {
    dir: String,
    type: {
      type: String,
      default: cardType.DEFAULT,
      validator: function validator(value2) {
        return ["default", "primary", "info", "success", "warning", "error"].includes(value2);
      }
    },
    orientation: {
      type: String,
      default: cardOrientation.VERTICAL,
      validator: function validator2(value2) {
        return ["horizontal", "vertical"].includes(value2);
      }
    }
  },
  created: function created5() {
    validatePackage(packageMetadata);
  },
  // @ts-ignore
  setup: !isV311 ? void 0 : function() {
    var v3 = !!isV311;
    return {
      v3
    };
  },
  computed: {
    wrapperClass: function wrapperClass2() {
      var _a3;
      var orientationClass = this.$props.orientation !== cardOrientation.HORIZONTAL ? "vertical" : "horizontal";
      return _a3 = {
        "k-card": true
      }, _a3["k-card-".concat(this.$props.type)] = this.$props.type !== cardType.DEFAULT, _a3["k-card-".concat(orientationClass)] = true, _a3;
    }
  },
  render: function render10(createElement) {
    var h = gh10 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      dir: this.$props.dir,
      attrs: this.v3 ? void 0 : {
        dir: this.$props.dir
      },
      "class": this.wrapperClass
    }, [defaultSlots]);
  }
};
var Card = CardVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardHeader.js
var allVue12 = vue_runtime_esm_bundler_exports;
var gh11 = allVue12.h;
var isV312 = allVue12.version && allVue12.version[0] === "3";
var CardHeaderVue2 = {
  name: "KendoCardHeader",
  // @ts-ignore
  setup: !isV312 ? void 0 : function() {
    var v3 = !!isV312;
    return {
      v3
    };
  },
  render: function render11(createElement) {
    var h = gh11 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-header"
    }, [defaultSlots]);
  }
};
var CardHeader = CardHeaderVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardTitle.js
var allVue13 = vue_runtime_esm_bundler_exports;
var gh12 = allVue13.h;
var isV313 = allVue13.version && allVue13.version[0] === "3";
var CardTitleVue2 = {
  name: "KendoCardTitle",
  // @ts-ignore
  setup: !isV313 ? void 0 : function() {
    var v3 = !!isV313;
    return {
      v3
    };
  },
  render: function render12(createElement) {
    var h = gh12 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-title"
    }, [defaultSlots]);
  }
};
var CardTitle = CardTitleVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardBody.js
var allVue14 = vue_runtime_esm_bundler_exports;
var gh13 = allVue14.h;
var isV314 = allVue14.version && allVue14.version[0] === "3";
var CardBodyVue2 = {
  name: "KendoCardBody",
  // @ts-ignore
  setup: !isV314 ? void 0 : function() {
    var v3 = !!isV314;
    return {
      v3
    };
  },
  render: function render13(createElement) {
    var h = gh13 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-body"
    }, [defaultSlots]);
  }
};
var CardBody = CardBodyVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardActions.js
var allVue15 = vue_runtime_esm_bundler_exports;
var gh14 = allVue15.h;
var isV315 = allVue15.version && allVue15.version[0] === "3";
var CardActionsVue2 = {
  name: "KendoCardActions",
  props: {
    layout: {
      type: String,
      default: cardActionsLayout.START,
      validator: function validator3(value2) {
        return ["stretched", "start", "center", "end"].includes(value2);
      }
    },
    orientation: {
      type: String,
      default: cardOrientation.HORIZONTAL,
      validator: function validator4(value2) {
        return ["horizontal", "vertical"].includes(value2);
      }
    }
  },
  // @ts-ignore
  setup: !isV315 ? void 0 : function() {
    var v3 = !!isV315;
    return {
      v3
    };
  },
  computed: {
    wrapperClass: function wrapperClass3() {
      var _a3;
      return _a3 = {
        "k-card-actions": true
      }, _a3["k-card-actions-".concat(this.$props.layout)] = true, _a3["k-card-actions-".concat(this.$props.orientation !== cardOrientation.HORIZONTAL ? "vertical" : "horizontal")] = true, _a3;
    }
  },
  render: function render14(createElement) {
    var h = gh14 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": this.wrapperClass
    }, [defaultSlots]);
  }
};
var CardActions = CardActionsVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardImage.js
var allVue16 = vue_runtime_esm_bundler_exports;
var gh15 = allVue16.h;
var isV316 = allVue16.version && allVue16.version[0] === "3";
var CardImageVue2 = {
  name: "KendoCardImage",
  props: {
    src: String
  },
  // @ts-ignore
  setup: !isV316 ? void 0 : function() {
    var v3 = !!isV316;
    return {
      v3
    };
  },
  render: function render15(createElement) {
    var h = gh15 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("img", {
      "class": "k-card-image",
      src: this.$props.src,
      attrs: this.v3 ? void 0 : {
        src: this.$props.src
      }
    });
  }
};
var CardImage = CardImageVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardSubtitle.js
var allVue17 = vue_runtime_esm_bundler_exports;
var gh16 = allVue17.h;
var isV317 = allVue17.version && allVue17.version[0] === "3";
var CardSubtitleVue2 = {
  name: "KendoCardSubtitle",
  // @ts-ignore
  setup: !isV317 ? void 0 : function() {
    var v3 = !!isV317;
    return {
      v3
    };
  },
  render: function render16(createElement) {
    var h = gh16 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-subtitle"
    }, [defaultSlots]);
  }
};
var CardSubtitle = CardSubtitleVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/CardFooter.js
var allVue18 = vue_runtime_esm_bundler_exports;
var gh17 = allVue18.h;
var isV318 = allVue18.version && allVue18.version[0] === "3";
var CardFooterVue2 = {
  name: "KendoCardFooter",
  // @ts-ignore
  setup: !isV318 ? void 0 : function() {
    var v3 = !!isV318;
    return {
      v3
    };
  },
  render: function render17(createElement) {
    var h = gh17 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-card-footer"
    }, [defaultSlots]);
  }
};
var CardFooter = CardFooterVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/card/Avatar.js
var allVue19 = vue_runtime_esm_bundler_exports;
var gh18 = allVue19.h;
var isV319 = allVue19.version && allVue19.version[0] === "3";
var AvatarVue2 = {
  name: "KendoAvatar",
  props: {
    type: {
      type: String,
      default: avatarType.TEXT,
      validator: function validator5(value2) {
        return ["text", "image", "icon"].includes(value2);
      }
    },
    border: Boolean,
    rounded: {
      type: String,
      default: "medium",
      validator: function validator6(value2) {
        return ["small", "medium", "large", "full"].includes(value2);
      }
    },
    fillMode: {
      type: String,
      default: "solid",
      validator: function validator7(value2) {
        return ["solid", "outline"].includes(value2);
      }
    },
    size: {
      type: String,
      default: "medium",
      validator: function validator8(value2) {
        return ["small", "medium", "large"].includes(value2);
      }
    },
    themeColor: {
      type: String,
      default: "primary",
      validator: function validator9(value2) {
        return ["primary", "secondary", "tertiary", "info", "success", "warning", "error", "dark", "light", "inverse", "inherit"].includes(value2);
      }
    }
  },
  created: function created6() {
    validatePackage(packageMetadata);
  },
  // @ts-ignore
  setup: !isV319 ? void 0 : function() {
    var v3 = !!isV319;
    return {
      v3
    };
  },
  computed: {
    wrapperClass: function wrapperClass4() {
      var _a3;
      var _b = this.$props, border = _b.border, type = _b.type, size = _b.size, rounded = _b.rounded, fillMode = _b.fillMode, themeColor = _b.themeColor;
      return _a3 = {
        "k-avatar-bordered": border,
        "k-avatar": true
      }, _a3["k-avatar-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a3["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a3["k-avatar-".concat(fillMode)] = fillMode, _a3["k-avatar-".concat(fillMode, "-").concat(themeColor)] = Boolean(fillMode && themeColor), _a3;
    },
    innerClass: function innerClass() {
      var _a3;
      return _a3 = {}, _a3["k-avatar-".concat(this.$props.type)] = this.$props.type, _a3;
    }
  },
  render: function render18(createElement) {
    var h = gh18 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": this.wrapperClass
    }, [h("span", {
      "class": this.innerClass
    }, [defaultSlots])]);
  }
};
var Avatar = AvatarVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/messages/main.js
var _a;
var separatorAriaMessage = "drawer.separatorAriaMessage";
var splitterPaneLabel = "splitter.splitterPaneLabel";
var messages = (_a = {}, _a[separatorAriaMessage] = "Separator", _a[splitterPaneLabel] = "Splitter pane", _a);

// node_modules/@progress/kendo-vue-layout/dist/es/drawer/DrawerItem.js
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
var allVue20 = vue_runtime_esm_bundler_exports;
var gh19 = allVue20.h;
var isV320 = allVue20.version && allVue20.version[0] === "3";
var DrawerItemVue2 = {
  name: "KendoDrawerItem",
  // @ts-ignore
  emits: {
    click: null
  },
  props: {
    index: Number,
    text: String,
    icon: String,
    svgIcon: Object,
    separator: Boolean,
    selected: Boolean,
    disabled: Boolean,
    targetItem: [Object, Array]
  },
  inject: {
    kendoDrawer: {
      default: null
    },
    kendoLocalizationService: {
      default: null
    }
  },
  computed: {
    itemClassNames: function itemClassNames() {
      var _a3 = this.$props, disabled = _a3.disabled, selected2 = _a3.selected;
      return {
        "k-drawer-item": true,
        "k-selected": selected2,
        "k-disabled": disabled
      };
    }
  },
  // @ts-ignore
  setup: !isV320 ? void 0 : function() {
    var v3 = !!isV320;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render19(createElement) {
    var h = gh19 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a3 = this.$props, text = _a3.text, icon = _a3.icon, svgIcon = _a3.svgIcon, separator = _a3.separator, disabled = _a3.disabled, selected2 = _a3.selected, tabIndex = _a3.tabIndex;
    var _b = this.kendoDrawer, expanded = _b.expanded, mini = _b.mini, item = _b.item;
    var ariaLabelSeparator = provideLocalizationService(this).toLanguageString(separatorAriaMessage, messages[separatorAriaMessage]);
    return separator ? h("li", {
      "class": "k-drawer-item k-drawer-separator",
      role: "separator",
      attrs: this.v3 ? void 0 : {
        role: "separator",
        "aria-label": ariaLabelSeparator
      },
      "aria-label": ariaLabelSeparator
    }) : h("li", {
      "class": this.itemClassNames,
      role: "menuitem",
      attrs: this.v3 ? void 0 : {
        role: "menuitem",
        "aria-label": text,
        "aria-current": selected2,
        "aria-disabled": disabled,
        tabindex: getTabIndex(tabIndex, disabled)
      },
      "aria-label": text,
      "aria-current": selected2,
      "aria-disabled": disabled,
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      },
      tabindex: getTabIndex(tabIndex, disabled)
    }, [!item ? [(icon || svgIcon) && h(Icon, {
      name: getIconName(icon),
      attrs: this.v3 ? void 0 : {
        name: getIconName(icon),
        icon: svgIcon
      },
      icon: svgIcon
    }), !expanded && mini ? null : h("span", {
      "class": "k-item-text"
    }, [text])] : defaultSlot]);
  },
  methods: {
    focus: function focus(e) {
      if (this.$el) {
        this.$el.focus(e);
      }
    },
    handleClick: function handleClick4() {
      if (!this.disabled) {
        var handle = {
          element: this.$el,
          focus: this.focus,
          props: __assign5(__assign5({}, this.$props), this.$attrs)
        };
        this.$emit("click", handle, this.$props.index);
      }
    }
  }
};
var DrawerItem = DrawerItemVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/drawer/DrawerNavigation.js
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
var allVue21 = vue_runtime_esm_bundler_exports;
var gh20 = allVue21.h;
var isV321 = allVue21.version && allVue21.version[0] === "3";
var DEFAULT_EXPANDED_WIDTH = 240;
var DEFAULT_MINI_WIDTH = 50;
var DEFAULT_ANIMATION = {
  type: "slide",
  duration: 200
};
var NO_ANIMATION = {
  type: "slide",
  duration: 0
};
var DrawerNavigationVue2 = {
  name: "KendoDrawerNavigation",
  props: {
    item: [Object],
    tabIndex: Number
  },
  inject: {
    kendoDrawer: {
      default: null
    }
  },
  computed: {
    navigationClassNames: function navigationClassNames() {
      var position = this.kendoDrawer.position;
      return {
        "k-widget k-drawer": true,
        "k-drawer-start": position === "start",
        "k-drawer-end": position === "end"
      };
    }
  },
  // @ts-ignore
  setup: !isV321 ? void 0 : function() {
    var v3 = !!isV321;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render20(createElement) {
    var h = gh20 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a3 = this.kendoDrawer, animation = _a3.animation, expanded = _a3.expanded, mode = _a3.mode, position = _a3.position, mini = _a3.mini, dir = _a3.dir, width = _a3.width, miniWidth = _a3.miniWidth, items = _a3.items;
    var customSettings = typeof animation !== "boolean" ? animation : animation === false ? NO_ANIMATION : DEFAULT_ANIMATION;
    var navWidth = width ? width : DEFAULT_EXPANDED_WIDTH;
    var navMiniWidth = miniWidth ? miniWidth : DEFAULT_MINI_WIDTH;
    var expandPush = {
      opacity: 1,
      flexBasis: navWidth + "px",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var expandOverlay = {
      opacity: 1,
      transform: "translateX(0px)",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var collapsePush = {
      opacity: !mini ? 0 : 1,
      flexBasis: !mini ? 0 : navMiniWidth + "px",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var collapseOverlay = {
      opacity: 0,
      transform: "translateX(-100%)",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var collapseOverlayRtl = {
      opacity: 0,
      transform: "translateX(100%)",
      WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
      transition: "all " + (customSettings && customSettings.duration) + "ms"
    };
    var collapseOverlayMini = {
      transform: "translateX(0%)",
      WebkitTransitionDuration: (customSettings && customSettings.duration) + "ms",
      transitionDuration: (customSettings && customSettings.duration) + "ms"
    };
    var drawerAnimation = expanded ? mode === "push" ? expandPush : expandOverlay : mode === "push" ? collapsePush : dir === "ltr" && position === "start" || dir === "rtl" && position === "end" ? mini ? collapseOverlayMini : collapseOverlay : mini ? collapseOverlayMini : collapseOverlayRtl;
    var drawerItems = items && h("ul", {
      "class": "k-drawer-items",
      role: "menubar",
      attrs: this.v3 ? void 0 : {
        role: "menubar",
        "aria-orientation": "vertical",
        "aria-expanded": expanded
      },
      "aria-orientation": "vertical",
      "aria-expanded": expanded
    }, [items.map(function(element, index) {
      var item = this.$props.item;
      if (item && !item.type && !item.render) {
        item = templateRendering.call(this, this.$props.item, getListeners.call(this));
      }
      var itemDefaultRendering = (
        // @ts-ignore
        h(DrawerItem, {
          key: index,
          index,
          attrs: this.v3 ? void 0 : {
            index,
            text: element.text,
            icon: element.icon,
            svgIcon: element.svgIcon,
            separator: element.separator,
            selected: element.selected,
            targetItem: element.targetItem
          },
          onClick: this.onSelect,
          on: this.v3 ? void 0 : {
            "click": this.onSelect
          },
          text: element.text,
          icon: element.icon,
          svgIcon: element.svgIcon,
          separator: element.separator,
          selected: element.selected,
          targetItem: element.targetItem
        })
      );
      var itemRendering = getTemplate.call(this, {
        h,
        template: item,
        defaultRendering: itemDefaultRendering,
        additionalProps: __assign6(__assign6({}, element), {
          index
        }),
        additionalListeners: {
          click: this.onSelect
        }
      });
      return itemRendering;
    }, this)]);
    var drawerNavigation = h("div", {
      style: drawerAnimation,
      "class": this.navigationClassNames
    }, [h("div", {
      "class": "k-drawer-wrapper",
      style: !expanded && mini && mode === "overlay" ? {
        width: navMiniWidth + "px"
      } : {
        width: navWidth + "px"
      }
    }, [drawerItems || defaultSlot])]);
    return drawerNavigation;
  },
  methods: {
    focus: function focus2(e) {
      if (this.$el) {
        this.$el.focus(e);
      }
    },
    onSelect: function onSelect3(e, index) {
      this.$emit("select", e, index);
    }
  }
};
var DrawerNavigation = DrawerNavigationVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/drawer/Drawer.js
var allVue22 = vue_runtime_esm_bundler_exports;
var gh21 = allVue22.h;
var isV322 = allVue22.version && allVue22.version[0] === "3";
var DrawerVue2 = {
  name: "KendoDrawer",
  // @ts-ignore
  emits: {
    select: null,
    overlayclick: null
  },
  props: {
    animation: {
      type: [Object, Boolean],
      default: true
    },
    expanded: {
      type: Boolean,
      default: false
    },
    dir: {
      type: String,
      default: "ltr"
    },
    item: [String, Object, Function],
    mode: {
      type: String,
      default: "overlay",
      validator: function validator10(value2) {
        return ["overlay", "push"].includes(value2);
      }
    },
    position: {
      type: String,
      default: "start",
      validator: function validator11(value2) {
        return ["start", "end"].includes(value2);
      }
    },
    items: Array,
    mini: {
      type: Boolean,
      default: false
    },
    tabIndex: Number,
    width: {
      type: Number,
      default: 240
    },
    miniWidth: {
      type: Number,
      default: 50
    }
  },
  created: function created7() {
    validatePackage(packageMetadata);
  },
  data: function data3() {
    var _a3 = this.$props, expanded = _a3.expanded, mode = _a3.mode, position = _a3.position, animation = _a3.animation, mini = _a3.mini, width = _a3.width, miniWidth = _a3.miniWidth, items = _a3.items, item = _a3.item;
    var itemRender = item ? templateRendering.call(this, item, getListeners.call(this)) : void 0;
    return {
      currentDir: "ltr",
      drawer: {
        expanded,
        mode,
        dir: this.currentDir,
        position,
        animation,
        mini,
        width,
        miniWidth,
        items,
        item: itemRender
      }
    };
  },
  mounted: function mounted2() {
    this.currentDir = getDir(this.$el, this.$props.dir);
  },
  updated: function updated() {
    var _a3 = this.$props, expanded = _a3.expanded, mode = _a3.mode, position = _a3.position, animation = _a3.animation, mini = _a3.mini, width = _a3.width, miniWidth = _a3.miniWidth, items = _a3.items, item = _a3.item;
    var itemRender = item ? templateRendering.call(this, item, getListeners.call(this)) : void 0;
    this.drawer.expanded = expanded;
    this.drawer.mode = mode;
    this.drawer.dir = this.currentDir;
    this.drawer.position = position;
    this.drawer.animation = animation;
    this.drawer.mini = mini;
    this.drawer.width = width;
    this.drawer.miniWidth = miniWidth;
    this.drawer.items = items;
    this.drawer.item = itemRender;
  },
  provide: function provide2() {
    return {
      kendoDrawer: this.drawer
    };
  },
  computed: {
    drawerClassNames: function drawerClassNames() {
      var _a3 = this.$props, expanded = _a3.expanded, mode = _a3.mode, mini = _a3.mini;
      return {
        "k-drawer-container": true,
        "k-drawer-expanded": expanded,
        "k-drawer-overlay": mode === "overlay",
        "k-drawer-push": mode === "push",
        "k-drawer-mini": mini
      };
    }
  },
  // @ts-ignore
  setup: !isV322 ? void 0 : function() {
    var v3 = !!isV322;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render21(createElement) {
    var h = gh21 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a3 = this.$props, items = _a3.items, tabIndex = _a3.tabIndex, mode = _a3.mode, expanded = _a3.expanded, item = _a3.item;
    var itemRender = item ? templateRendering.call(this, item, getListeners.call(this)) : void 0;
    return h("div", {
      "class": this.drawerClassNames,
      dir: this.currentDir,
      attrs: this.v3 ? void 0 : {
        dir: this.currentDir,
        tabindex: tabIndex
      },
      tabindex: tabIndex
    }, [mode === "overlay" && expanded && h("div", {
      "class": "k-overlay",
      onClick: this.onOverlayClick,
      on: this.v3 ? void 0 : {
        "click": this.onOverlayClick
      }
    }), items && // @ts-ignore
    h(DrawerNavigation, {
      onSelect: this.handleSelect,
      on: this.v3 ? void 0 : {
        "select": this.handleSelect
      },
      item: itemRender,
      attrs: this.v3 ? void 0 : {
        item: itemRender
      }
    }), defaultSlot]);
  },
  methods: {
    focus: function focus3() {
      if (this.$el) {
        this.$el.focus();
      }
    },
    handleSelect: function handleSelect(itemTarget, itemIndex) {
      if (this.$props.items) {
        this.$emit("select", {
          itemTarget,
          itemIndex,
          component: this
        });
      }
    },
    onOverlayClick: function onOverlayClick(e) {
      this.$emit("overlayclick", e);
    }
  }
};
var Drawer = DrawerVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/drawer/DrawerContent.js
var allVue23 = vue_runtime_esm_bundler_exports;
var gh22 = allVue23.h;
var isV323 = allVue23.version && allVue23.version[0] === "3";
var DrawerContentVue2 = {
  name: "KendoDrawerContent",
  // @ts-ignore
  setup: !isV323 ? void 0 : function() {
    var v3 = !!isV323;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render22(createElement) {
    var h = gh22 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("div", {
      "class": "k-drawer-content"
    }, [defaultSlot]);
  }
};
var DrawerContent = DrawerContentVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/stepper/contants.js
var DEFAULT_ANIMATION_DURATION = 400;
var NO_ANIMATION2 = 0;

// node_modules/@progress/kendo-vue-layout/dist/es/stepper/messages/main.js
var _a2;
var optionalText = "stepper.optionalText";
var ariaLabel = "stepper.ariaLabel";
var messages2 = (_a2 = {}, _a2[optionalText] = "(Optional)", _a2[ariaLabel] = "Progressbar", _a2);

// node_modules/@progress/kendo-vue-layout/dist/es/stepper/Step.js
var allVue24 = vue_runtime_esm_bundler_exports;
var gh23 = allVue24.h;
var isV324 = allVue24.version && allVue24.version[0] === "3";
var inject5 = allVue24.inject;
var StepVue2 = {
  name: "KendoStep",
  props: {
    current: Boolean,
    disabled: Boolean,
    icon: String,
    svgIcon: Object,
    index: Number,
    isValid: {
      type: Boolean,
      default: void 0
    },
    focused: Boolean,
    label: String,
    optional: Boolean,
    tabIndex: {
      type: Number,
      default: 0
    },
    text: String,
    animationDuration: [Boolean, Number],
    isVertical: Boolean,
    item: [String, Object, Boolean, Function],
    linear: Boolean,
    mode: String,
    numOfSteps: Number,
    value: Number,
    successIcon: String,
    successSvgIcon: Object,
    errorIcon: String,
    errorSvgIcon: Object
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  computed: {
    itemClassNames: function itemClassNames2() {
      var _a3 = this.$props, current = _a3.current, disabled = _a3.disabled, focused2 = _a3.focused, index = _a3.index, isValid = _a3.isValid, optional = _a3.optional;
      return {
        "k-step": true,
        "k-step-first": index === 0,
        "k-step-last": this.numOfSteps && index === this.numOfSteps - 1,
        "k-step-done": index < this.value,
        "k-step-current": current,
        "k-step-optional": optional,
        "k-disabled": disabled,
        "k-focus": focused2,
        "k-step-error": isValid !== void 0 && !isValid,
        "k-step-success": isValid
      };
    },
    itemStyles: function itemStyles() {
      var index = this.$props.index;
      var allowClick = !this.linear || index === this.value - 1 || index === this.value || index === this.value + 1;
      return {
        maxWidth: !this.isVertical ? "calc(100% / ".concat(this.numOfSteps, ")") : void 0,
        pointerEvents: !allowClick ? "none" : void 0
      };
    }
  },
  watch: {
    focused: function focused(newValue) {
      this.aElement = this.$refs.aElement;
      if (this.aElement && newValue) {
        this.aElement.focus();
      }
    }
  },
  // @ts-ignore
  setup: !isV324 ? void 0 : function() {
    var v3 = !!isV324;
    var kendoLocalizationService = inject5("kendoLocalizationService", {});
    return {
      v3,
      kendoLocalizationService
    };
  },
  // @ts-ignore
  render: function render23(createElement) {
    var h = gh23 || createElement;
    var defaultSlots = getDefaultSlots(this);
    var _a3 = this.$props, current = _a3.current, disabled = _a3.disabled, focused2 = _a3.focused, icon = _a3.icon, svgIcon = _a3.svgIcon, index = _a3.index, isValid = _a3.isValid, label = _a3.label, optional = _a3.optional, tabIndex = _a3.tabIndex, text = _a3.text, animationDuration = _a3.animationDuration, item = _a3.item, linear = _a3.linear, mode = _a3.mode, value2 = _a3.value, successIcon = _a3.successIcon, successSvgIcon = _a3.successSvgIcon, errorIcon = _a3.errorIcon, errorSvgIcon = _a3.errorSvgIcon;
    var allowClick = !linear || index === value2 - 1 || index === value2 || index === value2 + 1;
    var isInLabel = mode === "labels" || (Boolean(icon) || Boolean(svgIcon)) && Boolean(label);
    var localizationService = provideLocalizationService(this);
    var localizeMessage = function localizeMessage2(message) {
      return localizationService.toLanguageString(message, messages2[message]);
    };
    var optionalMessage = localizeMessage(optionalText);
    var progressAnimation = typeof animationDuration === "number" ? animationDuration : animationDuration !== false ? DEFAULT_ANIMATION_DURATION : NO_ANIMATION2;
    var validationIconNames = isValid ? successIcon || "check-circle" : errorIcon || "exclamation-circle";
    var validationSvgIcon = isValid ? successSvgIcon || checkOutlineIcon : errorSvgIcon || exclamationCircleIcon;
    var validationIcons = h(Icon, {
      "class": "k-step-indicator-icon",
      name: getIconName(validationIconNames),
      attrs: this.v3 ? void 0 : {
        name: getIconName(validationIconNames),
        icon: validationSvgIcon,
        "aria-hidden": "true"
      },
      icon: validationSvgIcon,
      "aria-hidden": "true"
    });
    var stepIndicator = function stepIndicator2() {
      return mode !== "labels" ? h("span", {
        "class": "k-step-indicator",
        "aria-hidden": true,
        attrs: this.v3 ? void 0 : {
          "aria-hidden": true
        },
        style: {
          transitionDuration: progressAnimation + "ms"
        }
      }, [icon || svgIcon ? !isInLabel && isValid !== void 0 ? validationIcons : h(Icon, {
        "class": "k-step-indicator-icon",
        name: icon,
        attrs: this.v3 ? void 0 : {
          name: icon,
          icon: svgIcon
        },
        icon: svgIcon
      }) : isValid !== void 0 ? validationIcons : h("span", {
        "class": "k-step-indicator-text"
      }, [text ? text : index + 1])]) : null;
    };
    var stepLabel = function stepLabel2() {
      return h("span", {
        "class": "k-step-label"
      }, [label && h("span", {
        "class": "k-step-text"
      }, [label]), isInLabel && isValid !== void 0 && validationIcons, optional && h("span", {
        "class": "k-step-label-optional"
      }, [optionalMessage])]);
    };
    return h("li", {
      "class": this.itemClassNames,
      style: this.itemStyles
    }, [h("a", {
      ref: "aElement",
      "class": "k-step-link",
      title: label ? label : void 0,
      attrs: this.v3 ? void 0 : {
        title: label ? label : void 0,
        tabIndex: tabIndex ? tabIndex : current ? 0 : -1,
        "aria-current": current ? true : void 0,
        "aria-disabled": disabled || !allowClick || void 0,
        "aria-invalid": isValid !== void 0 && !isValid || void 0
      },
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick,
        "focusin": this.handleFocus
      },
      onFocusin: this.handleFocus,
      tabIndex: tabIndex ? tabIndex : current ? 0 : -1,
      "aria-current": current ? true : void 0,
      "aria-disabled": disabled || !allowClick || void 0,
      "aria-invalid": isValid !== void 0 && !isValid || void 0
    }, [!item ? [stepIndicator.call(this), stepLabel.call(this)] : defaultSlots])]);
  },
  methods: {
    focus: function focus4() {
      if (this.$el) {
        focusFirstFocusableChild(this.$el);
      }
    },
    handleClick: function handleClick5(event) {
      if (!this.disabled) {
        this.$emit("change", {
          event,
          value: this.index,
          component: this
        });
      }
    },
    handleFocus: function handleFocus(event) {
      if (!this.disabled) {
        this.$emit("focus", event);
      }
    }
  }
};
var Step = StepVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/stepper/Stepper.js
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
var allVue25 = vue_runtime_esm_bundler_exports;
var gh24 = allVue25.h;
var isV325 = allVue25.version && allVue25.version[0] === "3";
var StepperVue2 = {
  name: "KendoStepper",
  model: {
    event: "changemodel"
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  props: {
    animationDuration: {
      type: [Boolean, Number],
      default: 400
    },
    dir: String,
    disabled: Boolean,
    item: {
      type: [String, Object, Function, Boolean],
      default: void 0
    },
    items: Array,
    linear: Boolean,
    mode: {
      type: String,
      default: "steps",
      validator: function validator12(value2) {
        return ["steps", "labels"].includes(value2);
      }
    },
    orientation: {
      type: String,
      default: "horizontal",
      validator: function validator13(value2) {
        return ["horizontal", "vertical"].includes(value2);
      }
    },
    value: {
      type: Number,
      default: 0
    },
    progressTotal: {
      type: Number
    },
    progress: {
      type: Number
    },
    modelValue: Number,
    successIcon: String,
    errorIcon: String
  },
  created: function created8() {
    validatePackage(packageMetadata);
    this.focusedIdx = this.computedValue !== void 0 ? this.computedValue : 0;
  },
  mounted: function mounted3() {
    this.currentDir = this.$props.dir !== void 0 ? this.$props.dir : isRtl(this.$el) ? "rtl" : "ltr";
  },
  data: function data4() {
    return {
      currentDir: "ltr",
      focusedIdx: 0,
      stepper: {},
      currentFocused: false
    };
  },
  watch: {
    value: function value(newValue) {
      this.focusedIdx = newValue;
    }
  },
  computed: {
    computedValue: function computedValue() {
      return this.$props.modelValue !== void 0 ? this.$props.modelValue : this.$props.value;
    },
    isVertical: function isVertical() {
      return this.$props.orientation === "vertical";
    },
    numOfSteps: function numOfSteps() {
      var items = this.$props.items;
      return items ? items.length : 0;
    },
    stepperClasses: function stepperClasses() {
      return {
        "k-stepper": true,
        "k-stepper-linear": this.$props.linear
      };
    },
    stepperStyles: function stepperStyles() {
      return {
        display: "grid",
        gridTemplateColumns: !this.isVertical ? "repeat(" + this.numOfSteps * 2 + ", 1fr)" : void 0,
        gridTemplateRows: this.isVertical ? "repeat(" + this.numOfSteps * 4 + ", 1fr)" : void 0
      };
    },
    listClasses: function listClasses() {
      return {
        "k-step-list": true,
        "k-step-list-horizontal": !this.isVertical,
        "k-step-list-vertical": this.isVertical
      };
    },
    listStyles: function listStyles() {
      return {
        gridColumnStart: !this.isVertical ? 1 : "",
        gridColumnEnd: !this.isVertical ? -1 : "",
        gridRowStart: this.isVertical ? 1 : "",
        gridRowEnd: this.isVertical ? -1 : ""
      };
    },
    progressbarStyles: function progressbarStyles() {
      return {
        gridColumnStart: !this.isVertical ? 2 : "",
        gridColumnEnd: !this.isVertical ? this.numOfSteps * 2 : "",
        gridRowStart: this.isVertical ? 2 : "",
        gridRowEnd: this.isVertical ? this.numOfSteps * 4 - 2 : ""
      };
    }
  },
  // @ts-ignore
  setup: !isV325 ? void 0 : function() {
    var v3 = !!isV325;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render24(createElement) {
    var h = gh24 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a3 = this.$props, animationDuration = _a3.animationDuration, disabled = _a3.disabled, items = _a3.items, orientation = _a3.orientation;
    var value2 = this.computedValue;
    var animation = typeof animationDuration === "number" ? animationDuration : animationDuration !== false ? DEFAULT_ANIMATION_DURATION : NO_ANIMATION2;
    var localizationService = provideLocalizationService(this);
    var progressbarAriaLabelMessage = localizationService.toLanguageString(ariaLabel, messages2[ariaLabel]);
    var steps = items && items.map(function(element, index) {
      var step = this.$props.item ? templateRendering.call(this, this.$props.item, getListeners.call(this)) : void 0;
      var stepDefaultRendering = (
        // @ts-ignore
        h(Step, {
          key: index,
          index,
          attrs: this.v3 ? void 0 : {
            index,
            disabled: disabled || element.disabled,
            focused: index === this.focusedIdx && this.currentFocused,
            current: index === value2,
            icon: element.icon,
            label: element.label,
            optional: element.optional,
            text: element.text,
            isValid: element.isValid,
            tabIndex: element.tabIndex,
            animationDuration: this.animationDuration,
            isVertical: this.isVertical,
            item: this.item,
            linear: this.linear,
            mode: this.mode,
            numOfSteps: this.numOfSteps,
            value: value2,
            successIcon: this.successIcon,
            errorIcon: this.errorIcon
          },
          disabled: disabled || element.disabled,
          focused: index === this.focusedIdx && this.currentFocused,
          current: index === value2,
          onChange: this.handleChange,
          on: this.v3 ? void 0 : {
            "change": this.handleChange,
            "focus": this.handleFocus
          },
          onFocus: this.handleFocus,
          "class": element.class,
          style: element.style,
          icon: element.icon,
          label: element.label,
          optional: element.optional,
          text: element.text,
          isValid: element.isValid,
          tabIndex: element.tabIndex,
          animationDuration: this.animationDuration,
          isVertical: this.isVertical,
          item: this.item,
          linear: this.linear,
          mode: this.mode,
          numOfSteps: this.numOfSteps,
          value: value2,
          successIcon: this.successIcon,
          errorIcon: this.errorIcon
        })
      );
      var stepRendering = getTemplate.call(this, {
        h,
        template: step,
        defaultRendering: stepDefaultRendering,
        additionalProps: __assign7(__assign7({}, element), {
          disabled: disabled || element.disabled,
          focused: index === this.focusedIdx,
          current: index === value2,
          value: value2
        }),
        additionalListeners: {
          change: this.handleChange,
          focus: this.handleFocus
        }
      });
      return stepRendering;
    }, this);
    return h("nav", {
      tabindex: this.currentFocused ? -1 : 0,
      attrs: this.v3 ? void 0 : {
        tabindex: this.currentFocused ? -1 : 0,
        dir: this.currentDir
      },
      "class": this.stepperClasses,
      style: this.stepperStyles,
      dir: this.currentDir,
      onFocusin: this.handleFocusin,
      on: this.v3 ? void 0 : {
        "focusin": this.handleFocusin,
        "focusout": this.handleFocusout,
        "keydown": this.handleKeyDown
      },
      onFocusout: this.handleFocusout,
      onKeydown: this.handleKeyDown
    }, [
      h("ol", {
        "class": this.listClasses,
        style: this.listStyles
      }, [steps ? steps : defaultSlot]),
      // @ts-ignore
      h(ProgressBar, {
        style: this.progressbarStyles,
        animation: {
          duration: animation
        },
        attrs: this.v3 ? void 0 : {
          animation: {
            duration: animation
          },
          "aria-hidden": true,
          "aria-label": progressbarAriaLabelMessage,
          max: this.progressTotal || this.numOfSteps - 1,
          labelVisible: false,
          orientation,
          reverse: orientation === "vertical",
          value: this.progress || value2,
          disabled,
          tabIndex: -1
        },
        "aria-hidden": true,
        "aria-label": progressbarAriaLabelMessage,
        max: this.progressTotal || this.numOfSteps - 1,
        labelVisible: false,
        orientation,
        reverse: orientation === "vertical",
        value: this.progress || value2,
        disabled,
        tabIndex: -1
      })
    ]);
  },
  methods: {
    focus: function focus5() {
      if (this.$el) {
        focusFirstFocusableChild(this.$el);
      }
    },
    dispatchChangeEvent: function dispatchChangeEvent(event, val) {
      var prevIdx = val === this.computedValue - 1;
      var currIdx = val === this.computedValue;
      var nextIdx = val === this.computedValue + 1;
      var allowClick = !this.linear || prevIdx || currIdx || nextIdx;
      if (this.computedValue !== val && !this.disabled && allowClick) {
        this.focusedIdx = val;
        this.$emit("changemodel", val);
        this.$emit("update:modelValue", val);
        this.$emit("change", {
          component: this,
          event,
          value: val
        });
      }
    },
    handleChange: function handleChange(event) {
      var currentValue = event.value;
      this.dispatchChangeEvent(event, currentValue);
    },
    handleFocus: function handleFocus2(event) {
      if (!this.disabled) {
        this.$emit("focus", event, void 0);
      }
    },
    handleEnter: function handleEnter(event) {
      var newEvent = {
        component: this,
        event,
        value: this.focusedIdx
      };
      this.dispatchChangeEvent(newEvent, this.focusedIdx);
    },
    handleFocusin: function handleFocusin() {
      this.currentFocused = true;
    },
    handleFocusout: function handleFocusout() {
      this.currentFocused = false;
    },
    handleKeyDown: function handleKeyDown(event) {
      var isCurrentRtl = this.currentDir === "rtl";
      var currIndex = this.focusedIdx;
      var maxNavIndex = this.items.length - 1;
      switch (event.keyCode) {
        case Keys.left:
          event.preventDefault();
          if (!isCurrentRtl && currIndex > 0) {
            this.focusedIdx = currIndex - 1;
          }
          if (isCurrentRtl && currIndex < maxNavIndex) {
            this.focusedIdx = currIndex + 1;
          }
          break;
        case Keys.right:
          event.preventDefault();
          if (!isCurrentRtl && currIndex < maxNavIndex) {
            this.focusedIdx = currIndex + 1;
          }
          if (isCurrentRtl && currIndex > 0) {
            this.focusedIdx = currIndex - 1;
          }
          break;
        case Keys.up:
          event.preventDefault();
          if (!isCurrentRtl && currIndex > 0) {
            this.focusedIdx = currIndex - 1;
          }
          if (isCurrentRtl && currIndex > 0) {
            this.focusedIdx = currIndex - 1;
          }
          break;
        case Keys.down:
          event.preventDefault();
          if (!isCurrentRtl && currIndex < maxNavIndex) {
            this.focusedIdx = currIndex + 1;
          }
          if (isCurrentRtl && currIndex < maxNavIndex) {
            this.focusedIdx = currIndex + 1;
          }
          break;
        case Keys.home:
          event.preventDefault();
          this.focusedIdx = 0;
          break;
        case Keys.end:
          event.preventDefault();
          this.focusedIdx = maxNavIndex;
          break;
        case Keys.space:
        case Keys.enter:
          event.preventDefault();
          if (!this.items[currIndex].disabled) {
            this.handleEnter(event);
          }
          break;
        default:
      }
    }
  }
};
var Stepper = StepperVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/itemsIdsUtils.js
var EMPTY_ID = "";
var ZERO_LEVEL_ZERO_ITEM_ID = "0";
var SEPARATOR = "_";
function getItemById(itemId, items) {
  if (isIdZeroLevel(itemId)) {
    return items[Number(itemId)];
  } else {
    var rootParentItem = items[Number(getRootParentId(itemId))];
    return rootParentItem.items ? getItemById(getIdWithoutRootParentId(itemId), rootParentItem.items) : void 0;
  }
}
function getRootParentId(itemId) {
  return isIdEmptyOrZeroLevel(itemId) ? itemId : itemId.split(SEPARATOR)[0];
}
function getIdWithoutRootParentId(itemId) {
  if (isIdEmptyOrZeroLevel(itemId)) {
    return itemId;
  } else {
    var firstSeparatorIndex = itemId.indexOf(SEPARATOR);
    return itemId.substring(firstSeparatorIndex + 1);
  }
}
function getFirstChildId(itemId) {
  return createId("0", itemId);
}
function shouldOpenItem(itemId, lastItemIdToBeOpened) {
  if (lastItemIdToBeOpened.indexOf(itemId) === 0) {
    return lastItemIdToBeOpened.length === itemId.length || lastItemIdToBeOpened.charAt(itemId.length) === SEPARATOR;
  } else {
    return false;
  }
}
function createId(childId, parentId) {
  return parentId ? parentId + SEPARATOR + childId : childId;
}
function getDirectParentId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? EMPTY_ID : itemId.substring(0, lastSeparatorIndex);
}
function isIdEmptyOrZeroLevel(itemId) {
  return itemId === EMPTY_ID || itemId.indexOf(SEPARATOR) < 0;
}
function isIdZeroLevel(itemId) {
  return itemId !== EMPTY_ID && itemId.indexOf(SEPARATOR) < 0;
}
function isIdFirstLevel(itemId) {
  return getSeparatorOccurances(itemId) === 1;
}
function isFirstItemFromSiblings(itemId) {
  return getShortId(itemId) === ZERO_LEVEL_ZERO_ITEM_ID;
}
function getShortId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? itemId : itemId.substring(lastSeparatorIndex + 1);
}
function getDirectSiblingIdForLevelZero(next, shortItemId, siblingsCount) {
  if (!isIdZeroLevel(shortItemId)) {
    return shortItemId;
  }
  return next ? Number(shortItemId) < siblingsCount - 1 ? (Number(shortItemId) + 1).toString() : "0" : Number(shortItemId) > 0 ? (Number(shortItemId) - 1).toString() : (siblingsCount - 1).toString();
}
function getSeparatorOccurances(itemId) {
  return itemId.split(SEPARATOR).length - 1;
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/prepareInputItemsForInternalWork.js
function prepareInputItemsForInternalWork(models) {
  if (models && models.length > 0) {
    return {
      items: convertInputModelsToInternalOnesHelper.call(this, models),
      inputItems: models
    };
  } else {
    return { items: [], inputItems: [] };
  }
}
function copyInputItemWithoutChildren(inputModel) {
  var result = {};
  var text = inputModel.text, url = inputModel.url, icon = inputModel.icon, disabled = inputModel.disabled, cssClass = inputModel.cssClass, popupClass = inputModel.popupClass, cssStyle = inputModel.cssStyle, render54 = inputModel.render, linkRender = inputModel.linkRender, contentRender2 = inputModel.contentRender, data15 = inputModel.data;
  if (text !== void 0) {
    result.text = text;
  }
  if (url !== void 0) {
    result.url = url;
  }
  if (icon !== void 0) {
    result.icon = icon;
  }
  if (disabled !== void 0) {
    result.disabled = disabled;
  }
  if (cssClass !== void 0) {
    result.cssClass = cssClass;
  }
  if (popupClass !== void 0) {
    result.popupClass = popupClass;
  }
  if (cssStyle !== void 0) {
    result.cssStyle = cssStyle;
  }
  if (render54 !== void 0) {
    result.render = templateRendering.call(this, render54, getListeners.call(this));
  }
  if (linkRender !== void 0) {
    result.linkRender = templateRendering.call(this, linkRender, getListeners.call(this));
  }
  if (contentRender2 !== void 0) {
    result.contentRender = templateRendering.call(this, contentRender2, getListeners.call(this));
  }
  if (data15 !== void 0) {
    result.data = data15;
  }
  return result;
}
function convertInputModelsToInternalOnesHelper(inputModels, parentId) {
  var result = [];
  for (var index = 0; index < inputModels.length; index++) {
    var inputModel = inputModels[index];
    var internalModel = copyInputItemWithoutChildren.call(this, inputModel);
    internalModel.id = createId(index.toString(), parentId);
    internalModel.isLastFromSiblings = index === inputModels.length - 1;
    internalModel.items = copyOrCreateModelChildren.call(this, inputModel, internalModel);
    result.push(internalModel);
  }
  return result;
}
function copyOrCreateModelChildren(inputModel, internalModel) {
  if (inputModel.contentRender) {
    return [{
      contentParentItemId: internalModel.id,
      id: createId(ZERO_LEVEL_ZERO_ITEM_ID, internalModel.id),
      isLastFromSiblings: true,
      contentRender: templateRendering.call(this, inputModel.contentRender, getListeners.call(this)),
      items: []
    }];
  } else if (inputModel.items) {
    return convertInputModelsToInternalOnesHelper.call(this, inputModel.items, internalModel.id);
  } else {
    return [];
  }
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/getNewItemIdUponKeyboardNavigation.js
var NO_WHITESPACE_REGEX = /\S/;
function getNewItemIdUponKeyboardNavigation(sourceItems, sourceItemId, keyCode, key, isMenuVertical, isDirectionRightToLeft) {
  var sourceItem = getItemById2();
  switch (keyCode) {
    case Keys.left:
      return getIdUponLeftKey();
    case Keys.right:
      return getIdUponRightKey();
    case Keys.up:
      return getIdUponUpKey();
    case Keys.down:
      return getIdUponDownKey();
    case Keys.enter:
    case Keys.space:
      return getIdUponEnterAndSpaceKeys();
    case Keys.home:
      return getIdUponHomeKey();
    case Keys.end:
      return getIdUponEndKey();
    case Keys.esc:
      return getIdUponEscKey();
    default:
      return isSearchableKey() ? getIdUponSearchByChar() : sourceItemId;
  }
  function getIdUponLeftKey() {
    if (isMenuVertical) {
      return isDirectionRightToLeft ? getIdUponRightKeyForVerticalMenu() : getIdUponLeftKeyForVerticalMenu();
    } else {
      return isDirectionRightToLeft ? getIdUponRightKeyForHorizontalMenu() : getIdUponLeftKeyForHorizontalMenu();
    }
  }
  function getIdUponRightKey() {
    if (isMenuVertical) {
      return isDirectionRightToLeft ? getIdUponLeftKeyForVerticalMenu() : getIdUponRightKeyForVerticalMenu();
    } else {
      return isDirectionRightToLeft ? getIdUponLeftKeyForHorizontalMenu() : getIdUponRightKeyForHorizontalMenu();
    }
  }
  function getIdUponDownKey() {
    if (isMenuVertical) {
      return getNextSiblingId();
    } else {
      if (isIdZeroLevel(sourceItemId)) {
        return getFirstChildIdForEnabledItemOrGetSameId();
      } else {
        return getNextSiblingId();
      }
    }
  }
  function getIdUponUpKey() {
    if (isMenuVertical) {
      return getPrevSiblingId();
    } else {
      if (isIdZeroLevel(sourceItemId)) {
        return getLastChildIdForEnabledItemOrGetSameId();
      } else {
        return getPrevSiblingId();
      }
    }
  }
  function getIdUponEnterAndSpaceKeys() {
    if (sourceItem.disabled) {
      return sourceItemId;
    } else {
      return hasChildren() ? getFirstChildId(sourceItemId) : getRootParentId(sourceItemId);
    }
  }
  function getIdUponHomeKey() {
    return getSiblings()[0].id;
  }
  function getIdUponEndKey() {
    var siblings = getSiblings();
    return siblings[siblings.length - 1].id;
  }
  function getIdUponEscKey() {
    return isIdZeroLevel(sourceItemId) ? sourceItemId : getDirectParentId(sourceItemId);
  }
  function getIdUponSearchByChar() {
    var searchChar = key.toLowerCase();
    var siblings = getSiblings();
    var currentItemIndex = Number(getShortId(sourceItemId));
    var itemsToSearch = siblings.slice(currentItemIndex + 1).concat(siblings.slice(0, currentItemIndex + 1));
    var matchedSibling = itemsToSearch.find(function(item) {
      return (item.text || "").toLowerCase().startsWith(searchChar);
    });
    return matchedSibling ? matchedSibling.id : sourceItemId;
  }
  function getIdUponLeftKeyForHorizontalMenu() {
    if (isIdZeroLevel(sourceItemId)) {
      return getPrevSiblingId();
    } else if (isIdFirstLevel(sourceItemId)) {
      return getFirstChildIdForEnabledItemOrGetSameId(getPrevSiblingId(getRootParentId(sourceItemId)));
    } else {
      return getDirectParentId(sourceItemId);
    }
  }
  function getIdUponLeftKeyForVerticalMenu() {
    if (isIdZeroLevel(sourceItemId)) {
      return getLastChildIdForEnabledItemOrGetSameId();
    } else {
      return getDirectParentId(sourceItemId);
    }
  }
  function getIdUponRightKeyForHorizontalMenu() {
    if (isIdZeroLevel(sourceItemId)) {
      return getNextSiblingId();
    } else {
      return getFirstChildIdForEnabledItemOrGetSameId(hasChildren() ? sourceItemId : getNextSiblingId(getRootParentId(sourceItemId)));
    }
  }
  function getIdUponRightKeyForVerticalMenu() {
    return getFirstChildIdForEnabledItemOrGetSameId(isIdZeroLevel(sourceItemId) || hasChildren() ? sourceItemId : getNextSiblingId(getRootParentId(sourceItemId)));
  }
  function getFirstChildIdForEnabledItemOrGetSameId(itemId) {
    return getFirstOrLastChildIdForEnabledItemOrGetSameId(true, itemId);
  }
  function getLastChildIdForEnabledItemOrGetSameId(itemId) {
    return getFirstOrLastChildIdForEnabledItemOrGetSameId(false, itemId);
  }
  function isSearchableKey() {
    return key.length === 1 && NO_WHITESPACE_REGEX.test(key);
  }
  function getItemById2(itemId, items) {
    if (itemId === void 0) {
      itemId = sourceItemId;
    }
    if (items === void 0) {
      items = sourceItems;
    }
    return getItemById(itemId, items);
  }
  function hasChildren(itemId) {
    return getItemById2(itemId).items.length > 0;
  }
  function getPrevSiblingId(itemId) {
    return getSiblingId(false, itemId);
  }
  function getNextSiblingId(itemId) {
    return getSiblingId(true, itemId);
  }
  function getLastChildId(itemId) {
    var itemChildren = getItemById2(itemId).items;
    return itemChildren[itemChildren.length - 1].id;
  }
  function getSiblings() {
    return isIdZeroLevel(sourceItemId) ? sourceItems : getItemById2(getDirectParentId(sourceItemId), sourceItems).items;
  }
  function getFirstOrLastChildIdForEnabledItemOrGetSameId(getFirstChild, itemId) {
    if (itemId === void 0) {
      itemId = sourceItemId;
    }
    var item = getItemById2(itemId);
    if (hasChildren(itemId) && !item.disabled) {
      return getFirstChild ? getFirstChildId(itemId) : getLastChildId(itemId);
    } else {
      return itemId;
    }
  }
  function getSiblingId(next, itemId) {
    if (itemId === void 0) {
      itemId = sourceItemId;
    }
    if (isIdZeroLevel(itemId)) {
      return getDirectSiblingIdForLevelZero(next, itemId, sourceItems.length);
    } else {
      var directParentId = getDirectParentId(itemId);
      var shortId = getShortId(itemId);
      var siblingsCount = getItemById2(directParentId).items.length;
      return createId(getDirectSiblingIdForLevelZero(next, shortId, siblingsCount), directParentId);
    }
  }
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/hoverDelay.js
function getHoverOpenDelay(props) {
  if (props.hoverOpenDelay !== void 0) {
    return props.hoverOpenDelay;
  } else {
    return props.openOnClick ? 0 : 100;
  }
}
function getHoverCloseDelay(props) {
  return props.hoverCloseDelay !== void 0 ? props.hoverCloseDelay : 100;
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/consts.js
var POPUP_ALIGN = {
  vertical: "top",
  horizontal: "left"
};
var POPUP_ALIGN_RTL = {
  vertical: "top",
  horizontal: "right"
};
var VERTICAL_COLLISION = {
  vertical: "flip",
  horizontal: "fit"
};
var HORIZONTAL_COLLISION = {
  vertical: "fit",
  horizontal: "flip"
};
var POPUP_SETTINGS_RTL = {
  downward: {
    anchorAlign: {
      vertical: "bottom",
      horizontal: "right"
    },
    popupAlign: POPUP_ALIGN_RTL,
    collision: VERTICAL_COLLISION
  },
  leftward: {
    anchorAlign: {
      vertical: "top",
      horizontal: "left"
    },
    popupAlign: POPUP_ALIGN_RTL,
    collision: HORIZONTAL_COLLISION
  }
};
var POPUP_SETTINGS = {
  downward: {
    anchorAlign: {
      vertical: "bottom",
      horizontal: "left"
    },
    popupAlign: POPUP_ALIGN,
    collision: VERTICAL_COLLISION
  },
  rightward: {
    anchorAlign: {
      vertical: "top",
      horizontal: "right"
    },
    popupAlign: POPUP_ALIGN,
    collision: HORIZONTAL_COLLISION
  }
};

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/misc.js
function getPopupSettings(itemId, isMenuVertical, isDirectionRightToLeft) {
  var childrenPosition = getChildrenPosition(itemId, isMenuVertical, isDirectionRightToLeft);
  if (isDirectionRightToLeft) {
    return childrenPosition === "downward" ? POPUP_SETTINGS_RTL.downward : POPUP_SETTINGS_RTL.leftward;
  } else {
    return childrenPosition === "downward" ? POPUP_SETTINGS.downward : POPUP_SETTINGS.rightward;
  }
}
function getChildrenPosition(itemId, isMenuVertical, isDirectionRightToLeft) {
  if (isIdZeroLevel(itemId)) {
    if (isMenuVertical) {
      return isDirectionRightToLeft ? "leftward" : "rightward";
    } else {
      return "downward";
    }
  } else {
    return isDirectionRightToLeft ? "leftward" : "rightward";
  }
}
function convertBoolDirectionToString(isDirectionRightToLeft) {
  return isDirectionRightToLeft ? "rtl" : "ltr";
}
function getDOMElementId(menuGuid, itemId) {
  return "".concat(menuGuid, "_").concat(itemId);
}

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/MenuItemLink.js
var allVue26 = vue_runtime_esm_bundler_exports;
var gh25 = allVue26.h;
var isV326 = allVue26.version && allVue26.version[0] === "3";
var MenuItemLinkVue2 = {
  name: "KendoMenuItemLink",
  props: {
    opened: Boolean,
    focused: Boolean,
    url: String
  },
  computed: {
    menuItemClassName: function menuItemClassName() {
      return {
        "k-link": true,
        "k-menu-link": true,
        "k-active": this.$props.opened,
        "k-focus": this.$props.focused
      };
    }
  },
  // @ts-ignore
  setup: !isV326 ? void 0 : function() {
    var v3 = !!isV326;
    return {
      v3
    };
  },
  render: function render25(createElement) {
    var h = gh25 || createElement;
    var defaultSlot = getDefaultSlots(this);
    if (this.$props.url) {
      return h("a", {
        "class": this.menuItemClassName,
        role: "presentation",
        attrs: this.v3 ? void 0 : {
          role: "presentation",
          href: this.$props.url,
          tabindex: -1
        },
        href: this.$props.url,
        tabindex: -1
      }, [defaultSlot]);
    } else {
      return h("span", {
        "class": this.menuItemClassName,
        role: "presentation",
        attrs: this.v3 ? void 0 : {
          role: "presentation"
        }
      }, [defaultSlot]);
    }
  }
};
var MenuItemLink = MenuItemLinkVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/MenuItemArrow.js
var allVue27 = vue_runtime_esm_bundler_exports;
var gh26 = allVue27.h;
var isV327 = allVue27.version && allVue27.version[0] === "3";
var downArrowClass = "caret-alt-down";
var rightArrowClass = "caret-alt-right";
var leftArrowClass = "caret-alt-left";
var MenuItemArrowVue2 = {
  name: "KendoMenuItemArrow",
  props: {
    itemId: String,
    dir: String,
    verticalMenu: Boolean
  },
  // @ts-ignore
  setup: !isV327 ? void 0 : function() {
    var v3 = !!isV327;
    return {
      v3
    };
  },
  render: function render26(createElement) {
    var h = gh26 || createElement;
    return h("span", {
      "class": "k-menu-expand-arrow",
      "aria-hidden": "true",
      attrs: this.v3 ? void 0 : {
        "aria-hidden": "true"
      }
    }, [h(Icon, {
      name: this.getArrowName(),
      attrs: this.v3 ? void 0 : {
        name: this.getArrowName(),
        role: "presentation"
      },
      role: "presentation"
    })]);
  },
  methods: {
    getArrowName: function getArrowName() {
      var childrenPosition = getChildrenPosition(this.$props.itemId, this.$props.verticalMenu === true, this.$props.dir === "rtl");
      return childrenPosition === "downward" ? downArrowClass : childrenPosition === "rightward" ? rightArrowClass : childrenPosition === "leftward" ? leftArrowClass : "";
    }
  }
};
var MenuItemArrow = MenuItemArrowVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/MenuItemInternal.js
var allVue28 = vue_runtime_esm_bundler_exports;
var gh27 = allVue28.h;
var isV328 = allVue28.version && allVue28.version[0] === "3";
var ref5 = allVue28.ref;
var MenuItemInternalVue2 = {
  name: "KendoMenuItemInternal",
  // @ts-ignore
  emits: {
    "keydown": null,
    "mouseover": null,
    "mouseleave": null,
    "blur": null,
    "focus": null,
    "click": null,
    "mousedown": null
  },
  props: {
    item: Object,
    focusedItemId: String,
    lastItemIdToBeOpened: String,
    tabbableItemId: String,
    itemRender: [String, Object, Function],
    linkRender: [String, Object, Function],
    isMenuVertical: Boolean,
    isDirectionRightToLeft: Boolean,
    menuGuid: String,
    originalItemNeeded: Function
  },
  created: function created9() {
    this.itemElement = null;
    this.prevFocusedItemId = this.$props.focusedItemId;
    this.isFirstRender = true;
    this._anchor = guid();
  },
  data: function data5() {
    return {
      opened: false
    };
  },
  mounted: function mounted4() {
    this.itemElement = getRef(this, "kendoAnchor", this._anchor);
    var focusedItemId2 = this.$props.focusedItemId;
    var currentItemId = this.$props.item.id;
    if (focusedItemId2 && focusedItemId2 === currentItemId && this.itemElement) {
      this.itemElement.focus();
    }
    this.isFirstRender = false;
  },
  watch: {
    focusedItemId: function focusedItemId(_, oldValue) {
      this.prevFocusedItemId = oldValue;
    }
  },
  updated: function updated2() {
    var focusedItemId2 = this.$props.focusedItemId;
    var currentItemId = this.$props.item.id;
    if (focusedItemId2) {
      if (this.prevFocusedItemId !== focusedItemId2 && focusedItemId2 === currentItemId && !this.itemElement.contains(document.activeElement)) {
        this.itemElement.focus();
      }
    } else if (document.activeElement === this.itemElement) {
      this.itemElement.blur();
    }
  },
  computed: {
    currentItemRender: function currentItemRender() {
      return this.$props.item.render || this.$props.itemRender;
    },
    currentLinkRender: function currentLinkRender() {
      return this.$props.item.linkRender || this.$props.linkRender;
    },
    contentRender: function contentRender() {
      return this.$props.item.contentParentItemId ? this.$props.item.contentRender : null;
    },
    currentOpened: function currentOpened() {
      var props = this.$props;
      return props.item.items.length > 0 && shouldOpenItem(props.item.id, props.lastItemIdToBeOpened) && // HACK: Wait for the second render because otherwise the scenario of
      // popup inside popup throws an error (for example, hover of item with id '0_0').
      !this.isFirstRender;
    },
    currentFocused: function currentFocused() {
      var focusedItemId2 = this.$props.focusedItemId;
      var currentItemId = this.$props.item.id;
      return focusedItemId2 === currentItemId;
    },
    popupClassName: function popupClassName() {
      var _a3;
      return classNames((_a3 = {
        "k-menu-popup": true,
        "k-rtl": this.$props.isDirectionRightToLeft
      }, _a3[this.item.popupClass] = this.item.popupClass, _a3));
    },
    menuItemClassName: function menuItemClassName2() {
      var _a3;
      var item = this.$props.item;
      return _a3 = {
        "k-item": true,
        "k-menu-item": true,
        "k-first": isFirstItemFromSiblings(item.id),
        "k-last": item.isLastFromSiblings,
        "k-disabled": item.disabled
      }, _a3[item.cssClass ? item.cssClass : ""] = item.cssClass, _a3;
    }
  },
  // @ts-ignore
  setup: !isV328 ? void 0 : function() {
    var v3 = !!isV328;
    var kendoAnchorRef = ref5(null);
    return {
      v3,
      kendoAnchorRef
    };
  },
  render: function render27(createElement) {
    var _this = this;
    var h = gh27 || createElement;
    var item = this.$props.item;
    var itemId = item.id;
    var renderContent = function renderContent2() {
      var parentItemId = this.$props.item.contentParentItemId;
      var contentRender2 = function contentRender3(args) {
        return getTemplate.call(this, {
          h,
          template: this.contentRender,
          additionalProps: args
        });
      };
      return h("div", {
        "class": "k-content",
        role: "presentation",
        attrs: this.v3 ? void 0 : {
          role: "presentation"
        }
      }, [contentRender2.call(this, {
        item: this.handleOriginalItemNeeded(parentItemId),
        itemId: parentItemId
      })]);
    };
    var renderMenuIconIfApplicable = function renderMenuIconIfApplicable2() {
      return this.$props.item.icon ? h(Icon, {
        name: this.$props.item.icon,
        attrs: this.v3 ? void 0 : {
          name: this.$props.item.icon
        },
        key: "0"
      }) : null;
    };
    var renderArrowIfApplicable = function renderArrowIfApplicable2() {
      return this.$props.item.items.length > 0 ? (
        // @ts-ignore
        h(MenuItemArrow, {
          itemId: this.$props.item.id,
          attrs: this.v3 ? void 0 : {
            itemId: this.$props.item.id,
            verticalMenu: this.$props.isMenuVertical,
            dir: convertBoolDirectionToString(this.$props.isDirectionRightToLeft)
          },
          verticalMenu: this.$props.isMenuVertical,
          dir: convertBoolDirectionToString(this.$props.isDirectionRightToLeft),
          key: "2"
        })
      ) : null;
    };
    var originalItem = this.$props.originalItemNeeded(item.id);
    var renderMenuItemLink = function renderMenuItemLink2() {
      var _this2 = this;
      var defaultItemRender = h("span", {
        "class": "k-menu-link-text"
      }, [item.text]);
      var textOrItemRender = getTemplate.call(this, {
        h,
        template: this.currentItemRender,
        defaultRendering: defaultItemRender,
        additionalProps: {
          item: originalItem,
          itemId: item.id,
          key: "1"
        }
      });
      var defaultLink = (
        // @ts-ignore function children
        h(MenuItemLink, {
          url: item.url,
          attrs: this.v3 ? void 0 : {
            url: item.url,
            opened: this.currentOpened,
            focused: this.currentFocused
          },
          opened: this.currentOpened,
          focused: this.currentFocused
        }, this.v3 ? function() {
          return [[renderMenuIconIfApplicable.call(_this2), textOrItemRender, renderArrowIfApplicable.call(_this2)]];
        } : [[renderMenuIconIfApplicable.call(_this2), textOrItemRender, renderArrowIfApplicable.call(_this2)]])
      );
      return getTemplate.call(this, {
        h,
        template: this.currentLinkRender,
        defaultRendering: defaultLink,
        additionalProps: {
          item: originalItem,
          itemId: item.id,
          opened: this.currentOpened,
          dir: convertBoolDirectionToString(this.$props.isDirectionRightToLeft)
        }
      });
    };
    var renderPopupIfOpened = function renderPopupIfOpened2() {
      var _this3 = this;
      var _a3 = getPopupSettings(itemId, this.$props.isMenuVertical, this.$props.isDirectionRightToLeft), anchorAlign = _a3.anchorAlign, popupAlign = _a3.popupAlign, collision = _a3.collision;
      return (
        // @ts-ignore function children
        h(Popup, {
          anchor: this._anchor,
          attrs: this.v3 ? void 0 : {
            anchor: this._anchor,
            show: this.currentOpened,
            popupClass: this.popupClassName,
            anchorAlign,
            popupAlign,
            collision,
            animate: false
          },
          show: this.currentOpened,
          popupClass: this.popupClassName,
          anchorAlign,
          popupAlign,
          collision,
          animate: false,
          key: "1"
        }, this.v3 ? function() {
          return [
            // @ts-ignore
            h(MenuItemInternalsList, {
              parentItemId: itemId,
              attrs: _this3.v3 ? void 0 : {
                parentItemId: itemId,
                items: _this3.$props.item.items,
                menuGuid: _this3.$props.menuGuid,
                focusedItemId: _this3.$props.focusedItemId,
                lastItemIdToBeOpened: _this3.$props.lastItemIdToBeOpened,
                tabbableItemId: _this3.$props.tabbableItemId,
                itemRender: _this3.$props.itemRender,
                linkRender: _this3.$props.linkRender,
                isMenuVertical: _this3.$props.isMenuVertical,
                isDirectionRightToLeft: _this3.$props.isDirectionRightToLeft,
                originalItemNeeded: _this3.handleOriginalItemNeeded
              },
              items: _this3.$props.item.items,
              menuGuid: _this3.$props.menuGuid,
              focusedItemId: _this3.$props.focusedItemId,
              lastItemIdToBeOpened: _this3.$props.lastItemIdToBeOpened,
              tabbableItemId: _this3.$props.tabbableItemId,
              itemRender: _this3.$props.itemRender,
              linkRender: _this3.$props.linkRender,
              isMenuVertical: _this3.$props.isMenuVertical,
              isDirectionRightToLeft: _this3.$props.isDirectionRightToLeft,
              "class": "k-group k-menu-group k-menu-group-md k-reset",
              onMouseover: _this3.handleItemMouseOver,
              on: _this3.v3 ? void 0 : {
                "mouseover": _this3.handleItemMouseOver,
                "mouseleave": _this3.handleItemMouseLeave,
                "mousedown": _this3.handleMouseDown,
                "blur": _this3.handleItemMouseBlur,
                "focus": _this3.handleItemMouseFocus,
                "click": _this3.handleClick,
                "keydown": _this3.handleKeyDown
              },
              onMouseleave: _this3.handleItemMouseLeave,
              onMousedown: _this3.handleMouseDown,
              onBlur: _this3.handleItemMouseBlur,
              onFocus: _this3.handleItemMouseFocus,
              onClick: _this3.handleClick,
              onKeydown: _this3.handleKeyDown,
              originalItemNeeded: _this3.handleOriginalItemNeeded
            })
          ];
        } : [h(MenuItemInternalsList, {
          parentItemId: itemId,
          attrs: _this3.v3 ? void 0 : {
            parentItemId: itemId,
            items: _this3.$props.item.items,
            menuGuid: _this3.$props.menuGuid,
            focusedItemId: _this3.$props.focusedItemId,
            lastItemIdToBeOpened: _this3.$props.lastItemIdToBeOpened,
            tabbableItemId: _this3.$props.tabbableItemId,
            itemRender: _this3.$props.itemRender,
            linkRender: _this3.$props.linkRender,
            isMenuVertical: _this3.$props.isMenuVertical,
            isDirectionRightToLeft: _this3.$props.isDirectionRightToLeft,
            originalItemNeeded: _this3.handleOriginalItemNeeded
          },
          items: _this3.$props.item.items,
          menuGuid: _this3.$props.menuGuid,
          focusedItemId: _this3.$props.focusedItemId,
          lastItemIdToBeOpened: _this3.$props.lastItemIdToBeOpened,
          tabbableItemId: _this3.$props.tabbableItemId,
          itemRender: _this3.$props.itemRender,
          linkRender: _this3.$props.linkRender,
          isMenuVertical: _this3.$props.isMenuVertical,
          isDirectionRightToLeft: _this3.$props.isDirectionRightToLeft,
          "class": "k-group k-menu-group k-menu-group-md k-reset",
          onMouseover: _this3.handleItemMouseOver,
          on: _this3.v3 ? void 0 : {
            "mouseover": _this3.handleItemMouseOver,
            "mouseleave": _this3.handleItemMouseLeave,
            "mousedown": _this3.handleMouseDown,
            "blur": _this3.handleItemMouseBlur,
            "focus": _this3.handleItemMouseFocus,
            "click": _this3.handleClick,
            "keydown": _this3.handleKeyDown
          },
          onMouseleave: _this3.handleItemMouseLeave,
          onMousedown: _this3.handleMouseDown,
          onBlur: _this3.handleItemMouseBlur,
          onFocus: _this3.handleItemMouseFocus,
          onClick: _this3.handleClick,
          onKeydown: _this3.handleKeyDown,
          originalItemNeeded: _this3.handleOriginalItemNeeded
        })])
      );
    };
    return h("li", {
      "class": this.menuItemClassName,
      style: item.cssStyle,
      tabindex: itemId === this.$props.tabbableItemId ? 0 : -1,
      attrs: this.v3 ? void 0 : {
        tabindex: itemId === this.$props.tabbableItemId ? 0 : -1,
        role: "menuitem",
        "aria-disabled": item.disabled ? true : void 0,
        "aria-haspopup": item.items.length > 0 ? true : void 0,
        "aria-expanded": item.items.length > 0 ? this.currentOpened : void 0,
        "aria-label": item.text,
        "aria-owns": this.currentOpened ? getDOMElementId(this.$props.menuGuid, itemId) : void 0
      },
      onMouseover: this.onMouseOver,
      on: this.v3 ? void 0 : {
        "mouseover": this.onMouseOver,
        "mouseleave": this.onMouseLeave,
        "mousedown": function mousedown(event) {
          return _this.handleMouseDown(event);
        },
        "focusout": function focusout() {
          return _this.handleBlur(itemId);
        },
        "focusin": function focusin() {
          return _this.handleFocus(itemId);
        },
        "click": function click(event) {
          return _this.handleClick(event, itemId);
        },
        "keydown": this.handleKeyDown
      },
      onMouseleave: this.onMouseLeave,
      onMousedown: function mousedown(event) {
        return _this.handleMouseDown(event);
      },
      onFocusout: function focusout() {
        return _this.handleBlur(itemId);
      },
      onFocusin: function focusin() {
        return _this.handleFocus(itemId);
      },
      onClick: function click(event) {
        return _this.handleClick(event, itemId);
      },
      onKeydown: this.handleKeyDown,
      role: "menuitem",
      "aria-disabled": item.disabled ? true : void 0,
      "aria-haspopup": item.items.length > 0 ? true : void 0,
      "aria-expanded": item.items.length > 0 ? this.currentOpened : void 0,
      "aria-label": item.text,
      "aria-owns": this.currentOpened ? getDOMElementId(this.$props.menuGuid, itemId) : void 0,
      ref: setRef(this, "kendoAnchor", this._anchor),
      key: "0"
    }, [this.contentRender ? renderContent.call(this) : renderMenuItemLink.call(this), renderPopupIfOpened.call(this)]);
  },
  methods: {
    handleKeyDown: function handleKeyDown2(event) {
      this.$emit("keydown", event);
    },
    handleItemMouseOver: function handleItemMouseOver(event) {
      this.$emit("mouseover", event);
    },
    handleItemMouseLeave: function handleItemMouseLeave(event) {
      this.$emit("mouseleave", event);
    },
    handleItemMouseBlur: function handleItemMouseBlur(event) {
      this.$emit("blur", event);
    },
    handleItemMouseFocus: function handleItemMouseFocus(event) {
      this.$emit("focus", event);
    },
    handleClick: function handleClick6(event, itemId) {
      this.$emit("click", event, itemId);
    },
    handleBlur: function handleBlur(itemId) {
      this.$emit("blur", itemId);
    },
    handleFocus: function handleFocus3(itemId) {
      this.$emit("focus", itemId);
    },
    handleMouseDown: function handleMouseDown(event) {
      this.$emit("mousedown", event);
    },
    handleOriginalItemNeeded: function handleOriginalItemNeeded(event) {
      return this.$props.originalItemNeeded(event);
    },
    onMouseOver: function onMouseOver(event) {
      this.$emit("mouseover", this.$props.item.id);
      event.stopPropagation();
    },
    onMouseLeave: function onMouseLeave(event) {
      this.$emit("mouseleave", this.$props.item.id);
      event.stopPropagation();
    }
  }
};
var MenuItemInternal = MenuItemInternalVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/MenuItemInternalsList.js
var allVue29 = vue_runtime_esm_bundler_exports;
var gh28 = allVue29.h;
var isV329 = allVue29.version && allVue29.version[0] === "3";
var MenuItemInternalsListVue2 = {
  name: "KendoMenuItemInternalsList",
  // @ts-ignore
  emits: {
    "keydown": null,
    "mouseover": null,
    "mouseleave": null,
    "blur": null,
    "focus": null,
    "click": null,
    "mousedown": null
  },
  props: {
    items: Array,
    parentItemId: {
      type: String,
      default: void 0
    },
    focusedItemId: String,
    lastItemIdToBeOpened: String,
    tabbableItemId: String,
    itemRender: [String, Object, Function],
    linkRender: [String, Object, Function],
    isMenuVertical: Boolean,
    isDirectionRightToLeft: Boolean,
    menuGuid: String,
    originalItemNeeded: Function
  },
  // @ts-ignore
  setup: !isV329 ? void 0 : function() {
    var v3 = !!isV329;
    return {
      v3
    };
  },
  render: function render28(createElement) {
    var h = gh28 || createElement;
    var parentItemId = this.$props.parentItemId;
    var renderChildItems = function renderChildItems2() {
      return this.$props.items.length > 0 ? this.$props.items.map(function(item, index) {
        return (
          // @ts-ignore
          h(MenuItemInternal, {
            item,
            attrs: this.v3 ? void 0 : {
              item,
              isMenuVertical: this.$props.isMenuVertical,
              isDirectionRightToLeft: this.$props.isDirectionRightToLeft,
              focusedItemId: this.$props.focusedItemId,
              lastItemIdToBeOpened: this.$props.lastItemIdToBeOpened,
              tabbableItemId: this.$props.tabbableItemId,
              itemRender: this.$props.itemRender,
              linkRender: this.$props.linkRender,
              menuGuid: this.$props.menuGuid,
              originalItemNeeded: this.handleOriginalItemNeeded
            },
            isMenuVertical: this.$props.isMenuVertical,
            isDirectionRightToLeft: this.$props.isDirectionRightToLeft,
            focusedItemId: this.$props.focusedItemId,
            lastItemIdToBeOpened: this.$props.lastItemIdToBeOpened,
            tabbableItemId: this.$props.tabbableItemId,
            itemRender: this.$props.itemRender,
            linkRender: this.$props.linkRender,
            menuGuid: this.$props.menuGuid,
            onMouseover: this.handleItemMouseOver,
            on: this.v3 ? void 0 : {
              "mouseover": this.handleItemMouseOver,
              "mouseleave": this.handleItemMouseLeave,
              "mousedown": this.handleItemMouseDown,
              "keydown": this.handleKeyDown,
              "blur": this.handleItemMouseBlur,
              "focus": this.handleItemMouseFocus,
              "click": this.handleItemMouseClick
            },
            onMouseleave: this.handleItemMouseLeave,
            onMousedown: this.handleItemMouseDown,
            onKeydown: this.handleKeyDown,
            onBlur: this.handleItemMouseBlur,
            onFocus: this.handleItemMouseFocus,
            onClick: this.handleItemMouseClick,
            originalItemNeeded: this.handleOriginalItemNeeded,
            key: index
          })
        );
      }, this) : null;
    };
    return h("ul", {
      role: parentItemId !== void 0 ? "menu" : "menubar",
      attrs: this.v3 ? void 0 : {
        role: parentItemId !== void 0 ? "menu" : "menubar",
        id: parentItemId !== void 0 ? getDOMElementId(this.$props.menuGuid, parentItemId) : void 0
      },
      id: parentItemId !== void 0 ? getDOMElementId(this.$props.menuGuid, parentItemId) : void 0
    }, [renderChildItems.call(this)]);
  },
  methods: {
    handleKeyDown: function handleKeyDown3(event) {
      this.$emit("keydown", event);
    },
    handleOriginalItemNeeded: function handleOriginalItemNeeded2(event) {
      return this.$props.originalItemNeeded(event);
    },
    handleItemMouseOver: function handleItemMouseOver2(event) {
      this.$emit("mouseover", event);
    },
    handleItemMouseLeave: function handleItemMouseLeave2(event) {
      this.$emit("mouseleave", event);
    },
    handleItemMouseDown: function handleItemMouseDown(event) {
      this.$emit("mousedown", event);
    },
    handleItemMouseBlur: function handleItemMouseBlur2(event) {
      this.$emit("blur", event);
    },
    handleItemMouseFocus: function handleItemMouseFocus2(event) {
      this.$emit("focus", event);
    },
    handleItemMouseClick: function handleItemMouseClick(event, itemId) {
      this.$emit("click", event, itemId);
    },
    onMouseOver: function onMouseOver2(event) {
      if (this.$props.parentItemId !== void 0) {
        this.$emit("mouseover", this.$props.parentItemId);
        event.stopPropagation();
      }
    },
    onMouseLeave: function onMouseLeave2(event) {
      if (this.$props.parentItemId !== void 0) {
        this.$emit("mouseleave", this.$props.parentItemId);
        event.stopPropagation();
      }
    }
  }
};
var MenuItemInternalsList = MenuItemInternalsListVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/DirectionHolder.js
var DirectionHolder = (
  /** @class */
  function() {
    function DirectionHolder2() {
      this.phase = "Initialized";
    }
    DirectionHolder2.prototype.getIsDirectionRightToLeft = function() {
      return this.isDirectionRightToLeft;
    };
    DirectionHolder2.prototype.setIsDirectionRightToLeft = function(value2) {
      this.phase = this.phase === "NotInitialized" ? "Initialized" : "NewValueReceived";
      this.previousIsDirectionRightToLeft = this.isDirectionRightToLeft;
      this.isDirectionRightToLeft = value2;
    };
    DirectionHolder2.prototype.hasDirectionChanged = function() {
      return this.phase === "NewValueReceived" ? this.previousIsDirectionRightToLeft !== this.isDirectionRightToLeft : false;
    };
    return DirectionHolder2;
  }()
);

// node_modules/@progress/kendo-vue-layout/dist/es/menu/utils/MouseOverHandler.js
var MouseOverHandler = (
  /** @class */
  function() {
    function MouseOverHandler2(openOnClick, resetMenu, openItem) {
      this.openOnClick = openOnClick;
      this.resetMenu = resetMenu;
      this.openItem = openItem;
      this.openOnClick = openOnClick;
      this.isMouseOverEnabled = openOnClick ? false : true;
    }
    Object.defineProperty(MouseOverHandler2.prototype, "OpenOnClick", {
      set: function(value2) {
        if (Boolean(value2) !== Boolean(this.openOnClick)) {
          this.mouseDown = false;
          this.isMouseOverEnabled = value2 ? false : true;
        }
        this.openOnClick = value2;
      },
      enumerable: false,
      configurable: true
    });
    MouseOverHandler2.prototype.handleItemSelectedViaKeyboard = function() {
      if (this.openOnClick) {
        this.isMouseOverEnabled = false;
        this.resetMenu();
      }
    };
    Object.defineProperty(MouseOverHandler2.prototype, "IsMouseOverEnabled", {
      get: function() {
        return this.isMouseOverEnabled;
      },
      enumerable: false,
      configurable: true
    });
    MouseOverHandler2.prototype.handleItemMouseDown = function() {
      this.mouseDown = true;
    };
    MouseOverHandler2.prototype.handleItemFocus = function() {
      if (this.openOnClick && !this.mouseDown) {
        this.isMouseOverEnabled = true;
      }
      this.mouseDown = false;
    };
    MouseOverHandler2.prototype.handleItemClick = function(itemId, clickedItemIsWithDefaultClose) {
      if (this.openOnClick) {
        if (this.isMouseOverEnabled) {
          if (clickedItemIsWithDefaultClose) {
            this.isMouseOverEnabled = false;
            this.resetMenu();
          }
        } else {
          this.isMouseOverEnabled = true;
          this.openItem(itemId);
        }
      }
    };
    return MouseOverHandler2;
  }()
);

// node_modules/@progress/kendo-vue-layout/dist/es/menu/components/Menu.js
var __assign8 = function() {
  __assign8 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
var allVue30 = vue_runtime_esm_bundler_exports;
var gh29 = allVue30.h;
var isV330 = allVue30.version && allVue30.version[0] === "3";
var MenuVue2 = {
  name: "KendoMenu",
  props: {
    vertical: {
      type: Boolean,
      default: false
    },
    items: Array,
    dir: String,
    hoverOpenDelay: {
      type: Number,
      default: void 0
    },
    hoverCloseDelay: {
      type: Number,
      default: void 0
    },
    openOnClick: Boolean,
    itemRender: [String, Object, Function],
    linkRender: [String, Object, Function],
    customCloseItemIds: Array
  },
  created: function created10() {
    validatePackage(packageMetadata);
    this.mouseOverHandler = new MouseOverHandler(this.$props.openOnClick, this.reset, this.onItemMouseOver);
    this.guid = guid();
    this.directionHolder = new DirectionHolder();
    this.inputItems = [];
    this.currentItems = [];
  },
  mounted: function mounted5() {
    this.isFirstRender = false;
    this.menuWrapperEl = getRef(this, "menuWrapper");
  },
  updated: function updated3() {
    this.mouseOverHandler.OpenOnClick = this.$props.openOnClick;
  },
  destroyed: !!isV330 ? void 0 : function() {
    this.clearItemHoverAndLeaveRequestsIfApplicable();
  },
  // @ts-ignore
  unmounted: function unmounted3() {
    this.clearItemHoverAndLeaveRequestsIfApplicable();
  },
  data: function data6() {
    return {
      focusedItemId: EMPTY_ID,
      hoveredItemId: EMPTY_ID,
      tabbableItemId: ZERO_LEVEL_ZERO_ITEM_ID,
      isFirstRender: true
    };
  },
  computed: {
    menuClassName: function menuClassName() {
      return {
        "k-widget": true,
        "k-reset": true,
        "k-header": true,
        "k-menu": true,
        "k-menu-horizontal": !this.$props.vertical,
        "k-menu-vertical": this.$props.vertical
      };
    }
  },
  // @ts-ignore
  setup: !isV330 ? void 0 : function() {
    var v3 = !!isV330;
    return {
      v3
    };
  },
  render: function render29(createElement) {
    var h = gh29 || createElement;
    this.prepareItems();
    if (!this.isFirstRender) {
      this.directionHolder.setIsDirectionRightToLeft(this.checkIsDirectionRightToLeft());
    }
    var lastItemIdToBeOpened = this.hoveredItemId ? this.hoveredItemId : this.focusedItemId ? getDirectParentId(this.focusedItemId) : EMPTY_ID;
    return h("div", {
      "class": this.getMenuWrapperClassName(),
      ref: setRef(this, "menuWrapper")
    }, [
      // @ts-ignore
      h(MenuItemInternalsList, {
        "class": this.menuClassName,
        "aria-orientation": this.$props.vertical ? "vertical" : void 0,
        attrs: this.v3 ? void 0 : {
          "aria-orientation": this.$props.vertical ? "vertical" : void 0,
          items: this.currentItems,
          isMenuVertical: this.$props.vertical,
          isDirectionRightToLeft: this.directionHolder.getIsDirectionRightToLeft(),
          focusedItemId: this.focusedItemId,
          lastItemIdToBeOpened,
          tabbableItemId: this.tabbableItemId,
          itemRender: templateRendering.call(this, this.$props.itemRender, getListeners.call(this)),
          linkRender: templateRendering.call(this, this.$props.linkRender, getListeners.call(this)),
          menuGuid: this.guid,
          originalItemNeeded: this.getInputItem
        },
        items: this.currentItems,
        isMenuVertical: this.$props.vertical,
        isDirectionRightToLeft: this.directionHolder.getIsDirectionRightToLeft(),
        focusedItemId: this.focusedItemId,
        lastItemIdToBeOpened,
        tabbableItemId: this.tabbableItemId,
        itemRender: templateRendering.call(this, this.$props.itemRender, getListeners.call(this)),
        linkRender: templateRendering.call(this, this.$props.linkRender, getListeners.call(this)),
        menuGuid: this.guid,
        onMouseleave: this.onItemMouseLeave,
        on: this.v3 ? void 0 : {
          "mouseleave": this.onItemMouseLeave,
          "mouseover": this.onItemMouseOver,
          "mousedown": this.onItemMouseDown,
          "keydown": this.onKeyDown,
          "focus": this.onItemFocus,
          "click": this.onItemClick,
          "blur": this.onItemBlur
        },
        onMouseover: this.onItemMouseOver,
        onMousedown: this.onItemMouseDown,
        onKeydown: this.onKeyDown,
        onFocus: this.onItemFocus,
        onClick: this.onItemClick,
        onBlur: this.onItemBlur,
        originalItemNeeded: this.getInputItem
      })
    ]);
  },
  methods: {
    reset: function reset() {
      this.clearItemHoverAndLeaveRequestsIfApplicable();
      this.focusedItemId = EMPTY_ID;
      this.hoveredItemId = EMPTY_ID;
      this.tabbableItemId = ZERO_LEVEL_ZERO_ITEM_ID;
    },
    onKeyDown: function onKeyDown3(event) {
      if (this.focusedItemId !== EMPTY_ID) {
        var currentItem = getItemById(this.focusedItemId, this.currentItems);
        var newItemId = getNewItemIdUponKeyboardNavigation(this.currentItems, currentItem.id, event.keyCode, event.key, this.$props.vertical, this.directionHolder.getIsDirectionRightToLeft());
        if (currentItem.id !== newItemId) {
          event.preventDefault();
          this.setFocusedItemId(newItemId);
        }
        if ((event.keyCode === Keys.enter || event.keyCode === Keys.space) && !currentItem.disabled) {
          this.mouseOverHandler.handleItemSelectedViaKeyboard();
          this.dispatchSelectEventIfWired(event, currentItem.id);
          if (!event.defaultPrevented && currentItem.items.length === 0 && currentItem.url && canUseDOM) {
            window.location.assign(currentItem.url);
          }
        }
      }
    },
    onItemMouseOver: function onItemMouseOver(itemId) {
      if (this.mouseOverHandler.IsMouseOverEnabled) {
        this.clearItemHoverAndLeaveRequestsIfApplicable();
        var that_1 = this;
        this.itemHoverRequest = window.setTimeout(function() {
          that_1.setHoveredItemId(itemId);
          that_1.itemHoverRequest = null;
        }, getHoverOpenDelay(__assign8({}, this.$props)));
      }
    },
    onItemMouseLeave: function onItemMouseLeave(itemId) {
      if (this.mouseOverHandler.IsMouseOverEnabled && this.isItemWithDefaultClose(itemId)) {
        this.clearItemHoverAndLeaveRequestsIfApplicable();
        var that_2 = this;
        this.itemLeaveRequest = window.setTimeout(function() {
          that_2.setHoveredItemId(EMPTY_ID);
          that_2.itemLeaveRequest = null;
        }, getHoverCloseDelay(__assign8({}, this.$props)));
      }
    },
    onItemMouseDown: function onItemMouseDown() {
      this.mouseOverHandler.handleItemMouseDown();
    },
    onItemFocus: function onItemFocus(itemId) {
      this.setFocusedItemId(itemId);
      this.mouseOverHandler.handleItemFocus();
    },
    onItemClick: function onItemClick(event, itemId) {
      var item = getItemById(itemId, this.currentItems);
      if (!item.disabled) {
        this.setFocusedItemId(itemId);
        this.mouseOverHandler.handleItemClick(itemId, this.isItemWithDefaultClose(itemId));
        this.dispatchSelectEventIfWired(event, itemId);
        if (!event.defaultPrevented && item.url && canUseDOM) {
          window.location.assign(item.url);
        }
      }
    },
    onItemBlur: function onItemBlur(itemId) {
      if (this.isItemWithDefaultClose(itemId)) {
        this.setFocusedItemId(EMPTY_ID);
      }
    },
    getInputItem: function getInputItem(itemId) {
      return getItemById(itemId, this.inputItems);
    },
    setFocusedItemId: function setFocusedItemId(focusedItemId2) {
      var tabbableItemId = focusedItemId2 === EMPTY_ID ? this.tabbableItemId : getRootParentId(focusedItemId2);
      var hoveredItemId = focusedItemId2 === EMPTY_ID || isIdEmptyOrZeroLevel(this.hoveredItemId) && isIdEmptyOrZeroLevel(focusedItemId2) ? this.hoveredItemId : EMPTY_ID;
      this.hoveredItemId = hoveredItemId;
      this.focusedItemId = focusedItemId2;
      this.tabbableItemId = tabbableItemId;
    },
    setHoveredItemId: function setHoveredItemId(hoveredItemId) {
      if (isIdEmptyOrZeroLevel(hoveredItemId) && isIdEmptyOrZeroLevel(this.focusedItemId)) {
        this.hoveredItemId = hoveredItemId;
      } else {
        this.hoveredItemId = hoveredItemId;
        this.focusedItemId = EMPTY_ID;
        this.tabbableItemId = ZERO_LEVEL_ZERO_ITEM_ID;
      }
    },
    getMenuWrapperClassName: function getMenuWrapperClassName() {
      return {
        "k-rtl": this.directionHolder.getIsDirectionRightToLeft()
      };
    },
    clearItemHoverAndLeaveRequestsIfApplicable: function clearItemHoverAndLeaveRequestsIfApplicable() {
      if (this.itemHoverRequest) {
        clearTimeout(this.itemHoverRequest);
        this.itemHoverRequest = null;
      }
      if (this.itemLeaveRequest) {
        clearTimeout(this.itemLeaveRequest);
        this.itemLeaveRequest = null;
      }
    },
    isItemWithDefaultClose: function isItemWithDefaultClose(itemId) {
      return !this.$props.customCloseItemIds || this.$props.customCloseItemIds.indexOf(itemId) === -1;
    },
    checkIsDirectionRightToLeft: function checkIsDirectionRightToLeft() {
      return this.$props.dir !== void 0 ? this.$props.dir === "rtl" : this.menuWrapperEl && getComputedStyle(this.menuWrapperEl).direction === "rtl";
    },
    prepareItems: function prepareItems() {
      var _a3 = prepareInputItemsForInternalWork.call(this, this.$props.items), items = _a3.items, inputItems = _a3.inputItems;
      this.currentItems = items;
      this.inputItems = inputItems;
    },
    dispatchSelectEventIfWired: function dispatchSelectEventIfWired(event, itemId) {
      this.$emit("select", {
        event,
        compontent: this,
        item: this.getInputItem(itemId),
        itemId
      });
    }
  }
};
var Menu = MenuVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/splitter/SplitterPane.js
var allVue31 = vue_runtime_esm_bundler_exports;
var gh30 = allVue31.h;
var isV331 = allVue31.version && allVue31.version[0] === "3";
var SplitterPaneVue2 = {
  name: "KendoSplitterPane",
  props: {
    orientation: {
      type: String,
      default: function _default() {
        return void 0;
      },
      validator: function validator14(value2) {
        return ["vertical", "horizontal"].includes(value2);
      }
    },
    overlay: Boolean,
    containsSplitter: Boolean,
    size: String,
    min: String,
    max: String,
    resizable: Boolean,
    collapsible: Boolean,
    collapsed: Boolean,
    scrollable: Boolean,
    keepMounted: Boolean,
    content: [Object, Function, String]
  },
  // @ts-ignore
  setup: !isV331 ? void 0 : function() {
    var v3 = !!isV331;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render30(createElement) {
    var _a3;
    var h = gh30 || createElement;
    var _b = this.$props, size = _b.size, collapsed = _b.collapsed, overlay = _b.overlay, containsSplitter = _b.containsSplitter, collapsible = _b.collapsible, resizable = _b.resizable, scrollable = _b.scrollable, keepMounted = _b.keepMounted;
    var fixedSize2 = size && size.length > 0;
    var style = {
      flexBasis: size
    };
    var paneClasses = classNames("k-pane", (_a3 = {}, _a3["k-hidden"] = collapsed, _a3["hidden"] = collapsed, _a3["k-pane-flex"] = containsSplitter, _a3["k-pane-static"] = !resizable && !collapsible || fixedSize2, _a3["k-scrollable"] = scrollable, _a3));
    var content = getTemplate.call(this, {
      h,
      template: this.$props.content,
      defaultRendering: null
    });
    return h("div", {
      style,
      "class": paneClasses,
      role: "group",
      attrs: this.v3 ? void 0 : {
        role: "group"
      }
    }, [!collapsed || keepMounted ? content : void 0, overlay ? h("div", {
      "class": "k-splitter-overlay k-overlay"
    }) : void 0]);
  }
};
var SplitterPane = SplitterPaneVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/splitter/SplitterBar.js
var allVue32 = vue_runtime_esm_bundler_exports;
var gh31 = allVue32.h;
var isV332 = allVue32.version && allVue32.version[0] === "3";
var SplitterBarVue2 = {
  name: "KendoSplitterBar",
  // @ts-ignore
  emits: {
    drag: null,
    toggle: null,
    keyboardresize: null
  },
  props: {
    orientation: {
      type: String,
      default: "vertical",
      validator: function validator15(value2) {
        return ["vertical", "horizontal"].includes(value2);
      }
    },
    index: Number,
    prev: Object,
    next: Object,
    isRtl: Boolean
  },
  created: function created11() {
    this.draggable = null;
  },
  computed: {
    isStatic: function isStatic() {
      var _a3 = this.$props, prev = _a3.prev, next = _a3.next;
      var betweenResizablePanes = prev.resizable && next.resizable;
      var nearCollapsiblePane = prev.collapsible || next.collapsible;
      return !betweenResizablePanes && !nearCollapsiblePane;
    },
    isDraggable: function isDraggable() {
      var _a3 = this.$props, prev = _a3.prev, next = _a3.next;
      var betweenResizablePanes = prev.resizable && next.resizable;
      var nearCollapsedPane = prev.collapsed || next.collapsed;
      return !!betweenResizablePanes && !nearCollapsedPane;
    },
    isHorizontal: function isHorizontal() {
      return this.$props.orientation === "horizontal";
    }
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  data: function data7() {
    return {
      focused: false
    };
  },
  mounted: function mounted6() {
    if (this.$el) {
      this.draggable = this.$refs.draggable;
    }
  },
  // @ts-ignore
  setup: !isV332 ? void 0 : function() {
    var v3 = !!isV332;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render31(createElement) {
    var _this2 = this;
    var _a3;
    var _this = this;
    var h = gh31 || createElement;
    var isDraggable2 = this.isDraggable;
    var isStatic2 = this.isStatic;
    var isHorizontal2 = this.isHorizontal;
    var barClasses = classNames("k-splitbar", (_a3 = {}, _a3["k-focus"] = this.focused, _a3["k-splitbar-horizontal"] = isHorizontal2, _a3["k-splitbar-vertical"] = !isHorizontal2, _a3["k-splitbar-draggable-horizontal"] = isHorizontal2 && isDraggable2, _a3["k-splitbar-draggable-vertical"] = !isHorizontal2 && isDraggable2, _a3["k-splitbar-static-horizontal"] = isHorizontal2 && isStatic2, _a3["k-splitbar-static-vertical"] = !isHorizontal2 && isStatic2, _a3));
    var previousArrowName2 = this.previousArrowName(isHorizontal2);
    var previousArrowSVG2 = this.previousArrowSVG(isHorizontal2);
    var nextArrowName2 = this.nextArrowName(isHorizontal2);
    var nextArrowSVG2 = this.nextArrowSVG(isHorizontal2);
    var paneLabel = provideLocalizationService(this).toLanguageString(splitterPaneLabel, messages[splitterPaneLabel]);
    return (
      // @ts-ignore  function children
      h(Draggable, {
        onPress: function onPress(event) {
          return _this.onDrag(event, true, false);
        },
        on: this.v3 ? void 0 : {
          "press": function onPress(event) {
            return _this.onDrag(event, true, false);
          },
          "drag": function drag2(event) {
            return _this.onDrag(event, false, false);
          },
          "release": function release2(event) {
            return _this.onDrag(event, false, true);
          }
        },
        onDrag: function drag2(event) {
          return _this.onDrag(event, false, false);
        },
        onRelease: function release2(event) {
          return _this.onDrag(event, false, true);
        },
        ref: "draggable"
      }, this.v3 ? function() {
        return [h("div", {
          tabindex: isStatic2 ? -1 : 0,
          attrs: _this2.v3 ? void 0 : {
            tabindex: isStatic2 ? -1 : 0,
            role: "separator",
            ariaLabel: paneLabel,
            ariaOrientation: _this2.isHorizontal ? "vertical" : "horizontal"
          },
          role: "separator",
          "class": barClasses,
          style: {
            touchAction: "none"
          },
          onFocusin: _this2.onFocus,
          on: _this2.v3 ? void 0 : {
            "focusin": _this2.onFocus,
            "focusout": _this2.onBlur,
            "dblclick": _this2.onToggle,
            "keydown": _this2.onKeyDown
          },
          onFocusout: _this2.onBlur,
          onDblclick: _this2.onToggle,
          onKeydown: _this2.onKeyDown,
          ariaLabel: paneLabel,
          ariaOrientation: _this2.isHorizontal ? "vertical" : "horizontal"
        }, [_this2.prev.collapsible && h("span", {
          "class": "k-collapse-prev",
          onClick: _this2.onPrevToggle,
          on: _this2.v3 ? void 0 : {
            "click": _this2.onPrevToggle
          }
        }, [h(Icon, {
          name: previousArrowName2,
          attrs: _this2.v3 ? void 0 : {
            name: previousArrowName2,
            icon: previousArrowSVG2,
            size: "xsmall"
          },
          icon: previousArrowSVG2,
          size: "xsmall"
        })]), h("div", {
          "class": "k-resize-handle"
        }), _this2.next.collapsible && h("span", {
          "class": "k-collapse-next",
          onClick: _this2.onNextToggle,
          on: _this2.v3 ? void 0 : {
            "click": _this2.onNextToggle
          }
        }, [h(Icon, {
          name: nextArrowName2,
          attrs: _this2.v3 ? void 0 : {
            name: nextArrowName2,
            icon: nextArrowSVG2,
            size: "xsmall"
          },
          icon: nextArrowSVG2,
          size: "xsmall"
        })])])];
      } : [h("div", {
        tabindex: isStatic2 ? -1 : 0,
        attrs: _this2.v3 ? void 0 : {
          tabindex: isStatic2 ? -1 : 0,
          role: "separator",
          ariaLabel: paneLabel,
          ariaOrientation: _this2.isHorizontal ? "vertical" : "horizontal"
        },
        role: "separator",
        "class": barClasses,
        style: {
          touchAction: "none"
        },
        onFocusin: _this2.onFocus,
        on: _this2.v3 ? void 0 : {
          "focusin": _this2.onFocus,
          "focusout": _this2.onBlur,
          "dblclick": _this2.onToggle,
          "keydown": _this2.onKeyDown
        },
        onFocusout: _this2.onBlur,
        onDblclick: _this2.onToggle,
        onKeydown: _this2.onKeyDown,
        ariaLabel: paneLabel,
        ariaOrientation: _this2.isHorizontal ? "vertical" : "horizontal"
      }, [_this2.prev.collapsible && h("span", {
        "class": "k-collapse-prev",
        onClick: _this2.onPrevToggle,
        on: _this2.v3 ? void 0 : {
          "click": _this2.onPrevToggle
        }
      }, [h(Icon, {
        name: previousArrowName2,
        attrs: _this2.v3 ? void 0 : {
          name: previousArrowName2,
          icon: previousArrowSVG2,
          size: "xsmall"
        },
        icon: previousArrowSVG2,
        size: "xsmall"
      })]), h("div", {
        "class": "k-resize-handle"
      }), _this2.next.collapsible && h("span", {
        "class": "k-collapse-next",
        onClick: _this2.onNextToggle,
        on: _this2.v3 ? void 0 : {
          "click": _this2.onNextToggle
        }
      }, [h(Icon, {
        name: nextArrowName2,
        attrs: _this2.v3 ? void 0 : {
          name: nextArrowName2,
          icon: nextArrowSVG2,
          size: "xsmall"
        },
        icon: nextArrowSVG2,
        size: "xsmall"
      })])])])
    );
  },
  methods: {
    onDrag: function onDrag(data15, isFirst, isLast) {
      var event = data15;
      var index = this.$props.index;
      var element = this.draggable && this.draggable.element;
      if (!isLast && event) {
        event.originalEvent.preventDefault();
      }
      if (element && !this.isStatic && this.isDraggable) {
        this.$emit("drag", event, element, index, isFirst, isLast);
      }
    },
    onFocus: function onFocus() {
      this.focused = true;
    },
    onBlur: function onBlur() {
      this.focused = false;
    },
    onToggle: function onToggle(event) {
      var _a3 = this.$props, index = _a3.index, prev = _a3.prev, next = _a3.next;
      if (prev.collapsible || next.collapsible) {
        this.$emit("toggle", prev.collapsible ? index : index + 1, event);
      }
    },
    onPrevToggle: function onPrevToggle(event) {
      var _a3 = this.$props, index = _a3.index, prev = _a3.prev;
      if (prev.collapsible) {
        this.$emit("toggle", index, event);
      }
    },
    onNextToggle: function onNextToggle(event) {
      var _a3 = this.$props, index = _a3.index, next = _a3.next;
      if (next.collapsible) {
        this.$emit("toggle", index + 1, event);
      }
    },
    onKeyDown: function onKeyDown4(event) {
      var _this = this;
      var keyCode = event && event.keyCode;
      var isHorizontal2 = this.isHorizontal;
      var index = this.$props.index;
      var element = this.draggable && this.draggable.element;
      var onKeyboardResize = function onKeyboardResize2(el, idx, offset) {
        event.preventDefault();
        _this.$emit("keyboardresize", el, idx, offset, event);
      };
      if (!element) {
        return;
      }
      if (keyCode === Keys.enter) {
        event.preventDefault();
        this.onToggle(event);
      } else if (this.isDraggable) {
        if (isHorizontal2 && keyCode === Keys.left) {
          onKeyboardResize(element, index, -10);
        } else if (isHorizontal2 && keyCode === Keys.right) {
          onKeyboardResize(element, index, 10);
        } else if (!isHorizontal2 && keyCode === Keys.up) {
          onKeyboardResize(element, index, -10);
        } else if (!isHorizontal2 && keyCode === Keys.down) {
          onKeyboardResize(element, index, 10);
        }
      }
    },
    previousArrowName: function previousArrowName(isHorizontal2) {
      var prev = this.$props.prev;
      var isCollapsed = prev.collapsed;
      return isHorizontal2 && !isCollapsed ? this.isRtl ? "caret-alt-right" : "caret-alt-left" : isHorizontal2 && isCollapsed ? this.isRtl ? "caret-alt-left" : "caret-alt-right" : !isHorizontal2 && !isCollapsed ? "caret-alt-up" : !isHorizontal2 && isCollapsed ? "caret-alt-down" : "";
    },
    previousArrowSVG: function previousArrowSVG(isHorizontal2) {
      var prev = this.$props.prev;
      var isCollapsed = prev.collapsed;
      return isHorizontal2 && !isCollapsed ? this.isRtl ? caretAltRightIcon : caretAltLeftIcon : isHorizontal2 && isCollapsed ? this.isRtl ? caretAltLeftIcon : caretAltRightIcon : !isHorizontal2 && !isCollapsed ? caretAltUpIcon : !isHorizontal2 && isCollapsed ? caretAltDownIcon : void 0;
    },
    nextArrowName: function nextArrowName(isHorizontal2) {
      var next = this.$props.next;
      var isCollapsed = next.collapsed;
      return isHorizontal2 && !isCollapsed ? this.isRtl ? "caret-alt-left" : "caret-alt-right" : isHorizontal2 && isCollapsed ? this.isRtl ? "caret-alt-right" : "caret-alt-left" : !isHorizontal2 && !isCollapsed ? "caret-alt-down" : !isHorizontal2 && isCollapsed ? "caret-alt-up" : "";
    },
    nextArrowSVG: function nextArrowSVG(isHorizontal2) {
      var next = this.$props.next;
      var isCollapsed = next.collapsed;
      return isHorizontal2 && !isCollapsed ? this.isRtl ? caretAltLeftIcon : caretAltRightIcon : isHorizontal2 && isCollapsed ? this.isRtl ? caretAltRightIcon : caretAltLeftIcon : !isHorizontal2 && !isCollapsed ? caretAltDownIcon : !isHorizontal2 && isCollapsed ? caretAltUpIcon : void 0;
    }
  }
};
var SplitterBar = SplitterBarVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/splitter/Splitter.js
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
var allVue33 = vue_runtime_esm_bundler_exports;
var gh32 = allVue33.h;
var isV333 = allVue33.version && allVue33.version[0] === "3";
var PANE_DEFAULTS = {
  collapsible: false,
  collapsed: false,
  resizable: true,
  scrollable: true
};
var DOUBLE_CLICK_WAIT_TIME = 150;
var SplitterVue2 = {
  name: "KendoSplitter",
  props: {
    orientation: {
      type: String,
      default: "horizontal",
      validator: function validator16(value2) {
        return ["vertical", "horizontal"].includes(value2);
      }
    },
    panes: Array,
    defaultPanes: Array
  },
  mounted: function mounted7() {
    this.currentRtl = isRtl(this.$el);
  },
  // @ts-ignore
  emits: {
    change: null
  },
  computed: {
    isControlledState: function isControlledState() {
      return this.$props.panes !== void 0;
    },
    computedPanes: function computedPanes() {
      return this.isControlledState ? this.$props.panes : this.currentPanes;
    }
  },
  created: function created12() {
    validatePackage(packageMetadata);
  },
  data: function data8() {
    return {
      currentRtl: false,
      isDragging: false,
      dragIndex: void 0,
      startTime: 0,
      originalX: 0,
      originalY: 0,
      originalPrevSize: 0,
      originalNextSize: 0,
      currentPanes: this.$props.defaultPanes || []
    };
  },
  // @ts-ignore
  setup: !isV333 ? void 0 : function() {
    var v3 = !!isV333;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render32(createElement) {
    var h = gh32 || createElement;
    var panesOptions2 = this.panesOptions();
    var className = classNames("k-widget", "k-splitter", "k-splitter-flex", "k-splitter-".concat(this.orientation));
    this.validatePanes(panesOptions2);
    var mapSplitterPanes = function mapSplitterPanes2(panes) {
      return panes.map(function(pane, index) {
        var content = templateRendering.call(this, pane.content, getListeners.call(this));
        var splitterBar;
        var paneKey = index * 2;
        var barKey = paneKey + 1;
        if (index + 1 < panes.length) {
          var next = panes[index + 1];
          splitterBar = h(SplitterBar, {
            key: barKey,
            index,
            attrs: this.v3 ? void 0 : {
              index,
              orientation: this.orientation,
              prev: pane,
              next,
              isRtl: this.currentRtl
            },
            orientation: this.orientation,
            prev: pane,
            next,
            onDrag: this.onBarDragResize,
            on: this.v3 ? void 0 : {
              "drag": this.onBarDragResize,
              "toggle": this.onBarToggle,
              "keyboardresize": this.onBarKeyboardResize
            },
            onToggle: this.onBarToggle,
            onKeyboardresize: this.onBarKeyboardResize,
            isRtl: this.currentRtl
          });
        }
        var splitterPane = h(SplitterPane, {
          key: paneKey,
          containsSplitter: pane.containsSplitter,
          attrs: this.v3 ? void 0 : {
            containsSplitter: pane.containsSplitter,
            size: pane.size,
            min: pane.min,
            max: pane.max,
            resizable: pane.resizable,
            collapsible: pane.collapsible,
            collapsed: pane.collapsed,
            scrollable: pane.scrollable,
            keepMounted: pane.keepMounted,
            content
          },
          size: pane.size,
          min: pane.min,
          max: pane.max,
          resizable: pane.resizable,
          collapsible: pane.collapsible,
          collapsed: pane.collapsed,
          scrollable: pane.scrollable,
          keepMounted: pane.keepMounted,
          content
        });
        return [splitterPane, splitterBar];
      }, this);
    };
    return h("div", {
      "class": className
    }, [mapSplitterPanes.call(this, panesOptions2)]);
  },
  methods: {
    validatePanes: function validatePanes(panesOptions2) {
      var withoutSize = panesOptions2.filter(function(pane) {
        return pane.size === void 0;
      });
      if (!withoutSize.length) {
        throw new Error("The Splitter should have at least one pane without a set size.");
      }
    },
    mapPaneOptions: function mapPaneOptions(panes) {
      var orientation = this.orientation;
      var paneOptions = [];
      for (var index = 0; index < panes.length; index++) {
        var overlay = false;
        if (this.isDragging && this.dragIndex !== void 0) {
          overlay = this.dragIndex === index || this.dragIndex + 1 === index;
        }
        paneOptions.push(__assign9(__assign9(__assign9({}, PANE_DEFAULTS), {
          orientation,
          overlay
        }), panes[index]));
      }
      return paneOptions;
    },
    onBarToggle: function onBarToggle(index, event) {
      var panesOptions2 = this.panesOptions();
      var updatedState = panesOptions2.map(function(pane, idx) {
        var paneProps = pane;
        if (idx === index) {
          return __assign9(__assign9({}, paneProps), {
            collapsed: !pane.collapsed
          });
        } else {
          return __assign9({}, paneProps);
        }
      });
      this.$emit("change", {
        newState: updatedState,
        isLast: true,
        nativeEvent: event
      });
    },
    onBarDragResize: function onBarDragResize(event, barElement, index, isFirst, isLast) {
      var time = (/* @__PURE__ */ new Date()).getTime();
      var pageX = event.pageX, pageY = event.pageY;
      var _a3 = this.surroudingPanes(barElement), prevElement = _a3.prevElement, nextElement = _a3.nextElement;
      if (!prevElement || !nextElement) {
        return;
      }
      if (isFirst) {
        this.isDragging = true;
        this.dragIndex = index;
        this.startTime = time;
        this.originalX = pageX;
        this.originalY = pageY;
        this.originalPrevSize = this.elementSize(prevElement);
        this.originalNextSize = this.elementSize(nextElement);
        return;
      }
      var _b = this.$data, originalPrevSize = _b.originalPrevSize, originalNextSize = _b.originalNextSize, startTime = _b.startTime, originalX = _b.originalX, originalY = _b.originalY;
      if (!isFirst && time - startTime < DOUBLE_CLICK_WAIT_TIME) {
        if (isLast) {
          this.resetDragState();
        }
        return;
      }
      var delta;
      if (this.orientation === "vertical") {
        delta = pageY - originalY;
      } else if (this.currentRtl) {
        delta = originalX - pageX;
      } else {
        delta = pageX - originalX;
      }
      this.resize(index, index + 1, originalPrevSize, originalNextSize, delta, isLast, event);
      if (isLast) {
        this.resetDragState();
      }
    },
    onBarKeyboardResize: function onBarKeyboardResize(barElement, index, delta, event) {
      var _a3 = this.surroudingPanes(barElement), prevElement = _a3.prevElement, nextElement = _a3.nextElement;
      var originalPrevSize = this.elementSize(prevElement);
      var originalNextSize = this.elementSize(nextElement);
      this.resize(index, index + 1, originalPrevSize, originalNextSize, delta, true, event);
    },
    surroudingPanes: function surroudingPanes(barElement) {
      return {
        prevElement: barElement.previousElementSibling,
        nextElement: barElement.nextElementSibling
      };
    },
    containerSize: function containerSize() {
      if (!this.$el) {
        return 0;
      }
      return this.elementSize(this.$el, true);
    },
    isPercent: function isPercent(size) {
      return /%$/.test(size);
    },
    toPixels: function toPixels(size, splitterSize) {
      var result = parseInt(size, 10);
      if (this.isPercent(size)) {
        result = splitterSize * result / 100;
      }
      return result;
    },
    panesOptions: function panesOptions() {
      return this.mapPaneOptions(this.computedPanes);
    },
    resetDragState: function resetDragState() {
      this.isDragging = false;
      this.dragIndex = void 0;
      this.startTime = 0;
      this.originalX = 0;
      this.originalY = 0;
      this.originalPrevSize = 0;
      this.originalNextSize = 0;
    },
    elementSize: function elementSize(el, isContainer) {
      var sizeType = isContainer ? "client" : "offset";
      if (this.orientation === "vertical") {
        return el["".concat(sizeType, "Height")];
      } else {
        return el["".concat(sizeType, "Width")];
      }
    },
    clamp: function clamp(min, max, v) {
      return Math.min(max, Math.max(min, v));
    },
    fixedSize: function fixedSize(size) {
      return size && size.length > 0;
    },
    resize: function resize(prevIndex, nextIndex, originalPrevSize, originalNextSize, delta, isLast, event) {
      var _this = this;
      var panesOptions2 = this.panesOptions();
      var prevOptions = panesOptions2[prevIndex];
      var nextOptions = panesOptions2[nextIndex];
      var total = originalPrevSize + originalNextSize;
      var splitterSize = this.containerSize();
      var px = function px2(s) {
        return _this.toPixels(s, splitterSize);
      };
      var prevDragState = {
        index: prevIndex,
        initialSize: originalPrevSize,
        min: px(prevOptions.min) || total - px(nextOptions.max) || 0,
        max: px(prevOptions.max) || total - px(nextOptions.min) || total
      };
      var nextDragState = {
        index: nextIndex,
        initialSize: originalNextSize,
        min: px(nextOptions.min) || total - px(prevOptions.max) || 0,
        max: px(nextOptions.max) || total - px(prevOptions.min) || total
      };
      var resize2 = function resize3(paneState, change) {
        var pane = panesOptions2[paneState.index];
        var newSize = _this.clamp(paneState.min, paneState.max, paneState.initialSize + change);
        if (_this.isPercent(pane.size || "")) {
          return 100 * newSize / splitterSize + "%";
        } else {
          return newSize + "px";
        }
      };
      var prevSize;
      var nextSize;
      if (this.fixedSize(prevOptions.size) && this.fixedSize(nextOptions.size)) {
        prevSize = resize2(prevDragState, delta);
        nextSize = resize2(nextDragState, -delta);
      } else if (nextOptions.collapsible || this.fixedSize(nextOptions.size)) {
        nextSize = resize2(nextDragState, -delta);
      } else {
        prevSize = resize2(prevDragState, delta);
      }
      var updatedState = panesOptions2.map(function(pane, idx) {
        var paneProps = pane;
        if (idx === prevIndex) {
          return __assign9(__assign9({}, paneProps), {
            size: prevSize
          });
        } else if (idx === nextIndex) {
          return __assign9(__assign9({}, paneProps), {
            size: nextSize
          });
        } else {
          return __assign9({}, paneProps);
        }
      });
      this.panesDuringOnChange = updatedState;
      if (!this.isControlledState) {
        this.currentPanes = updatedState;
      }
      this.$emit("change", {
        newState: updatedState,
        isLast,
        nativeEvent: event
      });
      this.panesDuringOnChange = void 0;
    }
  }
};
var Splitter = SplitterVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/PanelBarGroup.js
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
var allVue34 = vue_runtime_esm_bundler_exports;
var gh33 = allVue34.h;
var isV334 = allVue34.version && allVue34.version[0] === "3";
var PanelBarGroupVue2 = {
  name: "KendoPanelBarGroup",
  props: {
    item: Object,
    items: Array,
    animation: Boolean,
    expanded: Boolean,
    disabled: Boolean,
    keepItemsMounted: Boolean,
    uniquePrivateKey: [String, Number],
    content: Object
  },
  data: function data9() {
    return {
      show: this.$props.expanded
    };
  },
  // @ts-ignore
  setup: !isV334 ? void 0 : function() {
    var v3 = !!isV334;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render33(createElement) {
    var h = gh33 || createElement;
    var _a3 = this.$props, item = _a3.item, items = _a3.items, uniquePrivateKey = _a3.uniquePrivateKey, disabled = _a3.disabled, expanded = _a3.expanded, animation = _a3.animation, keepItemsMounted = _a3.keepItemsMounted;
    var animationStyle = {
      display: "block"
    };
    var content = getTemplate.call(this, {
      h,
      template: this.$props.content,
      defaultRendering: null,
      additionalProps: __assign10(__assign10({}, this.$props), {
        show: this.show
      })
    });
    var opened = !disabled && expanded;
    var itemContent = opened || keepItemsMounted ? items ? h("ul", {
      role: "group",
      attrs: this.v3 ? void 0 : {
        role: "group"
      },
      "class": "k-panelbar-group k-panel k-group",
      style: {
        display: keepItemsMounted ? this.$data.show ? "block" : "none" : "block"
      }
    }, [items.map(function(currentItem) {
      return h(PanelBarItem, __assign10(__assign10({
        props: this.v3 ? void 0 : __assign10(__assign10({}, currentItem), {
          item
        })
      }, currentItem), {
        item
      }));
    }, this)]) : this.$props.content ? h("div", {
      "class": "k-panelbar-content k-content"
    }, [content]) : null : null;
    return (animation !== void 0 ? animation : true) && !disabled ? (
      // @ts-ignore  function children
      h(Reveal, {
        appear: opened,
        attrs: this.v3 ? void 0 : {
          appear: opened,
          transitionEnterDuration: 200,
          transitionExitDuration: 200,
          //   childFactory={keepItemsMounted && this.childFactory}
          unmountOnExit: !keepItemsMounted
        },
        transitionEnterDuration: 200,
        transitionExitDuration: 200,
        key: uniquePrivateKey + "_animation",
        style: animationStyle,
        unmountOnExit: !keepItemsMounted,
        onEntering: this.handleEntering,
        on: this.v3 ? void 0 : {
          "entering": this.handleEntering,
          "exited": this.handleExited
        },
        onExited: this.handleExited
      }, this.v3 ? function() {
        return [itemContent];
      } : [itemContent])
    ) : itemContent;
  },
  methods: {
    handleEntering: function handleEntering() {
      if (this.keepItemsMounted) {
        this.show = true;
      }
    },
    handleExited: function handleExited() {
      if (this.keepItemsMounted) {
        this.show = false;
      }
    }
  }
};
var PanelBarGroup = PanelBarGroupVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/PanelBarItem.js
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
var allVue35 = vue_runtime_esm_bundler_exports;
var gh34 = allVue35.h;
var isV335 = allVue35.version && allVue35.version[0] === "3";
var PanelBarItemVue2 = {
  name: "KendoPanelBarItem",
  props: {
    item: Object,
    items: Array,
    animation: Boolean,
    expanded: Boolean,
    disabled: Boolean,
    selected: Boolean,
    level: Number,
    title: {
      type: [String, Object, Function],
      default: function _default2() {
        return "Untitled";
      }
    },
    id: [String, Number],
    focused: Boolean,
    keepItemsMounted: Boolean,
    uniquePrivateKey: [String, Number],
    parentUniquePrivateKey: Array,
    parentExpanded: Boolean,
    headerClassName: String,
    iconClass: String,
    imageUrl: String,
    icon: String,
    svgIcon: Object,
    content: Object,
    header: Object
  },
  inject: {
    dispatchItemSelect: {
      default: null
    }
  },
  // @ts-ignore
  setup: !isV335 ? void 0 : function() {
    var v3 = !!isV335;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render34(createElement) {
    var _a3;
    var h = gh34 || createElement;
    var _b = this.$props, id = _b.id, item = _b.item, icon = _b.icon, svgIcon = _b.svgIcon, items = _b.items, content = _b.content, title = _b.title, uniquePrivateKey = _b.uniquePrivateKey, disabled = _b.disabled, selected2 = _b.selected, focused2 = _b.focused, expanded = _b.expanded, className = _b.className, level = _b.level, headerClassName = _b.headerClassName, animation = _b.animation, keepItemsMounted = _b.keepItemsMounted;
    var hasContent = !!items || content;
    var panelBarItemClassName = classNames("k-panelbar-item", {
      "k-panelbar-header": level === 0,
      "k-panelbar-item": level !== 0,
      "k-expanded": expanded && hasContent,
      "k-disabled": disabled
    }, "k-level-".concat(level), className);
    var panelBarLinkClassName = classNames("k-link", {
      "k-selected": !disabled && selected2,
      "k-focus": focused2
    }, headerClassName);
    var panelBarItemArrowClassName = classNames("k-panelbar-toggle", (_a3 = {}, _a3["k-panelbar-collapse"] = expanded && hasContent, _a3["k-panelbar-expand"] = !expanded && hasContent, _a3));
    var itemIconName = expanded ? "chevron-up" : "chevron-down";
    var itemIconSVG = expanded ? chevronUpIcon : chevronDownIcon;
    var iconElement = function iconElement2() {
      if (this.imageUrl) {
        return h("img", {
          role: "presentation",
          attrs: this.v3 ? void 0 : {
            role: "presentation",
            src: this.imageUrl
          },
          "class": "k-panelbar-item-icon k-image",
          src: this.imageUrl
        });
      } else if (icon || svgIcon) {
        return h(Icon, {
          name: icon,
          attrs: this.v3 ? void 0 : {
            name: icon,
            icon: svgIcon
          },
          "class": "k-panelbar-item-icon",
          icon: svgIcon
        });
      } else if (this.iconClass) {
        return h(Icon, {
          "class": "k-panelbar-item-icon " + this.iconClass
        });
      }
      return null;
    };
    var iconRender = iconElement.call(this);
    var arrow = !disabled && (items || content) ? h(Icon, {
      name: itemIconName,
      attrs: this.v3 ? void 0 : {
        name: itemIconName,
        icon: itemIconSVG
      },
      icon: itemIconSVG,
      "class": panelBarItemArrowClassName
    }) : null;
    var group = items || content ? h(PanelBarGroup, {
      items,
      attrs: this.v3 ? void 0 : {
        items,
        item,
        content,
        uniquePrivateKey,
        disabled,
        expanded,
        animation,
        keepItemsMounted
      },
      item,
      content,
      uniquePrivateKey,
      disabled,
      expanded,
      animation,
      keepItemsMounted
    }) : null;
    var header = getTemplate.call(this, {
      h,
      template: this.$props.header,
      defaultRendering: null,
      additionalProps: __assign11({}, this.$props)
    });
    return h("li", {
      id,
      attrs: this.v3 ? void 0 : {
        id,
        role: "treeitem",
        "aria-disabled": disabled,
        "aria-hidden": !disabled && !expanded,
        "aria-selected": !disabled && selected2,
        "aria-expanded": !disabled && expanded && hasContent
      },
      "class": panelBarItemClassName,
      role: "treeitem",
      "aria-disabled": disabled,
      "aria-hidden": !disabled && !expanded,
      "aria-selected": !disabled && selected2,
      "aria-expanded": !disabled && expanded && hasContent
    }, [h("span", {
      "class": panelBarLinkClassName,
      onClick: this.handleItemClick,
      on: this.v3 ? void 0 : {
        "click": this.handleItemClick
      }
    }, [iconRender, this.$props.header ? header : h("span", {
      "class": "k-panelbar-item-text"
    }, [title]), arrow]), group]);
  },
  methods: {
    handleItemClick: function handleItemClick() {
      var _a3 = this.$props, disabled = _a3.disabled, id = _a3.id;
      if (!disabled) {
        this.dispatchItemSelect({
          uniquePrivateKey: this.$props.uniquePrivateKey,
          id,
          target: this
        });
      }
    },
    childFactory: function childFactory(child) {
      return child;
    }
  }
};
var PanelBarItem = PanelBarItemVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/util.js
var __assign12 = function() {
  __assign12 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign12.apply(this, arguments);
};
var __spreadArray = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var renderChildren = function renderChildren2(items, _a3) {
  var _b = _a3.animation, animation = _b === void 0 ? true : _b, _c = _a3.keepItemsMounted, keepItemsMounted = _c === void 0 ? false : _c, state = _a3.state, expanded = _a3.expanded, handleSelect4 = _a3.handleSelect, _d = _a3.parentExpanded, parentExpanded = _d === void 0 ? true : _d, _e = _a3.level, level = _e === void 0 ? 0 : _e, _f = _a3.parentPrivateKey, parentPrivateKey = _f === void 0 ? [] : _f;
  return items.map(function(child, idx) {
    var nestedChildren;
    var privateKey = getId(child, parentPrivateKey, idx);
    var content = templateRendering.call(this, child.content, getListeners.call(this));
    var header = templateRendering.call(this, child.header, getListeners.call(this));
    if (child.items) {
      var renderState = {
        animation,
        keepItemsMounted,
        state,
        expanded,
        handleSelect: handleSelect4,
        parentExpanded: (expanded || []).indexOf(privateKey) > -1,
        level: level + 1,
        parentPrivateKey: __spreadArray(__spreadArray([], parentPrivateKey, true), [privateKey], false)
      };
      nestedChildren = renderChildren2.call(this, child.items, renderState);
    }
    return __assign12(__assign12({}, child), {
      animation: child.animation !== void 0 ? child.animation : animation,
      keepItemsMounted,
      id: child.id || "k-panelbar-item-default-".concat(privateKey),
      uniquePrivateKey: privateKey,
      parentUniquePrivateKey: parentPrivateKey,
      parentExpanded,
      level,
      expanded: (expanded || []).indexOf(privateKey) > -1,
      focused: state.currentFocused === privateKey && state.wrapperFocused,
      selected: state.currentSelected === privateKey,
      items: nestedChildren,
      content,
      header
    });
  }, this);
};
var getFirstId = function getFirstId2(props) {
  var firstItem = props.items[0];
  if (firstItem) {
    return getId(firstItem, [], 0);
  }
  return "";
};
var getInitialState = function getInitialState2(props, expandMode, result, parentExpanded, parentPrivateKey) {
  if (result === void 0) {
    result = {
      currentExpanded: props.expanded || [],
      currentSelected: props.selected || "",
      currentFocused: props.focused || "",
      wrapperFocused: false
    };
  }
  if (parentExpanded === void 0) {
    parentExpanded = true;
  }
  if (parentPrivateKey === void 0) {
    parentPrivateKey = [];
  }
  props.items.forEach(function(item, idx) {
    var privateKey = getId(item, parentPrivateKey, idx);
    if (!item.disabled && parentExpanded) {
      if (item.selected) {
        result.currentSelected = privateKey;
      }
      if (item.focused) {
        result.currentFocused = privateKey;
      }
      if (item.expanded) {
        if (expandMode === "multiple") {
          result.currentExpanded.push(privateKey);
        } else if (expandMode === "single") {
          result.currentExpanded = [privateKey];
        }
      }
      if (item.items) {
        result = getInitialState2(item, expandMode, result, !!item.expanded, __spreadArray(__spreadArray([], parentPrivateKey, true), [privateKey], false));
      }
    }
  });
  return result;
};
var getId = function getId2(child, parentPrivateKey, idx) {
  return child && child && child.id ? child.id : parentPrivateKey.length ? parentPrivateKey[parentPrivateKey.length - 1] + ".".concat(idx) : ".".concat(idx);
};
function flatVisibleItems(data15, flattedItems) {
  if (flattedItems === void 0) {
    flattedItems = [];
  }
  (data15 || []).forEach(function(item) {
    if (!item.disabled) {
      flattedItems.push(item);
      if (item.expanded && item.children) {
        flatVisibleItems(item.children, flattedItems);
      }
    }
  });
  return flattedItems;
}
function flatChildren(children, flattenChildren) {
  if (flattenChildren === void 0) {
    flattenChildren = [];
  }
  children.forEach(function(child) {
    if (child && child && !child.disabled) {
      flattenChildren.push(child);
      if (child.items) {
        flatChildren(child.items, flattenChildren);
      }
    }
  });
  return flattenChildren;
}
function flatVisibleChildren(children, flattenVisibleChildren) {
  if (flattenVisibleChildren === void 0) {
    flattenVisibleChildren = [];
  }
  children.forEach(function(child) {
    if (child && (child.expanded || child.parentExpanded)) {
      flattenVisibleChildren.push(child);
      if (child.items) {
        flatVisibleChildren(child.items, flattenVisibleChildren);
      }
    }
  });
  return flattenVisibleChildren;
}
var isPresent = function isPresent2(value2) {
  return value2 !== null && value2 !== void 0;
};
var isArrayEqual = function isArrayEqual2(firstArray, secondArray) {
  if (firstArray.length !== secondArray.length) {
    return false;
  }
  return firstArray.every(function(ex, i) {
    return ex === secondArray[i];
  });
};

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/interfaces/NavigationAction.js
var NavigationAction;
(function(NavigationAction2) {
  NavigationAction2[NavigationAction2["Toggle"] = 0] = "Toggle";
  NavigationAction2[NavigationAction2["Next"] = 1] = "Next";
  NavigationAction2[NavigationAction2["Previous"] = 2] = "Previous";
})(NavigationAction || (NavigationAction = {}));

// node_modules/@progress/kendo-vue-layout/dist/es/panelbar/PanelBar.js
var __assign13 = function() {
  __assign13 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign13.apply(this, arguments);
};
var __spreadArray2 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var allVue36 = vue_runtime_esm_bundler_exports;
var gh35 = allVue36.h;
var isV336 = allVue36.version && allVue36.version[0] === "3";
var PanelBarVue2 = {
  name: "KendoPanelBar",
  // @ts-ignore
  emits: {
    select: null,
    keydown: null
  },
  props: {
    animation: {
      type: Boolean,
      default: true
    },
    items: Array,
    dir: String,
    selected: String,
    expanded: {
      type: Array,
      default: void 0
    },
    focused: String,
    expandMode: {
      type: String,
      default: "multiple",
      validator: function validator17(value2) {
        return ["single", "multiple"].includes(value2);
      }
    },
    className: String,
    keepItemsMounted: Boolean
  },
  created: function created13() {
    this.activeDescendant = null;
    validatePackage(packageMetadata);
  },
  data: function data10() {
    var initialState = getInitialState(this.$props, this.expandMode);
    if (!initialState.currentFocused) {
      initialState.currentFocused = getFirstId(this.$props);
    }
    return initialState;
  },
  computed: {
    selectedItem: function selectedItem() {
      var _a3 = this.$props.selected, selected2 = _a3 === void 0 ? this.currentSelected : _a3;
      return selected2;
    },
    expandedItems: function expandedItems() {
      var expanded = this.$props.expanded !== void 0 ? this.$props.expanded || [] : this.currentExpanded;
      return expanded;
    },
    computedItems: function computedItems() {
      var state = __assign13(__assign13({
        currentExpanded: []
      }, this.$data), {
        selected: this.selectedItem
      });
      var renderState = {
        animation: this.$props.animation,
        keepItemsMounted: this.$props.keepItemsMounted,
        state,
        expanded: this.expandedItems,
        handleSelect: this.handleSelect
      };
      return renderChildren.call(this, this.items, renderState);
    }
  },
  provide: function provide3() {
    return {
      dispatchItemSelect: this.handleSelect
    };
  },
  // @ts-ignore
  setup: !isV336 ? void 0 : function() {
    var v3 = !!isV336;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render35(createElement) {
    var h = gh35 || createElement;
    var className = classNames("k-panelbar", this.$props.className);
    return h("ul", {
      dir: this.$props.dir,
      attrs: this.v3 ? void 0 : {
        dir: this.$props.dir,
        role: "tree",
        tabindex: 0,
        "aria-activedescendant": this.activeDescendant
      },
      role: "tree",
      tabindex: 0,
      onKeydown: this.handleKeyDown,
      on: this.v3 ? void 0 : {
        "keydown": this.handleKeyDown,
        "focus": this.handleWrapperFocus,
        "blur": this.handleWrapperBlur
      },
      onFocus: this.handleWrapperFocus,
      onBlur: this.handleWrapperBlur,
      "class": className,
      "aria-activedescendant": this.activeDescendant
    }, [this.computedItems.map(function(item) {
      return h(PanelBarItem, __assign13(__assign13({
        props: this.v3 ? void 0 : __assign13(__assign13({}, item), {
          item
        })
      }, item), {
        item
      }));
    }, this)]);
  },
  methods: {
    handleSelect: function handleSelect2(event) {
      this.onSelect(event);
      this.onFocus(event);
    },
    onSelect: function onSelect4(event) {
      var _this = this;
      var flattenChildren = flatChildren(this.computedItems);
      var selectedChild;
      var newExpanded;
      flattenChildren.forEach(function(child) {
        if (child.uniquePrivateKey === (event.uniquePrivateKey || _this.currentFocused)) {
          selectedChild = child;
        }
      });
      if (selectedChild) {
        switch (this.expandMode) {
          case "single":
            newExpanded = __spreadArray2(__spreadArray2([], selectedChild.parentUniquePrivateKey, true), [selectedChild.uniquePrivateKey], false);
            if (isArrayEqual(this.expandedItems, newExpanded)) {
              if (selectedChild.parentUniquePrivateKey) {
                newExpanded = __spreadArray2([], selectedChild.parentUniquePrivateKey, true);
              } else {
                newExpanded = [];
              }
            }
            break;
          case "multiple":
            newExpanded = this.expandedItems.slice();
            var index = newExpanded.indexOf(selectedChild.uniquePrivateKey);
            index === -1 ? newExpanded.push(selectedChild.uniquePrivateKey) : newExpanded.splice(index, 1);
            break;
          default:
            newExpanded = this.expandedItems.slice();
            break;
        }
        this.currentSelected = selectedChild.uniquePrivateKey;
        this.currentExpanded = newExpanded;
        this.$emit("select", {
          target: selectedChild,
          expandedItems: newExpanded
        });
      }
    },
    onFocus: function onFocus2(event, step) {
      var _this = this;
      if (step === void 0) {
        step = 0;
      }
      var flattenChildren = flatVisibleChildren(this.computedItems);
      var focusedChild;
      flattenChildren.forEach(function(child, ixd) {
        if (child.uniquePrivateKey === (event.uniquePrivateKey || _this.currentFocused)) {
          var index = ixd + step < 0 ? 0 : ixd + step > flattenChildren.length ? flattenChildren.length - 1 : ixd + step;
          focusedChild = flattenChildren[index];
        }
      });
      if (focusedChild) {
        this.activeDescendant = focusedChild.id;
        this.currentFocused = focusedChild.uniquePrivateKey;
      }
    },
    onNavigate: function onNavigate(event, action) {
      var step;
      switch (action) {
        case NavigationAction.Previous:
          step = -1;
          this.onFocus(event, step);
          break;
        case NavigationAction.Next:
          step = 1;
          this.onFocus(event, step);
          break;
        case NavigationAction.Toggle:
          this.onSelect(event);
          break;
        default:
      }
    },
    handleWrapperFocus: function handleWrapperFocus() {
      if (!this.wrapperFocused) {
        this.wrapperFocused = true;
      }
    },
    handleWrapperBlur: function handleWrapperBlur() {
      this.wrapperFocused = false;
    },
    handleKeyDown: function handleKeyDown4(event) {
      var rtl = this._element && getComputedStyle(this._element).direction === "rtl" || false;
      if (event.target === event.currentTarget) {
        var keyCode = event.keyCode;
        var action = void 0;
        switch (keyCode) {
          case Keys.left:
            action = !rtl ? NavigationAction.Previous : NavigationAction.Next;
            break;
          case Keys.up:
            action = NavigationAction.Previous;
            break;
          case Keys.right:
            action = !rtl ? NavigationAction.Next : NavigationAction.Previous;
            break;
          case Keys.down:
            action = NavigationAction.Next;
            break;
          case Keys.space:
          case Keys.enter:
            action = NavigationAction.Toggle;
            break;
          default:
            action = null;
            break;
        }
        if (action !== null) {
          event.preventDefault();
          this.onNavigate(event, action);
        }
      }
      this.$emit("keydown", event);
    }
  }
};
var PanelBar = PanelBarVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/tilelayout/ResizeHandlers.js
var __assign14 = function() {
  __assign14 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign14.apply(this, arguments);
};
var allVue37 = vue_runtime_esm_bundler_exports;
var gh36 = allVue37.h;
var isV337 = allVue37.version && allVue37.version[0] === "3";
var ResizeHandlersVue2 = {
  name: "KendoResizeHandlers",
  props: {
    direction: String,
    rtl: Boolean
  },
  computed: {
    handleClass: function handleClass() {
      return "k-resize-handle k-cursor-" + this.direction + "-resize";
    },
    dirStyles: function dirStyles() {
      var direction = this.$props.direction;
      switch (direction) {
        case "ew":
          return this.rtl ? {
            top: 0,
            width: "9px",
            left: 0,
            right: ""
          } : {
            top: 0,
            width: "9px",
            right: 0,
            left: ""
          };
        case "ns":
          return {
            left: 0,
            height: "9px"
          };
        case "nesw":
        case "nwse":
          return this.rtl ? {
            width: "9px",
            height: "9px",
            right: "",
            left: 0
          } : {
            width: "9px",
            height: "9px",
            right: 0,
            left: ""
          };
        default:
          return {};
      }
    },
    handleStyle: function handleStyle() {
      return __assign14({
        bottom: 0,
        right: 0
      }, this.dirStyles);
    }
  },
  // @ts-ignore
  setup: !isV337 ? void 0 : function() {
    var v3 = !!isV337;
    return {
      v3
    };
  },
  render: function render36(createElement) {
    var _this2 = this;
    var _this = this;
    var h = gh36 || createElement;
    var direction = this.$props.direction;
    return (
      // @ts-ignore function children
      h(Draggable, {
        onPress: this.handlePress,
        on: this.v3 ? void 0 : {
          "press": this.handlePress,
          "drag": function drag2(event) {
            _this.handleResize(event, false, direction);
          },
          "release": function release2(event) {
            _this.handleResize(event, true, direction);
          }
        },
        onDrag: function drag2(event) {
          _this.handleResize(event, false, direction);
        },
        onRelease: function release2(event) {
          _this.handleResize(event, true, direction);
        }
      }, this.v3 ? function() {
        return [h("div", {
          "class": _this2.handleClass,
          style: _this2.handleStyle
        })];
      } : [h("div", {
        "class": _this2.handleClass,
        style: _this2.handleStyle
      })])
    );
  },
  methods: {
    handleResize: function handleResize(event, isEnd, direction) {
      event.originalEvent.preventDefault();
      this.$emit("resize", event, {
        end: isEnd,
        direction
      });
    },
    handlePress: function handlePress(event) {
      this.$emit("press", event);
    }
  }
};
var ResizeHandlers = ResizeHandlersVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/tilelayout/Tile.js
var __assign15 = function() {
  __assign15 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign15.apply(this, arguments);
};
var __spreadArray3 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var allVue38 = vue_runtime_esm_bundler_exports;
var gh37 = allVue38.h;
var isV338 = allVue38.version && allVue38.version[0] === "3";
var tileDragClasses = ["k-card-title", "k-card-body", "k-tilelayout-item-body", "k-tilelayout-item", "k-tilelayout-item-header", "k-resize-handle"];
var ANIMATION_DURATION = 200;
var TileVue2 = {
  name: "KendoTile",
  inheritAttrs: false,
  props: {
    defaultPosition: {
      required: true
    },
    index: Number,
    tile: Object,
    hintStyle: Object,
    hintClass: String,
    header: [String, Function, Object],
    body: [String, Function, Object],
    item: [String, Function, Object],
    resizable: {
      type: [String, Boolean],
      default: true,
      validator: function validator18(value2) {
        return ["horizontal", "vertical", true, false].includes(value2);
      }
    },
    reorderable: {
      type: Boolean,
      default: true
    },
    tabIndex: {
      type: Number,
      default: 0
    },
    ariaDescribedBy: String,
    ignoreDrag: Function
  },
  created: function created14() {
    this.oldSize = {};
    this.dragging = false;
    this.resizing = false;
    this.currentIgnoreDrag = false;
    this.pressOffset = {
      x: 0,
      y: 0
    };
    this.pressXY = {
      x: 0,
      y: 0
    };
    this.currentTranslate = {
      x: 0,
      y: 0
    };
    this.prevDefaultPosition = this.$props.defaultPosition;
    this.preventDataOps = void 0;
  },
  computed: {
    wrapperClass: function wrapperClass5() {
      return {
        "k-tilelayout-item": true,
        "k-card": true,
        "k-cursor-grab": this.reorderable
      };
    }
  },
  data: function data11() {
    return {
      rtl: false,
      grabbed: false,
      showHint: false
    };
  },
  mounted: function mounted8() {
    if (!this.$el) {
      return;
    }
    this.element = this.$el.nodeType === 3 ? this.$el.nextElementSibling : this.$el;
    this.draggable = this.$refs.draggable;
    if (getComputedStyle(this.element).direction === "rtl") {
      this.rtl = true;
    }
  },
  watch: {
    defaultPosition: function defaultPosition(_, oldValue) {
      this.prevDefaultPosition = oldValue;
    }
  },
  beforeUpdate: function beforeUpdate() {
    this.oldSize = {};
    var dragElement2 = this.dragElement();
    if (dragElement2) {
      this.oldSize = dragElement2.getBoundingClientRect();
    }
    return null;
  },
  updated: function updated4() {
    var dragElement2 = this.dragElement();
    this.hintElement = getRef(this, "hintElement");
    if (!dragElement2) {
      return;
    }
    var newBox = dragElement2.getBoundingClientRect();
    var oldBox = this.oldSize;
    var that = this;
    if (this.resizing) {
      var diffCol = newBox.width - oldBox.width;
      if (this.rtl) {
        var currentM = parseFloat(dragElement2.style.marginLeft || "0");
        dragElement2.style.marginLeft = currentM - diffCol + "px";
      } else {
        var currentM = parseFloat(dragElement2.style.marginRight || "0");
        dragElement2.style.marginRight = currentM + diffCol + "px";
      }
      this.pressXY.x += this.rtl ? -diffCol : diffCol;
      var diffRow = newBox.height - oldBox.height;
      var currentBot = parseFloat(dragElement2.style.height.substring(12));
      dragElement2.style.height = "calc(100% + ".concat(currentBot + diffRow, "px)");
      this.pressXY.y += diffRow;
    }
    var deltaX = oldBox.left - newBox.left;
    var deltaY = oldBox.top - newBox.top;
    if (deltaX === 0 && deltaY === 0) {
      return;
    }
    if (this.dragging) {
      if (this.prevDefaultPosition.order !== this.$props.defaultPosition.order || this.prevDefaultPosition.col !== this.$props.defaultPosition.col) {
        this.currentTranslate.x = 0;
        this.currentTranslate.y = 0;
        dragElement2.style.transform = "";
      }
      return;
    }
    if (Math.abs(deltaY) < 15 && Math.abs(deltaX) < 15) {
      return;
    }
    requestAnimationFrame(function() {
      var domNode = that.element;
      if (!domNode) {
        return;
      }
      domNode.style.transform = "translate(".concat(deltaX, "px, ").concat(deltaY, "px)");
      domNode.style.transition = "transform 0s";
      requestAnimationFrame(function() {
        domNode.style.transform = "";
        domNode.style.transition = "transform ".concat(ANIMATION_DURATION, "ms cubic-bezier(0.2, 0, 0, 1) 0s");
      });
    });
  },
  // @ts-ignore
  setup: !isV338 ? void 0 : function() {
    var v3 = !!isV338;
    return {
      v3
    };
  },
  render: function render37(createElement) {
    var _this = this;
    var h = gh37 || createElement;
    var defaultSlots = getDefaultSlots(this);
    if (clearTimeout && typeof clearTimeout === "function") {
      clearTimeout(this.preventDataOps);
      if (canUseDOM) {
        this.preventDataOps = window.setTimeout(function() {
          _this.preventDataOps = void 0;
        }, 200);
      }
    }
    var position = this.$props.defaultPosition;
    var resizable = this.$props.resizable;
    var hintItemStyles = __assign15({
      gridColumnStart: position.col,
      gridColumnEnd: "span ".concat(position.colSpan),
      gridRowStart: position.row,
      gridRowEnd: "span ".concat(position.rowSpan),
      outline: "none",
      order: position.order
    }, this.$props.hintStyle);
    var itemStyles2 = {
      gridColumnStart: position.col,
      gridColumnEnd: "span ".concat(position.colSpan),
      gridRowStart: position.row,
      gridRowEnd: "span ".concat(position.rowSpan),
      order: position.order
    };
    var card = h("div", {
      "class": this.wrapperClass,
      style: __assign15({
        height: "100%"
      }, itemStyles2),
      role: "listitem",
      attrs: this.v3 ? void 0 : {
        role: "listitem",
        tabIndex: this.$props.tabIndex,
        "aria-keyshortcuts": "Enter",
        "aria-dropeffect": "execute",
        "aria-grabbed": this.grabbed ? true : false,
        "aria-ariaDescribedBy": this.$props.ariaDescribedBy
      },
      tabIndex: this.$props.tabIndex,
      "aria-keyshortcuts": "Enter",
      "aria-dropeffect": "execute",
      "aria-grabbed": this.grabbed ? true : false,
      "aria-ariaDescribedBy": this.$props.ariaDescribedBy,
      onTouchstart: this.touchStart,
      on: this.v3 ? void 0 : {
        "touchstart": this.touchStart
      }
    }, [defaultSlots, resizable && resizable !== "vertical" && h(ResizeHandlers, {
      onPress: this.handlePress,
      on: this.v3 ? void 0 : {
        "press": this.handlePress,
        "resize": this.handleResize
      },
      onResize: this.handleResize,
      direction: "ew",
      attrs: this.v3 ? void 0 : {
        direction: "ew",
        rtl: this.rtl
      },
      rtl: this.rtl
    }), resizable && resizable !== "horizontal" && h(ResizeHandlers, {
      onPress: this.handlePress,
      on: this.v3 ? void 0 : {
        "press": this.handlePress,
        "resize": this.handleResize
      },
      onResize: this.handleResize,
      direction: "ns",
      attrs: this.v3 ? void 0 : {
        direction: "ns",
        rtl: this.rtl
      },
      rtl: this.rtl
    }), resizable === true && h(ResizeHandlers, {
      onPress: this.handlePress,
      on: this.v3 ? void 0 : {
        "press": this.handlePress,
        "resize": this.handleResize
      },
      onResize: this.handleResize,
      direction: this.rtl ? "nesw" : "nwse",
      attrs: this.v3 ? void 0 : {
        direction: this.rtl ? "nesw" : "nwse",
        rtl: this.rtl
      },
      rtl: this.rtl
    })]);
    var draggableHint = [
      this.showHint && h("div", {
        ref: setRef(this, "hintElement"),
        style: __assign15({
          position: "absolute"
        }, hintItemStyles),
        "class": classNames("k-layout-item-hint k-layout-item-hint-reorder", this.$props.hintClass)
      }),
      // @ts-ignore function children
      h(Draggable, {
        ref: "draggable",
        onDrag: this.handleDrag,
        on: this.v3 ? void 0 : {
          "drag": this.handleDrag,
          "release": this.handleRelease,
          "press": this.handlePress
        },
        onRelease: this.handleRelease,
        onPress: this.handlePress
      }, this.v3 ? function() {
        return [card];
      } : [card])
    ];
    return this.v3 ? draggableHint : h("div", {
      style: itemStyles2
    }, [draggableHint]);
  },
  methods: {
    touchStart: function touchStart(e) {
      var dragClasses = this.tile.dragClasses ? __spreadArray3(__spreadArray3([], tileDragClasses, true), this.tile.dragClasses, true) : tileDragClasses;
      if (dragClasses.some(function(dragClass) {
        return e.target.classList.contains(dragClass);
      })) {
        e.preventDefault();
      }
    },
    dragElement: function dragElement() {
      return this.draggable && this.draggable.element;
    },
    handleResize: function handleResize2(e, q) {
      var dragElement2 = this.dragElement();
      if (q.end) {
        this.handleRelease();
        return;
      }
      if (!this.reorderable || !this.element) {
        return;
      }
      var x = e.clientX;
      var y = e.clientY;
      this.resizing = true;
      var dX = (q.direction !== "ns" ? x - this.pressXY.x : 0) * (this.rtl ? -1 : 1);
      var dY = q.direction !== "ew" ? y - this.pressXY.y : 0;
      if (dragElement2) {
        if (this.rtl) {
          dragElement2.style.marginLeft = -dX + "px";
        } else {
          dragElement2.style.marginRight = -dX + "px";
        }
        dragElement2.style.height = "calc(100% + ".concat(dY, "px)");
      }
      this.showHint = true;
      if (this.hintElement) {
        this.hintElement.classList.add("k-layout-item-hint-resize");
      }
      this.element.classList.add("k-layout-item-hint", "k-layout-item-hint-resize");
      if (this.preventDataOps) {
        return;
      }
      var col = 0;
      var row = 0;
      var wrapBox = this.element.getBoundingClientRect();
      if (dX > wrapBox.width / this.$props.defaultPosition.colSpan / 3) {
        col = 1;
      }
      if (dX < -wrapBox.width / this.$props.defaultPosition.colSpan / 1.25) {
        col = -1;
      }
      if (dY > wrapBox.height / this.$props.defaultPosition.rowSpan / 3) {
        row = 1;
      }
      if (dY < -wrapBox.height / this.$props.defaultPosition.rowSpan / 1.25) {
        row = -1;
      }
      if (col !== 0 || row !== 0) {
        this.$emit("update", this.$props.index, 0, 0, row, col, true);
      }
    },
    handlePress: function handlePress2(e) {
      var dragElement2 = this.dragElement();
      if (!this.reorderable || !dragElement2) {
        return;
      }
      this.pressXY = {
        x: e.clientX,
        y: e.clientY
      };
      this.currentIgnoreDrag = false;
      if (this.$props.ignoreDrag && this.$props.ignoreDrag(e.originalEvent)) {
        this.currentIgnoreDrag = true;
        return;
      }
      if (this.element) {
        this.element.style.zIndex = "10";
        this.element.classList.add("k-layout-item-hint");
        this.showHint = true;
      }
      dragElement2.classList.remove("k-cursor-grab");
      dragElement2.classList.add("k-cursor-grabbing");
      this.grabbed = true;
      var rec = dragElement2.getBoundingClientRect();
      this.pressOffset = {
        x: e.clientX - rec.x,
        y: e.clientY - rec.y
      };
    },
    handleDrag: function handleDrag(e) {
      if (!this.reorderable || this.currentIgnoreDrag) {
        return;
      }
      var dragElement2 = this.dragElement();
      if (e.originalEvent.defaultPrevented || !dragElement2) {
        return;
      }
      this.dragging = true;
      e.originalEvent.preventDefault();
      var rec = dragElement2.getBoundingClientRect();
      this.currentTranslate = {
        x: e.clientX - rec.x - this.pressOffset.x + this.currentTranslate.x,
        y: e.clientY - rec.y - this.pressOffset.y + this.currentTranslate.y
      };
      dragElement2.style.transform = "translate(".concat(this.currentTranslate.x, "px, ").concat(this.currentTranslate.y, "px)");
      dragElement2.style.transition = "transform 0s";
      if (this.preventDataOps) {
        return;
      }
      var col = 0;
      var row = 0;
      if (this.currentTranslate.y > 0.7 * rec.height / this.$props.defaultPosition.rowSpan) {
        row = 1;
      }
      if (this.currentTranslate.y < 0.7 * -rec.height / this.$props.defaultPosition.rowSpan) {
        row = -1;
      }
      if (this.currentTranslate.x > 0.7 * rec.width / this.$props.defaultPosition.colSpan) {
        col = 1;
      }
      if (this.currentTranslate.x < 0.7 * -rec.width / this.$props.defaultPosition.colSpan) {
        col = -1;
      }
      this.$emit("update", this.$props.index, row, this.rtl ? -col : col, 0, 0);
    },
    handleRelease: function handleRelease() {
      if (!this.reorderable) {
        return;
      }
      this.dragging = this.resizing = false;
      this.currentTranslate = {
        x: 0,
        y: 0
      };
      if (this.element) {
        this.element.style.zIndex = "1";
        this.element.classList.remove("k-layout-item-hint", "k-layout-item-hint-resize");
        if (this.hintElement) {
          this.hintElement.classList.remove("k-layout-item-hint-resize");
        }
        this.showHint = false;
      }
      var dragElement2 = this.dragElement();
      if (dragElement2) {
        dragElement2.style.transform = "translate(0px, 0px)";
        dragElement2.style.transition = "transform ".concat(ANIMATION_DURATION, "ms cubic-bezier(0.2, 0, 0, 1) 0s");
        dragElement2.style.marginRight = "0px";
        dragElement2.style.marginLeft = "0px";
        dragElement2.style.height = "100%";
        dragElement2.classList.remove("k-cursor-grabbing");
        dragElement2.classList.add("k-cursor-grab");
        this.grabbed = false;
      }
    }
  }
};
var Tile = TileVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/tilelayout/TileLayout.js
var allVue39 = vue_runtime_esm_bundler_exports;
var gh38 = allVue39.h;
var isV339 = allVue39.version && allVue39.version[0] === "3";
var AUTO_FLOW_CLASSES = {
  "column": "k-grid-flow-col",
  "row": "k-grid-flow-row",
  "column dense": "k-grid-flow-col-dense",
  "row dense": "k-grid-flow-row-dense",
  "unset": "k-grid-flow-unset"
};
var TileLayoutVue2 = {
  name: "KendoTileLayout",
  props: {
    id: String,
    dir: String,
    gap: Object,
    columns: Number,
    columnWidth: [Number, String],
    rowHeight: [Number, String],
    dataItemKey: String,
    items: Array,
    positions: Array,
    autoFlow: {
      type: String,
      default: "column",
      validator: function validator19(value2) {
        return ["column", "row", "column dense", "row dense", "unset"].includes(value2);
      }
    },
    ignoreDrag: Function
  },
  created: function created15() {
    validatePackage(packageMetadata);
  },
  data: function data12() {
    return {
      currentPositions: []
    };
  },
  computed: {
    compPositions: function compPositions() {
      if (this.positions) {
        return this.positions.map(function(p, i) {
          return Object.assign({
            order: i,
            rowSpan: 1,
            colSpan: 1
          }, p);
        });
      }
      if (this.items && this.currentPositions.length) {
        return this.currentPositions.map(function(p, i) {
          return Object.assign({
            order: i,
            rowSpan: 1,
            colSpan: 1
          }, p);
        });
      }
      return (this.$props.items || []).map(function(p, i) {
        return Object.assign({
          order: i,
          rowSpan: 1,
          colSpan: 1
        }, p.defaultPosition);
      });
    },
    wrapperClass: function wrapperClass6() {
      var _a3;
      var autoFlow = this.$props.autoFlow;
      return _a3 = {
        "k-tilelayout": true
      }, _a3[AUTO_FLOW_CLASSES[autoFlow]] = true, _a3;
    }
  },
  // @ts-ignore
  setup: !isV339 ? void 0 : function() {
    var v3 = !!isV339;
    return {
      v3
    };
  },
  render: function render38(createElement) {
    var h = gh38 || createElement;
    var _a3 = this.$props, _b = _a3.columns, columns = _b === void 0 ? 3 : _b, _c = _a3.columnWidth, columnWidth = _c === void 0 ? "1fr" : _c, gap = _a3.gap, _d = _a3.rowHeight, rowHeight = _d === void 0 ? "1fr" : _d, _e = _a3.items, items = _e === void 0 ? [] : _e;
    var gapValue = gap ? "".concat(typeof gap.rows === "number" ? gap.rows + "px" : gap.rows) + " " + "".concat(typeof gap.columns === "number" ? gap.columns + "px" : gap.columns) : 16;
    var tileLayoutStyles = {
      gridTemplateColumns: "repeat(".concat(columns, ", minmax(0px, ").concat(typeof columnWidth === "number" ? columnWidth + "px" : columnWidth, "))"),
      gridAutoRows: "minmax(0px, ".concat(typeof rowHeight === "number" ? rowHeight + "px" : rowHeight, ")"),
      gap: gapValue,
      padding: gapValue
    };
    return h("div", {
      dir: this.$props.dir,
      attrs: this.v3 ? void 0 : {
        dir: this.$props.dir,
        id: this.$props.id,
        role: "list"
      },
      "class": this.wrapperClass,
      style: tileLayoutStyles,
      id: this.$props.id,
      role: "list"
    }, [items.map(function(tile, index) {
      var _this = this;
      var tileTitleId = tile && tile.id || guid();
      var item = templateRendering.call(this, tile.item, getListeners.call(this));
      var itemContent = getTemplate.call(this, {
        h,
        template: item,
        defaultRendering: null,
        additionalProps: {
          tile,
          index
        }
      });
      var header = templateRendering.call(this, tile.header, getListeners.call(this));
      var headerContent = getTemplate.call(this, {
        h,
        template: header,
        defaultRendering: null,
        additionalProps: {
          tile,
          index,
          id: tileTitleId,
          headerText: tile.headerText
        }
      });
      var body = templateRendering.call(this, tile.body, getListeners.call(this));
      var bodyContent = getTemplate.call(this, {
        h,
        template: body,
        defaultRendering: null,
        additionalProps: {
          tile,
          index,
          bodyText: tile.bodyText
        }
      });
      return (
        // @ts-ignore function children
        h(Tile, {
          key: this.$props.dataItemKey ? getter(this.$props.dataItemKey)(tile) : index,
          onUpdate: this.updateHandle,
          on: this.v3 ? void 0 : {
            "update": this.updateHandle
          },
          defaultPosition: this.compPositions[index],
          attrs: this.v3 ? void 0 : {
            defaultPosition: this.compPositions[index],
            index,
            resizable: tile.resizable,
            reorderable: tile.reorderable,
            tile,
            hintClass: tile.hintClass,
            hintStyle: tile.hintStyle,
            ignoreDrag: this.$props.ignoreDrag,
            "aria-describedby": tileTitleId,
            "tab-index": tile.tabIndex
          },
          index,
          resizable: tile.resizable,
          reorderable: tile.reorderable,
          style: tile.style,
          "class": tile.class,
          tile,
          hintClass: tile.hintClass,
          hintStyle: tile.hintStyle,
          ignoreDrag: this.$props.ignoreDrag,
          "aria-describedby": tileTitleId,
          "tab-index": tile.tabIndex
        }, this.v3 ? function() {
          return [tile.item ? itemContent : [h("div", {
            "class": "k-tilelayout-item-header k-card-header"
          }, [tile.header ? headerContent : h("h5", {
            "class": "k-card-title",
            id: tileTitleId,
            attrs: _this.v3 ? void 0 : {
              id: tileTitleId
            }
          }, [tile.headerText])]), h("div", {
            "class": "k-tilelayout-item-body k-card-body"
          }, [tile.body ? bodyContent : tile.bodyText])]];
        } : [tile.item ? itemContent : [h("div", {
          "class": "k-tilelayout-item-header k-card-header"
        }, [tile.header ? headerContent : h("h5", {
          "class": "k-card-title",
          id: tileTitleId,
          attrs: _this.v3 ? void 0 : {
            id: tileTitleId
          }
        }, [tile.headerText])]), h("div", {
          "class": "k-tilelayout-item-body k-card-body"
        }, [tile.body ? bodyContent : tile.bodyText])]])
      );
    }, this)]);
  },
  methods: {
    focus: function focus6() {
      if (this.$el) {
        this.$el.focus();
      }
    },
    updateHandle: function updateHandle(index, dOrder, dCol, dRowSpan, dColSpan, isResized) {
      if (dRowSpan === void 0) {
        dRowSpan = 0;
      }
      if (dColSpan === void 0) {
        dColSpan = 0;
      }
      if (dOrder === 0 && dCol === 0 && !dColSpan && !dRowSpan) {
        return;
      }
      var shouldUpdate = false;
      var positions = this.compPositions.map(function(p) {
        return Object.assign({}, p);
      });
      var current = positions[index];
      var other = positions.find(function(item) {
        return item.order === current.order + dOrder;
      });
      if (other && other !== current) {
        current.order += dOrder;
        other.order += -dOrder;
        shouldUpdate = true;
      }
      var proposedCol = current.col + dCol;
      if (dCol !== 0 && proposedCol >= 1 && proposedCol + current.colSpan <= (this.$props.columns || 3) + 1) {
        current.col = proposedCol;
        shouldUpdate = true;
      }
      var proposedColSpan = current.colSpan + dColSpan;
      if (dColSpan && proposedColSpan >= 1 && proposedColSpan + current.col <= (this.$props.columns || 3) + 1) {
        current.colSpan = proposedColSpan;
        shouldUpdate = true;
      }
      var proposedRowSpan = current.rowSpan + dRowSpan;
      if (dRowSpan && proposedRowSpan >= 1) {
        current.rowSpan = proposedRowSpan;
        shouldUpdate = true;
      }
      if (shouldUpdate) {
        this.currentPositions = positions;
        if (isResized) {
          this.$emit("tileresize", {
            value: positions,
            index,
            rowSpan: dRowSpan,
            colSpan: dColSpan
          });
        }
        this.$emit("reposition", {
          value: positions,
          index,
          row: dOrder,
          col: dCol
        });
      }
    }
  }
};
var TileLayout = TileLayoutVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/appbar/AppBar.js
var allVue40 = vue_runtime_esm_bundler_exports;
var gh39 = allVue40.h;
var isV340 = allVue40.version && allVue40.version[0] === "3";
var AppBarVue2 = {
  name: "KendoAppBar",
  props: {
    id: String,
    themeColor: {
      type: String,
      default: "light"
    },
    position: {
      type: String,
      default: "top",
      validator: function validator20(value2) {
        return ["top", "bottom"].includes(value2);
      }
    },
    positionMode: {
      type: String,
      default: "static",
      validator: function validator21(value2) {
        return ["static", "sticky", "fixed"].includes(value2);
      }
    }
  },
  created: function created16() {
    validatePackage(packageMetadata);
    this.calculatedId = guid();
  },
  computed: {
    wrapperClass: function wrapperClass7() {
      var _a3 = this.$props, position = _a3.position, positionMode = _a3.positionMode, themeColor = _a3.themeColor;
      return {
        "k-appbar": true,
        "k-appbar-top": position === "top",
        "k-appbar-bottom": position === "bottom",
        "k-appbar-static": positionMode === "static",
        "k-appbar-sticky": positionMode === "sticky",
        "k-appbar-fixed": positionMode === "fixed",
        "k-appbar-light": themeColor === "light",
        "k-appbar-dark": themeColor === "dark",
        "k-appbar-inherit": themeColor === "inherit"
      };
    }
  },
  // @ts-ignore
  setup: !isV340 ? void 0 : function() {
    var v3 = !!isV340;
    return {
      v3
    };
  },
  render: function render39(createElement) {
    var h = gh39 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var id = this.$props.id;
    return h("div", {
      "class": this.wrapperClass,
      id: id || this.calculatedId,
      attrs: this.v3 ? void 0 : {
        id: id || this.calculatedId
      }
    }, [defaultSlot]);
  },
  methods: {
    focus: function focus7() {
      if (this.$el) {
        focusFirstFocusableChild(this.$el);
      }
    }
  }
};
var AppBar = AppBarVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/appbar/AppBarSection.js
var allVue41 = vue_runtime_esm_bundler_exports;
var gh40 = allVue41.h;
var isV341 = allVue41.version && allVue41.version[0] === "3";
var AppBarSectionVue2 = {
  name: "KendoAppBarSection",
  // @ts-ignore
  setup: !isV341 ? void 0 : function() {
    var v3 = !!isV341;
    return {
      v3
    };
  },
  render: function render40(createElement) {
    var h = gh40 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("div", {
      "class": "k-appbar-section"
    }, [defaultSlot]);
  },
  methods: {
    focus: function focus8() {
      if (this.$el) {
        focusFirstFocusableChild(this.$el);
      }
    }
  }
};
var AppBarSection = AppBarSectionVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/appbar/AppBarSpacer.js
var allVue42 = vue_runtime_esm_bundler_exports;
var gh41 = allVue42.h;
var isV342 = allVue42.version && allVue42.version[0] === "3";
var AppBarSpacerVue2 = {
  name: "KendoAppBarSpacer",
  props: {
    width: [String, Number]
  },
  computed: {
    spacerClasses: function spacerClasses() {
      return {
        "k-appbar-spacer": true,
        "k-appbar-spacer-sized": this.width !== void 0
      };
    },
    spacerStyles: function spacerStyles() {
      return {
        flexBasis: this.width !== void 0 ? this.width : void 0
      };
    }
  },
  // @ts-ignore
  setup: !isV342 ? void 0 : function() {
    var v3 = !!isV342;
    return {
      v3
    };
  },
  render: function render41(createElement) {
    var h = gh41 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("span", {
      "class": this.spacerClasses,
      style: this.spacerStyles
    }, [defaultSlot]);
  },
  methods: {
    focus: function focus9() {
      if (this.$el) {
        focusFirstFocusableChild(this.$el);
      }
    }
  }
};
var AppBarSpacer = AppBarSpacerVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/bottomnavigation/models/utils.js
var THEME_COLOR_CLASSES = {
  "primary": "k-bottom-nav-primary",
  "secondary": "k-bottom-nav-secondary",
  "tertiary": "k-bottom-nav-tertiary",
  "info": "k-bottom-nav-info",
  "success": "k-bottom-nav-success",
  "warning": "k-bottom-nav-warning",
  "error": "k-bottom-nav-error",
  "dark": "k-bottom-nav-dark",
  "light": "k-bottom-nav-light",
  "inverse": "k-bottom-nav-inverse"
};
var FILL_CLASSES = {
  "flat": "k-bottom-nav-flat",
  "solid": "k-bottom-nav-solid"
};
var ITEM_FLOW_CLASSES = {
  "vertical": "k-bottom-nav-item-flow-vertical",
  "horizontal": "k-bottom-nav-item-flow-horizontal"
};
var POSITION_MODE_CLASSES = {
  "fixed": "k-pos-fixed",
  "sticky": "k-pos-sticky"
};

// node_modules/@progress/kendo-vue-layout/dist/es/bottomnavigation/BottomNavigationItem.js
var allVue43 = vue_runtime_esm_bundler_exports;
var gh42 = allVue43.h;
var isV343 = allVue43.version && allVue43.version[0] === "3";
var BottomNavigationItemVue2 = {
  name: "KendoBottomNavigationItem",
  // @ts-ignore
  emits: {
    "keydown": null,
    "select": null
  },
  props: {
    id: String,
    disabled: Boolean,
    selected: Boolean,
    icon: String,
    item: [String, Object, Function],
    text: String,
    dataItem: Object,
    index: Number,
    tabIndex: {
      type: Number,
      default: 0
    }
  },
  created: function created17() {
    validatePackage(packageMetadata);
  },
  computed: {
    itemClasses: function itemClasses() {
      var _a3 = this.$props, selected2 = _a3.selected, disabled = _a3.disabled;
      return {
        "k-bottom-nav-item": true,
        "k-selected": selected2,
        "k-disabled": disabled
      };
    }
  },
  // @ts-ignore
  setup: !isV343 ? void 0 : function() {
    var v3 = !!isV343;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render42(createElement) {
    var h = gh42 || createElement;
    var _a3 = this.$props, selected2 = _a3.selected, disabled = _a3.disabled, item = _a3.item, dataItem = _a3.dataItem, id = _a3.id, index = _a3.index, tabIndex = _a3.tabIndex;
    var icon = dataItem.icon, text = dataItem.text, svgIcon = dataItem.svgIcon;
    var content = getTemplate.call(this, {
      h,
      template: item,
      defaultRendering: null,
      additionalProps: {
        itemIndex: index,
        item: dataItem
      }
    });
    var bottomNavItem = h("span", {
      "class": this.itemClasses,
      role: "link",
      attrs: this.v3 ? void 0 : {
        role: "link",
        id,
        tabIndex,
        "aria-current": selected2,
        "aria-disabled": disabled
      },
      id,
      tabIndex,
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick,
        "keydown": this.handleKeyDown
      },
      onKeydown: this.handleKeyDown,
      "aria-current": selected2,
      "aria-disabled": disabled
    }, [this.$props.item ? content : [icon && h(Icon, {
      name: icon,
      attrs: this.v3 ? void 0 : {
        name: icon,
        icon: svgIcon,
        size: "xlarge"
      },
      icon: svgIcon,
      size: "xlarge",
      "class": "k-bottom-nav-item-icon"
    }), text && h("span", {
      "class": "k-bottom-nav-item-text",
      style: {
        userSelect: "none"
      }
    }, [text])]]);
    return bottomNavItem;
  },
  methods: {
    handleClick: function handleClick7(event) {
      if (this.index !== void 0 && !this.disabled) {
        this.$emit("select", event, this.index);
      }
    },
    handleKeyDown: function handleKeyDown5(event) {
      if (this.index !== void 0 && !this.disabled) {
        this.$emit("keydown", event, this.index);
      }
    }
  }
};
var BottomNavigationItem = BottomNavigationItemVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/bottomnavigation/BottomNavigation.js
var allVue44 = vue_runtime_esm_bundler_exports;
var gh43 = allVue44.h;
var isV344 = allVue44.version && allVue44.version[0] === "3";
var BottomNavigationVue2 = {
  name: "KendoBottomNavigation",
  // @ts-ignore
  emits: {
    "keydown": null,
    "select": null
  },
  props: {
    dir: String,
    themeColor: {
      type: String,
      default: "primary",
      validator: function validator22(value2) {
        return ["primary", "secondary", "tertiary", "info", "success", "warning", "error", "dark", "light", "inverse"].includes(value2);
      }
    },
    fill: {
      type: String,
      default: "flat",
      validator: function validator23(value2) {
        return ["solid", "flat"].includes(value2);
      }
    },
    fillMode: {
      type: String,
      default: "flat",
      validator: function validator24(value2) {
        return ["solid", "flat"].includes(value2);
      }
    },
    item: [String, Object, Function],
    items: Array,
    itemFlow: {
      type: String,
      default: "vertical",
      validator: function validator25(value2) {
        return ["vertical", "horizontal"].includes(value2);
      }
    },
    positionMode: {
      type: String,
      default: "fixed",
      validator: function validator26(value2) {
        return ["sticky", "fixed"].includes(value2);
      }
    },
    border: {
      type: Boolean,
      default: true
    },
    disabled: Boolean,
    selected: Number
  },
  created: function created18() {
    validatePackage(packageMetadata);
    this.navId = guid();
  },
  computed: {
    navClasses: function navClasses() {
      var _a3;
      var _b = this.$props, themeColor = _b.themeColor, fillMode = _b.fillMode, positionMode = _b.positionMode, itemFlow = _b.itemFlow, border = _b.border, disabled = _b.disabled;
      var fill = fillMode !== void 0 ? fillMode : this.$props.fill;
      return _a3 = {
        "k-bottom-nav": true
      }, _a3[POSITION_MODE_CLASSES[positionMode]] = true, _a3[THEME_COLOR_CLASSES[themeColor]] = true, _a3[FILL_CLASSES[fill]] = true, _a3[ITEM_FLOW_CLASSES[itemFlow]] = true, _a3["k-bottom-nav-border"] = border, _a3["k-disabled"] = disabled, _a3;
    }
  },
  // @ts-ignore
  setup: !isV344 ? void 0 : function() {
    var v3 = !!isV344;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render43(createElement) {
    var h = gh43 || createElement;
    var _a3 = this.$props, id = _a3.id, items = _a3.items, item = _a3.item, disabled = _a3.disabled;
    return h("nav", {
      "class": this.navClasses,
      id: id || this.navId,
      attrs: this.v3 ? void 0 : {
        id: id || this.navId
      }
    }, [items && items.map(function(element, index) {
      var content = templateRendering.call(this, element.item || item, getListeners.call(this));
      return (
        // @ts-ignore 
        h(BottomNavigationItem, {
          key: index,
          index,
          attrs: this.v3 ? void 0 : {
            index,
            id: "".concat(id || this.navId, "-").concat(index),
            disabled: disabled || element.disabled,
            selected: this.selected === index || element.selected,
            dataItem: element,
            item: content
          },
          style: element.style,
          "class": element.class,
          id: "".concat(id || this.navId, "-").concat(index),
          disabled: disabled || element.disabled,
          selected: this.selected === index || element.selected,
          dataItem: element,
          item: content,
          onSelect: this.handleSelect,
          on: this.v3 ? void 0 : {
            "select": this.handleSelect,
            "keydown": this.handleKeyDown
          },
          onKeydown: this.handleKeyDown
        })
      );
    }, this)]);
  },
  methods: {
    focus: function focus10() {
      if (this.$el) {
        focusFirstFocusableChild(this.$el);
      }
    },
    dispatchSelectEvent: function dispatchSelectEvent(dispatchedEvent, index) {
      if (!this.items) {
        return;
      }
      if (!this.items[index].disabled) {
        this.$emit("select", {
          event: dispatchedEvent,
          itemTarget: this.items[index],
          itemIndex: index
        });
      }
    },
    handleSelect: function handleSelect3(event, clickedItemIndex) {
      this.dispatchSelectEvent(event, clickedItemIndex);
    },
    handleKeyDown: function handleKeyDown6(event, clickedItemIndex) {
      switch (event.keyCode) {
        case Keys.enter:
        case Keys.space:
          this.dispatchSelectEvent(event, clickedItemIndex);
          event.preventDefault();
          break;
        default:
          break;
      }
      this.$emit("keydown", {
        event,
        itemTarget: this.items[clickedItemIndex],
        itemIndex: clickedItemIndex
      });
    }
  }
};
var BottomNavigation = BottomNavigationVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/expansionpanel/ExpansionPanel.js
var allVue45 = vue_runtime_esm_bundler_exports;
var gh44 = allVue45.h;
var isV345 = allVue45.version && allVue45.version[0] === "3";
var ExpansionPanelVue2 = {
  name: "KendoExpansionPanel",
  props: {
    dir: String,
    id: String,
    tabIndex: Number,
    title: String,
    subtitle: String,
    titleRender: [String, Object, Function],
    subtitleRender: [String, Object, Function],
    expandIcon: String,
    expandSvgIcon: Object,
    collapseIcon: String,
    collapseSvgIcon: Object,
    expanded: Boolean,
    disabled: Boolean
  },
  created: function created19() {
    validatePackage(packageMetadata);
  },
  computed: {
    wrapperClass: function wrapperClass8() {
      var _a3 = this.$props, expanded = _a3.expanded, disabled = _a3.disabled;
      return {
        "k-expander": true,
        "k-expanded": expanded,
        "k-focus": this.focused && !disabled,
        "k-disabled": disabled
      };
    },
    expandIconName: function expandIconName() {
      var _a3 = this.$props, expanded = _a3.expanded, expandIcon = _a3.expandIcon, collapseIcon = _a3.collapseIcon;
      return expanded ? expandIcon ? getIconName(expandIcon) : "chevron-up" : collapseIcon ? getIconName(collapseIcon) : "chevron-down";
    },
    expandSVGIcon: function expandSVGIcon() {
      var _a3 = this.$props, expanded = _a3.expanded, expandSvgIcon = _a3.expandSvgIcon, collapseSvgIcon = _a3.collapseSvgIcon;
      return expanded ? expandSvgIcon || chevronUpIcon : collapseSvgIcon || chevronDownIcon;
    }
  },
  data: function data13() {
    return {
      focused: false
    };
  },
  // @ts-ignore
  setup: !isV345 ? void 0 : function() {
    var v3 = !!isV345;
    return {
      v3
    };
  },
  render: function render44(createElement) {
    var h = gh44 || createElement;
    var defaultSlots = getDefaultSlots(this);
    var _a3 = this.$props, _b = _a3.expanded, expanded = _b === void 0 ? false : _b, disabled = _a3.disabled, title = _a3.title, titleRender = _a3.titleRender, subtitle = _a3.subtitle, subtitleRender = _a3.subtitleRender, ariaControls = _a3.ariaControls, tabIndex = _a3.tabIndex, id = _a3.id;
    var titleTemplate = templateRendering.call(this, titleRender, getListeners.call(this));
    var titleToRender = getTemplate.call(this, {
      h,
      template: titleTemplate,
      defaultRendering: h("div", {
        "class": "k-expander-title"
      }, [title])
    });
    var subtitleTemplate = templateRendering.call(this, subtitleRender, getListeners.call(this));
    var subtitleToRender = getTemplate.call(this, {
      h,
      template: subtitleTemplate,
      defaultRendering: h("div", {
        "class": "k-expander-sub-title"
      }, [subtitle])
    });
    return h("div", {
      "class": this.wrapperClass,
      onFocusin: this.handleFocus,
      on: this.v3 ? void 0 : {
        "focusin": this.handleFocus,
        "focusout": this.handleBlur,
        "keydown": this.onKeyDown
      },
      onFocusout: this.handleBlur,
      id,
      attrs: this.v3 ? void 0 : {
        id
      },
      onKeydown: this.onKeyDown
    }, [h("div", {
      role: "button",
      attrs: this.v3 ? void 0 : {
        role: "button",
        "aria-controls": ariaControls,
        "aria-expanded": expanded,
        "aria-disabled": disabled,
        tabIndex: getTabIndex(tabIndex, disabled)
      },
      ref: "header",
      "aria-controls": ariaControls,
      "aria-expanded": expanded,
      "aria-disabled": disabled,
      tabIndex: getTabIndex(tabIndex, disabled),
      "class": "k-expander-header",
      onClick: this.onClick,
      on: this.v3 ? void 0 : {
        "click": this.onClick
      }
    }, [titleToRender, h("span", {
      "class": "k-spacer"
    }), subtitleToRender, h("span", {
      "class": "k-expander-indicator"
    }, [h(Icon, {
      name: this.expandIconName,
      attrs: this.v3 ? void 0 : {
        name: this.expandIconName,
        icon: this.expandSVGIcon
      },
      icon: this.expandSVGIcon
    })])]), defaultSlots]);
  },
  methods: {
    onClick: function onClick2(event) {
      if (this.$props.disabled) {
        return;
      }
      this.$emit("action", {
        event,
        expanded: this.expanded
      });
    },
    onKeyDown: function onKeyDown5(event) {
      if (this.$props.disabled) {
        return;
      }
      if ((event.keyCode === Keys.enter || event.keyCode === Keys.space) && event.target === this.$refs.header) {
        event.preventDefault();
        this.$emit("action", {
          event,
          expanded: this.expanded
        });
      }
    },
    handleFocus: function handleFocus4() {
      if (this.$props.disabled) {
        return;
      }
      this.focused = true;
    },
    handleBlur: function handleBlur2() {
      if (this.$props.disabled) {
        return;
      }
      this.focused = false;
    }
  }
};
var ExpansionPanel = ExpansionPanelVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/expansionpanel/ExpansionPanelContent.js
var allVue46 = vue_runtime_esm_bundler_exports;
var gh45 = allVue46.h;
var isV346 = allVue46.version && allVue46.version[0] === "3";
var ExpansionPanelContentVue2 = {
  name: "KendoExpansionPanelContent",
  created: function created20() {
    validatePackage(packageMetadata);
  },
  // @ts-ignore
  setup: !isV346 ? void 0 : function() {
    var v3 = !!isV346;
    return {
      v3
    };
  },
  render: function render45(createElement) {
    var h = gh45 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      "class": "k-expander-content-wrapper"
    }, [h("div", {
      "class": "k-expander-content"
    }, [defaultSlots])]);
  }
};
var ExpansionPanelContent = ExpansionPanelContentVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/gridlayout/GridLayoutItem.js
var allVue47 = vue_runtime_esm_bundler_exports;
var gh46 = allVue47.h;
var isV347 = allVue47.version && allVue47.version[0] === "3";
var ref6 = allVue47.ref;
var inject6 = allVue47.inject;
var GridLayoutItemVue2 = {
  name: "KendoGridLayoutItem",
  props: {
    content: [String, Function, Object],
    id: String,
    col: Number,
    colSpan: Number,
    row: Number,
    rowSpan: Number
  },
  created: function created21() {
    validatePackage(packageMetadata);
    this.itemId = guid();
  },
  // @ts-ignore
  setup: !isV347 ? void 0 : function() {
    var v3 = !!isV347;
    return {
      v3
    };
  },
  computed: {
    gridLayoutItemStyles: function gridLayoutItemStyles() {
      var _a3 = this.$props, row = _a3.row, col = _a3.col, rowSpan = _a3.rowSpan, colSpan = _a3.colSpan;
      return {
        gridArea: "".concat(row || "auto", " / ").concat(col || "auto", " / ").concat(rowSpan ? "span " + rowSpan : "auto", " / ").concat(colSpan ? "span " + colSpan : "auto")
      };
    }
  },
  render: function render46(createElement) {
    var h = gh46 || createElement;
    var _a3 = this.$props, id = _a3.id, content = _a3.content;
    var contentToRender = getTemplate.call(this, {
      h,
      template: content
    });
    return h("div", {
      style: this.gridLayoutItemStyles,
      id: id || this.itemId,
      attrs: this.v3 ? void 0 : {
        id: id || this.itemId
      }
    }, [contentToRender]);
  }
};
var GridLayoutItem = GridLayoutItemVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/gridlayout/GridLayout.js
var allVue48 = vue_runtime_esm_bundler_exports;
var gh47 = allVue48.h;
var isV348 = allVue48.version && allVue48.version[0] === "3";
var GridLayoutVue2 = {
  name: "KendoGridLayout",
  props: {
    id: String,
    gap: {
      type: Object
    },
    align: {
      type: Object,
      validator: function validator27(value2) {
        return ["top", "middle", "bottom", "stretch", void 0].includes(value2.vertical) && ["start", "center", "end", "stretch", void 0].includes(value2.horizontal);
      }
    },
    rows: Array,
    cols: Array,
    items: Array
  },
  created: function created22() {
    validatePackage(packageMetadata);
    this.layoutId = guid();
  },
  computed: {
    hAlign: function hAlign() {
      return this.$props.align && this.$props.align.horizontal ? this.$props.align.horizontal : "stretch";
    },
    vAlign: function vAlign() {
      return this.$props.align && this.$props.align.vertical ? this.$props.align.vertical : "stretch";
    },
    gridLayoutClasses: function gridLayoutClasses() {
      return {
        "k-grid-layout": true,
        "k-justify-items-start": this.hAlign === "start",
        "k-justify-items-center": this.hAlign === "center",
        "k-justify-items-end": this.hAlign === "end",
        "k-justify-items-stretch": this.hAlign === "stretch",
        "k-align-items-start": this.vAlign === "top",
        "k-align-items-center": this.vAlign === "middle",
        "k-align-items-end": this.vAlign === "bottom",
        "k-align-items-stretch": this.vAlign === "stretch"
      };
    },
    gapStyle: function gapStyle() {
      return this.gap ? "".concat(typeof this.gap.rows === "number" ? this.gap.rows + "px" : this.gap.rows) + " " + "".concat(typeof this.gap.cols === "number" ? this.gap.cols + "px" : this.gap.cols) : void 0;
    },
    gridTemplateRowsStyle: function gridTemplateRowsStyle() {
      return this.$props.rows && this.$props.rows.map(function(row) {
        return "".concat(typeof row.height === "number" ? row.height + "px" : row.height);
      }).join(" ");
    },
    gridTemplateColumnsStyle: function gridTemplateColumnsStyle() {
      return this.$props.cols && this.$props.cols.map(function(col) {
        return "".concat(typeof col.width === "number" ? col.width + "px" : col.width);
      }).join(" ");
    },
    gridLayoutStyles: function gridLayoutStyles() {
      return {
        gap: this.gapStyle,
        gridTemplateColumns: this.gridTemplateColumnsStyle,
        gridTemplateRows: this.gridTemplateRowsStyle
      };
    }
  },
  // @ts-ignore
  setup: !isV348 ? void 0 : function() {
    var v3 = !!isV348;
    return {
      v3
    };
  },
  render: function render47(createElement) {
    var h = gh47 || createElement;
    var _a3 = this.$props, id = _a3.id, items = _a3.items;
    return h("div", {
      "class": this.gridLayoutClasses,
      style: this.gridLayoutStyles,
      id: id || this.layoutId,
      attrs: this.v3 ? void 0 : {
        id: id || this.layoutId
      }
    }, [items.map(function(item) {
      var contentTemplate = templateRendering.call(this, item.content, getListeners.call(this));
      return (
        // @ts-ignore
        h(GridLayoutItem, {
          content: contentTemplate,
          attrs: this.v3 ? void 0 : {
            content: contentTemplate,
            id: item.id,
            col: item.col,
            colSpan: item.colSpan,
            row: item.row,
            rowSpan: item.rowSpan
          },
          "class": item.class,
          style: item.style,
          id: item.id,
          col: item.col,
          colSpan: item.colSpan,
          row: item.row,
          rowSpan: item.rowSpan
        })
      );
    }, this)]);
  }
};
var GridLayout = GridLayoutVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/actionsheet/ActionSheetItem.js
var allVue49 = vue_runtime_esm_bundler_exports;
var gh48 = allVue49.h;
var isV349 = allVue49.version && allVue49.version[0] === "3";
var ActionSheetItemVue2 = {
  name: "KendoActionSheetItem",
  // @ts-ignore
  emits: {
    click: null
  },
  props: {
    description: String,
    disabled: Boolean,
    group: {
      type: String,
      validator: function validator28(value2) {
        return ["top", "bottom", void 0].includes(value2);
      }
    },
    item: Object,
    icon: String,
    svgIcon: Object,
    iconColor: String,
    iconSize: String,
    content: [String, Function, Object],
    title: String
  },
  computed: {
    wrapperClass: function wrapperClass9() {
      return {
        "k-actionsheet-item": true,
        "k-cursor-pointer": true,
        "k-disabled": this.$props.disabled
      };
    }
  },
  // @ts-ignore
  setup: !isV349 ? void 0 : function() {
    var v3 = !!isV349;
    return {
      v3
    };
  },
  render: function render48(createElement) {
    var h = gh48 || createElement;
    var itemContent = getTemplate.call(this, {
      h,
      template: this.$props.content,
      defaultRendering: null,
      additionalProps: {
        item: this.$props.item
      }
    });
    return h("span", {
      tabIndex: this.$props.tabIndex,
      attrs: this.v3 ? void 0 : {
        tabIndex: this.$props.tabIndex,
        role: "button",
        "aria-disabled": this.$props.disabled
      },
      "class": this.wrapperClass,
      role: "button",
      "aria-disabled": this.$props.disabled,
      onClick: this.onClick,
      on: this.v3 ? void 0 : {
        "click": this.onClick
      }
    }, [h("span", {
      "class": "k-actionsheet-action"
    }, [this.$props.content ? itemContent : [(this.$props.icon || this.$props.svgIcon) && h("span", {
      className: "k-icon-wrap",
      attrs: this.v3 ? void 0 : {
        className: "k-icon-wrap"
      }
    }, [h(Icon, {
      name: this.$props.icon,
      attrs: this.v3 ? void 0 : {
        name: this.$props.icon,
        icon: this.$props.svgIcon,
        size: this.iconSize
      },
      icon: this.$props.svgIcon,
      "class": "k-actionsheet-item-icon",
      size: this.iconSize,
      style: {
        color: this.iconColor
      }
    })]), (this.$props.title || this.$props.description) && h("span", {
      "class": "k-actionsheet-item-text"
    }, [this.$props.title && h("span", {
      "class": "k-actionsheet-item-title"
    }, [this.$props.title]), this.$props.description && h("span", {
      "class": "k-actionsheet-item-description"
    }, [this.$props.description])])]])]);
  },
  methods: {
    onClick: function onClick3(event) {
      this.$emit("click", {
        syntheticEvent: event,
        item: this.$props.item,
        title: this.$props.title
      });
    }
  }
};
var ActionSheetItem = ActionSheetItemVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/actionsheet/ActionSheetHeader.js
var allVue50 = vue_runtime_esm_bundler_exports;
var gh49 = allVue50.h;
var isV350 = allVue50.version && allVue50.version[0] === "3";
var ActionSheetHeaderVue2 = {
  name: "KendoActionSheetHeader",
  // @ts-ignore
  setup: !isV350 ? void 0 : function() {
    var v3 = !!isV350;
    return {
      v3
    };
  },
  render: function render49(createElement) {
    var h = gh49 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("div", {
      "class": "k-actionsheet-titlebar"
    }, [defaultSlot]);
  }
};
var ActionSheetHeader = ActionSheetHeaderVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/actionsheet/ActionSheetFooter.js
var allVue51 = vue_runtime_esm_bundler_exports;
var gh50 = allVue51.h;
var isV351 = allVue51.version && allVue51.version[0] === "3";
var ActionSheetFooterVue2 = {
  name: "KendoActionSheetFooter",
  // @ts-ignore
  setup: !isV351 ? void 0 : function() {
    var v3 = !!isV351;
    return {
      v3
    };
  },
  render: function render50(createElement) {
    var h = gh50 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("div", {
      "class": "k-actionsheet-footer"
    }, [defaultSlot]);
  }
};
var ActionSheetFooter = ActionSheetFooterVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/actionsheet/ActionSheetContent.js
var allVue52 = vue_runtime_esm_bundler_exports;
var gh51 = allVue52.h;
var isV352 = allVue52.version && allVue52.version[0] === "3";
var ActionSheetContentVue2 = {
  name: "KendoActionSheetContent",
  // @ts-ignore
  setup: !isV352 ? void 0 : function() {
    var v3 = !!isV352;
    return {
      v3
    };
  },
  render: function render51(createElement) {
    var h = gh51 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("div", {
      "class": "k-actionsheet-content"
    }, [defaultSlot]);
  }
};
var ActionSheetContent = ActionSheetContentVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/actionsheet/ActionSheet.js
var __spreadArray4 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var allVue53 = vue_runtime_esm_bundler_exports;
var gh52 = allVue53.h;
var isV353 = allVue53.version && allVue53.version[0] === "3";
var DEFAULT_DURATION = 300;
var ActionSheetVue2 = {
  name: "KendoActionSheet",
  props: {
    expand: Boolean,
    animation: {
      type: Boolean,
      default: true
    },
    animationDuration: {
      type: Number,
      default: DEFAULT_DURATION
    },
    animationStyles: Object,
    tabIndex: Number,
    items: Array,
    subTitle: String,
    title: String,
    className: String,
    header: [String, Object, Function],
    content: [String, Object, Function],
    footer: [String, Object, Function],
    item: [String, Object, Function],
    navigatable: {
      type: Boolean,
      default: true
    },
    navigatableElements: {
      type: Array,
      default: function _default3() {
        return [];
      }
    }
  },
  created: function created23() {
    this.bottomPosition = {
      bottom: "0px",
      width: "100%"
    };
    this.guidId = guid();
    validatePackage(packageMetadata);
  },
  mounted: function mounted9() {
    this.element = getRef(this, "actionSheet");
    if (this.$props.expand && !this.show) {
      this.show = true;
    }
  },
  updated: function updated5() {
    var _this = this;
    this.element = getRef(this, "actionSheet");
    if (this.$props.expand && !this.show) {
      this.show = true;
    }
    if (this.element && !this.$props.className) {
      this.element.style.setProperty("--kendo-actionsheet-height", "auto");
      this.element.style.setProperty("--kendo-actionsheet-max-height", "none");
    }
    if (this.element) {
      if (this.$props.navigatable) {
        var innerElements = [".k-actionsheet-footer", ".k-actionsheet-content", ".k-actionsheet-titlebar"].map(function(selector) {
          return FOCUSABLE_ELEMENTS.concat(_this.$props.navigatableElements).map(function(focusableSelector) {
            return "".concat(selector, " ").concat(focusableSelector);
          });
        });
        var selectors = __spreadArray4([".k-actionsheet-item"], innerElements.flat(), true);
        this.navigation = new Navigation({
          tabIndex: this.$props.tabIndex || 0,
          root: this.element,
          rovingTabIndex: false,
          selectors,
          keyboardEvents: {
            keydown: {
              "Tab": this.onTab,
              "Enter": this.onEnter,
              "Escape": this.onEscape
            }
          }
        });
        this.navigation.focusElement(this.navigation.first, null);
      }
    }
  },
  data: function data14() {
    return {
      show: false,
      slide: false
    };
  },
  computed: {
    topGroupItems: function topGroupItems() {
      var _a3;
      return (_a3 = this.items) === null || _a3 === void 0 ? void 0 : _a3.filter(function(item) {
        return !item.group || item.group === "top";
      });
    },
    bottomGroupItems: function bottomGroupItems() {
      var _a3;
      return (_a3 = this.items) === null || _a3 === void 0 ? void 0 : _a3.filter(function(item) {
        return item.group === "bottom";
      });
    },
    shouldRenderSeparator: function shouldRenderSeparator() {
      return this.topGroupItems && this.topGroupItems.length > 0 && this.bottomGroupItems && this.bottomGroupItems.length > 0;
    }
  },
  // @ts-ignore
  setup: !isV353 ? void 0 : function() {
    var v3 = !!isV353;
    return {
      v3
    };
  },
  render: function render52(createElement) {
    var h = gh52 || createElement;
    var _a3 = this.$props, title = _a3.title, subTitle = _a3.subTitle, animationStyles = _a3.animationStyles, animation = _a3.animation, expand = _a3.expand, tabIndex = _a3.tabIndex, className = _a3.className, animationDuration = _a3.animationDuration;
    var header = templateRendering.call(this, this.$props.header, getListeners.call(this));
    var headerContent = getTemplate.call(this, {
      h,
      template: header,
      defaultRendering: null
    });
    var content = templateRendering.call(this, this.$props.content, getListeners.call(this));
    var contentTemplate = getTemplate.call(this, {
      h,
      template: content,
      defaultRendering: null
    });
    var footer = templateRendering.call(this, this.$props.footer, getListeners.call(this));
    var footerContent = getTemplate.call(this, {
      h,
      template: footer,
      defaultRendering: null
    });
    var actionSheetPanel = h("div", {
      "class": classNames("k-actionsheet", className, {
        "k-actionsheet-bottom": !className
      }),
      role: "dialog",
      attrs: this.v3 ? void 0 : {
        role: "dialog",
        "aria-modal": "true",
        "aria-hidden": false,
        "aria-labelledby": this.guidId
      },
      "aria-modal": "true",
      "aria-hidden": false,
      "aria-labelledby": this.guidId,
      ref: setRef(this, "actionSheet"),
      onKeydown: this.handleKeyDown,
      on: this.v3 ? void 0 : {
        "keydown": this.handleKeyDown
      }
    }, [this.$props.header && !title && !subTitle && // @ts-ignore function children
    h(ActionSheetHeader, this.v3 ? function() {
      return [headerContent];
    } : [headerContent]), (title || subTitle) && h("div", {
      "class": "k-actionsheet-titlebar k-text-center"
    }, [h("div", {
      "class": "k-actionsheet-titlebar-group k-hbox"
    }, [h("div", {
      "class": "k-actionsheet-title",
      id: this.guidId,
      attrs: this.v3 ? void 0 : {
        id: this.guidId
      }
    }, [title && h("div", [title]), subTitle && h("div", {
      "class": "k-actionsheet-subtitle"
    }, [subTitle])])])]), !this.$props.content ? h("div", {
      "class": "k-actionsheet-content"
    }, [h("div", {
      "class": "k-list-ul",
      role: "group",
      attrs: this.v3 ? void 0 : {
        role: "group"
      }
    }, [this.topGroupItems && this.topGroupItems.map(function(item, idx) {
      var itemContent = templateRendering.call(this, this.$props.item || item.content, getListeners.call(this));
      return h(ActionSheetItem, {
        style: item.style,
        "class": item.class,
        title: item.title,
        attrs: this.v3 ? void 0 : {
          title: item.title,
          description: item.description,
          disabled: item.disabled,
          id: idx,
          item,
          icon: item.icon,
          svgIcon: item.svgIcon,
          iconSize: item.iconSize,
          iconColor: item.iconColor,
          tabIndex: tabIndex || 0,
          content: itemContent
        },
        description: item.description,
        disabled: item.disabled,
        id: idx,
        key: idx,
        item,
        icon: item.icon,
        svgIcon: item.svgIcon,
        iconSize: item.iconSize,
        iconColor: item.iconColor,
        tabIndex: tabIndex || 0,
        content: itemContent,
        onClick: this.handleItemClick,
        on: this.v3 ? void 0 : {
          "click": this.handleItemClick
        }
      });
    }, this)]), this.shouldRenderSeparator && h("hr", {
      "class": "k-hr"
    }), h("div", {
      "class": "k-list-ul",
      role: "group",
      attrs: this.v3 ? void 0 : {
        role: "group"
      }
    }, [this.bottomGroupItems && this.bottomGroupItems.map(function(item, idx) {
      var _a4;
      return h(ActionSheetItem, {
        style: item.style,
        "class": item.class,
        id: idx + (((_a4 = this.topGroupItems) === null || _a4 === void 0 ? void 0 : _a4.length) || 0),
        attrs: this.v3 ? void 0 : {
          id: idx + (((_a4 = this.topGroupItems) === null || _a4 === void 0 ? void 0 : _a4.length) || 0),
          item,
          title: item.title,
          description: item.description,
          disabled: item.disabled,
          icon: item.icon,
          svgIcon: item.svgIcon,
          iconSize: item.iconSize,
          iconColor: item.iconColor,
          tabIndex: tabIndex || 0
        },
        key: idx,
        item,
        title: item.title,
        description: item.description,
        disabled: item.disabled,
        icon: item.icon,
        svgIcon: item.svgIcon,
        iconSize: item.iconSize,
        iconColor: item.iconColor,
        tabIndex: tabIndex || 0,
        onClick: this.handleItemClick,
        on: this.v3 ? void 0 : {
          "click": this.handleItemClick
        }
      });
    }, this)])]) : (
      // @ts-ignore function children
      h(ActionSheetContent, this.v3 ? function() {
        return [contentTemplate];
      } : [contentTemplate])
    ), this.$props.footer && // @ts-ignore function children
    h(ActionSheetFooter, this.v3 ? function() {
      return [footerContent];
    } : [footerContent])]);
    return this.show && h("div", {
      "class": "k-actionsheet-container"
    }, [h("div", {
      "class": "k-overlay",
      onClick: this.handleOverlayClick,
      on: this.v3 ? void 0 : {
        "click": this.handleOverlayClick
      }
    }), animation ? (
      // @ts-ignore function children
      h(Slide, {
        id: "test",
        attrs: this.v3 ? void 0 : {
          id: "test",
          direction: "up",
          componentChildStyle: animationStyles || this.bottomPosition,
          transitionEnterDuration: animationDuration,
          transitionExitDuration: animationDuration,
          appear: expand
        },
        onExited: this.hideActionSheet,
        on: this.v3 ? void 0 : {
          "exited": this.hideActionSheet
        },
        direction: "up",
        componentChildStyle: animationStyles || this.bottomPosition,
        transitionEnterDuration: animationDuration,
        transitionExitDuration: animationDuration,
        appear: expand
      }, this.v3 ? function() {
        return [expand ? actionSheetPanel : null];
      } : [expand ? actionSheetPanel : null])
    ) : actionSheetPanel]);
  },
  methods: {
    handleKeyDown: function handleKeyDown7(e) {
      if (this.$props.navigatable) {
        this.navigation.triggerKeyboardEvent(e);
      }
    },
    onTab: function onTab(target, nav, ev) {
      ev.preventDefault();
      if (ev.shiftKey) {
        nav.focusPrevious(target);
      } else {
        nav.focusNext(target);
      }
    },
    handleOverlayClick: function handleOverlayClick(ev) {
      this.$emit("close", ev);
      if (!this.$props.animation) {
        this.hideActionSheet();
      }
    },
    handleItemClick: function handleItemClick2(ev) {
      this.$emit("itemselect", ev);
      if (!this.$props.animation) {
        this.hideActionSheet();
      }
    },
    onEnter: function onEnter(target, nav, ev) {
      if (target.ariaDisabled) {
        return;
      }
      var isItem = target.className && target.className.indexOf("k-actionsheet-item") !== -1;
      var allItems = nav.elements.filter(function(e) {
        return e.className.indexOf("k-actionsheet-item") !== -1;
      });
      if (isItem) {
        ev.preventDefault();
        var item = this.$props.items[allItems.indexOf(target)];
        this.$emit("itemselect", {
          syntheticEvent: ev,
          item,
          title: item && item.title
        });
      }
      if (!this.$props.animation) {
        this.hideActionSheet();
      }
    },
    onEscape: function onEscape(_target, _nav, ev) {
      ev.preventDefault();
      this.$emit("close", ev);
      if (!this.$props.animation) {
        this.hideActionSheet();
      }
    },
    hideActionSheet: function hideActionSheet() {
      this.show = false;
    }
  }
};
var ActionSheet = ActionSheetVue2;

// node_modules/@progress/kendo-vue-layout/dist/es/stacklayout/StackLayout.js
var allVue54 = vue_runtime_esm_bundler_exports;
var gh53 = allVue54.h;
var isV354 = allVue54.version && allVue54.version[0] === "3";
var StackLayoutVue2 = {
  name: "KendoStackLayout",
  props: {
    id: String,
    orientation: {
      type: String,
      default: "horizontal",
      validator: function validator29(value2) {
        return ["horizontal", "vertical"].includes(value2);
      }
    },
    gap: {
      type: [String, Number]
    },
    align: {
      type: Object,
      validator: function validator30(value2) {
        return ["top", "middle", "bottom", "stretch", void 0].includes(value2.vertical) && ["start", "center", "end", "stretch", void 0].includes(value2.horizontal);
      }
    }
  },
  created: function created24() {
    validatePackage(packageMetadata);
    this.layoutId = guid();
  },
  computed: {
    hAlign: function hAlign2() {
      return this.$props.align && this.$props.align.horizontal ? this.$props.align.horizontal : "stretch";
    },
    vAlign: function vAlign2() {
      return this.$props.align && this.$props.align.vertical ? this.$props.align.vertical : "stretch";
    },
    stackLayoutClasses: function stackLayoutClasses() {
      var orientation = this.$props.orientation;
      var isHorizontal2 = orientation === "horizontal";
      return {
        "k-stack-layout": true,
        "k-hstack": orientation === "horizontal",
        "k-vstack": orientation === "vertical",
        "k-justify-content-start": isHorizontal2 && this.hAlign === "start" || !isHorizontal2 && this.vAlign === "top",
        "k-justify-content-center": isHorizontal2 && this.hAlign === "center" || !isHorizontal2 && this.vAlign === "middle",
        "k-justify-content-end": isHorizontal2 && this.hAlign === "end" || !isHorizontal2 && this.vAlign === "bottom",
        "k-justify-content-stretch": isHorizontal2 && this.hAlign === "stretch" || !isHorizontal2 && this.vAlign === "stretch",
        "k-align-items-start": !isHorizontal2 && this.hAlign === "start" || isHorizontal2 && this.vAlign === "top",
        "k-align-items-center": !isHorizontal2 && this.hAlign === "center" || isHorizontal2 && this.vAlign === "middle",
        "k-align-items-end": !isHorizontal2 && this.hAlign === "end" || isHorizontal2 && this.vAlign === "bottom",
        "k-align-items-stretch": !isHorizontal2 && this.hAlign === "stretch" || isHorizontal2 && this.vAlign === "stretch"
      };
    },
    stackLayoutStyles: function stackLayoutStyles() {
      return {
        gap: "".concat(typeof this.$props.gap === "number" ? this.$props.gap + "px" : this.$props.gap)
      };
    }
  },
  // @ts-ignore
  setup: !isV354 ? void 0 : function() {
    var v3 = !!isV354;
    return {
      v3
    };
  },
  render: function render53(createElement) {
    var h = gh53 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var id = this.$props.id;
    return h("div", {
      "class": this.stackLayoutClasses,
      style: this.stackLayoutStyles,
      id: id || this.layoutId,
      attrs: this.v3 ? void 0 : {
        id: id || this.layoutId
      }
    }, [defaultSlot]);
  }
};
var StackLayout = StackLayoutVue2;

export {
  TabStripNavigationItemVue2,
  TabStripNavigationItem,
  TabStripNavigationVue2,
  TabStripNavigation,
  TabStripContentVue2,
  TabStripContent,
  TabStripVue2,
  TabStrip,
  TabStripTabVue2,
  TabStripTab,
  CardVue2,
  Card,
  CardHeaderVue2,
  CardHeader,
  CardTitleVue2,
  CardTitle,
  CardBodyVue2,
  CardBody,
  CardActionsVue2,
  CardActions,
  CardImageVue2,
  CardImage,
  CardSubtitleVue2,
  CardSubtitle,
  CardFooterVue2,
  CardFooter,
  AvatarVue2,
  Avatar,
  DrawerItemVue2,
  DrawerItem,
  DrawerNavigationVue2,
  DrawerNavigation,
  DrawerVue2,
  Drawer,
  DrawerContentVue2,
  DrawerContent,
  StepVue2,
  Step,
  StepperVue2,
  Stepper,
  MenuItemLinkVue2,
  MenuItemLink,
  downArrowClass,
  rightArrowClass,
  leftArrowClass,
  MenuItemArrowVue2,
  MenuItemArrow,
  MenuVue2,
  Menu,
  SplitterPaneVue2,
  SplitterPane,
  SplitterVue2,
  Splitter,
  PanelBarItemVue2,
  PanelBarItem,
  renderChildren,
  getFirstId,
  getInitialState,
  flatVisibleItems,
  flatChildren,
  flatVisibleChildren,
  isPresent,
  isArrayEqual,
  PanelBarVue2,
  PanelBar,
  TileLayoutVue2,
  TileLayout,
  AppBarVue2,
  AppBar,
  AppBarSectionVue2,
  AppBarSection,
  AppBarSpacerVue2,
  AppBarSpacer,
  BottomNavigationItemVue2,
  BottomNavigationItem,
  BottomNavigationVue2,
  BottomNavigation,
  ExpansionPanelVue2,
  ExpansionPanel,
  ExpansionPanelContentVue2,
  ExpansionPanelContent,
  GridLayoutItemVue2,
  GridLayoutItem,
  GridLayoutVue2,
  GridLayout,
  ActionSheetItemVue2,
  ActionSheetItem,
  ActionSheetHeaderVue2,
  ActionSheetHeader,
  ActionSheetFooterVue2,
  ActionSheetFooter,
  ActionSheetContentVue2,
  ActionSheetContent,
  ActionSheetVue2,
  ActionSheet,
  StackLayoutVue2,
  StackLayout
};
//# sourceMappingURL=chunk-HKDVYCRN.js.map
