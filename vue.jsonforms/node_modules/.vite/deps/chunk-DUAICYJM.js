import {
  saveAs
} from "./chunk-PU4UKSZF.js";
import {
  drawDOM,
  exportPDF
} from "./chunk-PPZBNG6G.js";
import {
  index_esm_exports,
  main_exports
} from "./chunk-NCGOQWHX.js";
import {
  vue_runtime_esm_bundler_exports
} from "./chunk-4NBGFDBU.js";

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/canUseDOM.js
var canUseDOM = Boolean(
  // from fbjs
  typeof window !== "undefined" && window.document && window.document.createElement
);

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/defaultSlots.js
function getDefaultSlots(component) {
  var defaultSlots = component.$slots.default;
  return component.v3 && defaultSlots && typeof defaultSlots === "function" ? defaultSlots() : defaultSlots;
}

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/Draggable.js
var _DraggableVue;
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return (typeof key === "undefined" ? "undefined" : _typeof(key)) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if ((typeof input === "undefined" ? "undefined" : _typeof(input)) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if ((typeof res === "undefined" ? "undefined" : _typeof(res)) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var allVue = vue_runtime_esm_bundler_exports;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === "3";
var DraggableVue2 = (_DraggableVue = {
  // @ts-ignore
  emits: {
    press: null,
    drag: null,
    release: null
  },
  inheritAttrs: false,
  created: function created() {
    this.element = null;
    var draggable = main_exports;
    var dp = typeof draggable !== "undefined" && draggable.Draggable ? draggable : draggable.default;
    this.draggable = new dp.Draggable({
      press: this.press,
      drag: this.drag,
      release: this.release
    });
  },
  // @ts-ignore
  setup: !isV3 ? void 0 : function() {
    var v3 = !!isV3;
    return {
      v3
    };
  },
  mounted: function mounted() {
    if (this.$el) {
      this.element = this.$el.nodeType === 3 ? this.$el.nextElementSibling : this.$el;
      this.draggable.bindTo(this.element);
    }
  },
  destroyed: !!isV3 ? void 0 : function() {
    this.draggable.destroy();
  },
  // @ts-ignore
  unmounted: function unmounted() {
    this.draggable.destroy();
  },
  methods: {
    press: function press(event) {
      if (this.element) {
        this.$emit("press", event, this.element);
      }
    },
    drag: function drag(event) {
      if (this.element) {
        this.$emit("drag", event, this.element);
      }
    },
    release: function release(event) {
      if (this.element) {
        this.$emit("release", event, this.element);
      }
    }
  }
}, _defineProperty(_DraggableVue, "setup", !isV3 ? void 0 : function() {
  var v3 = !!isV3;
  return {
    v3
  };
}), _defineProperty(_DraggableVue, "render", function render(createElement) {
  var h4 = gh || createElement;
  return getDefaultSlots(this);
}), _DraggableVue);

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/getter.js
var getterCache = {};
getterCache.undefined = function() {
  return void 0;
};

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/setter.js
var setterCache = {};
setterCache.undefined = function(obj) {
  return obj;
};

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/templateRendering.js
var allVue2 = vue_runtime_esm_bundler_exports;
var isV32 = allVue2.version && allVue2.version[0] === "3";

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/validate-package.js
var licensing = index_esm_exports;
var ls = typeof licensing !== "undefined" && licensing.validatePackage ? licensing : licensing.default;
function validatePackage(packageMetadata2) {
  if (ls && ls.validatePackage) {
    ls.validatePackage(packageMetadata2);
  } else {
    var message = "License activation failed for ".concat(packageMetadata2.name, "\n");
    message += "The @progress/kendo-licensing script is not loaded.\n";
    message += "See ".concat(packageMetadata2.licensingDocsUrl, " for more information.\n");
    console.warn(message);
  }
}

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/browser-support.service.js
var getDocument = function() {
  return typeof document !== "undefined" ? document : {};
};
var BrowserSupportService = (
  /** @class */
  function() {
    function BrowserSupportService2() {
    }
    Object.defineProperty(BrowserSupportService2.prototype, "scrollbarWidth", {
      get: function() {
        var document2 = getDocument();
        if (!this.scrollbar && document2 && document2.createElement) {
          var div = document2.createElement("div");
          div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
          div.innerHTML = "&nbsp;";
          document2.body.appendChild(div);
          this.scrollbar = div.offsetWidth - div.scrollWidth;
          document2.body.removeChild(div);
        }
        return this.scrollbar;
      },
      enumerable: false,
      configurable: true
    });
    return BrowserSupportService2;
  }()
);

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/icons/FontIcon.js
var allVue3 = vue_runtime_esm_bundler_exports;
var gh2 = allVue3.h;
var isV33 = allVue3.version && allVue3.version[0] === "3";

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/icons/SvgIcon.js
var allVue4 = vue_runtime_esm_bundler_exports;
var gh3 = allVue4.h;
var isV34 = allVue4.version && allVue4.version[0] === "3";

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/icons/Icon.js
var allVue5 = vue_runtime_esm_bundler_exports;
var gh4 = allVue5.h;
var isV35 = allVue5.version && allVue5.version[0] === "3";

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/navigation.js
var Navigation = (
  /** @class */
  function() {
    function Navigation2(options) {
      var _this = this;
      this.rovingTabIndex = true;
      this.update = function() {
      };
      this.focusNextIndex = function(target, indexDiff) {
        var all = _this.elements;
        var index = all.indexOf(target) + indexDiff;
        index = index < 0 ? all.length - 1 : index;
        _this.focusElement(all[index % all.length], target);
      };
      this.tabIndex = options.tabIndex || 0;
      this.root = options.root;
      this.selectors = options.selectors;
      this.rovingTabIndex = options.rovingTabIndex !== void 0 ? options.rovingTabIndex : true;
      this.mouseEvents = options.mouseEvents || {};
      this.keyboardEvents = options.keyboardEvents || {};
    }
    Object.defineProperty(Navigation2.prototype, "elements", {
      get: function() {
        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(","))) : [];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "first", {
      get: function() {
        return this.root && this.root.querySelector(this.selectors.join(",")) || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "last", {
      get: function() {
        var all = this.elements;
        return all[all.length - 1] || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "current", {
      get: function() {
        return this.elements.find(function(el) {
          return el.matches(":focus");
        }) || null;
      },
      enumerable: false,
      configurable: true
    });
    Navigation2.prototype.focusNext = function(target) {
      this.focusNextIndex(target, 1);
    };
    Navigation2.prototype.focusPrevious = function(target) {
      this.focusNextIndex(target, -1);
    };
    Navigation2.prototype.triggerKeyboardEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var key = ev.key === " " ? "Space" : ev.key;
      var eventType = ev.type;
      if (target && this.keyboardEvents[eventType][key]) {
        this.keyboardEvents[eventType][key].call(void 0, target, this, ev);
      }
    };
    Navigation2.prototype.triggerMouseEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var eventType = ev.type;
      if (target) {
        this.mouseEvents[eventType].call(void 0, target, this, ev);
      }
    };
    Navigation2.prototype.focusElement = function(element, previous) {
      if (element) {
        if (previous) {
          if (this.rovingTabIndex) {
            previous.removeAttribute("tabindex");
          }
          previous.classList.remove("k-focus");
        }
        if (this.rovingTabIndex) {
          element.setAttribute("tabindex", String(this.tabIndex));
        }
        element.focus({ preventScroll: true });
      }
    };
    return Navigation2;
  }()
);

// node_modules/@progress/kendo-vue-pdf/node_modules/@progress/kendo-vue-common/dist/es/watermark/WatermarkOverlay.js
var allVue6 = vue_runtime_esm_bundler_exports;
var gh5 = allVue6.h;
var isV36 = allVue6.version && allVue6.version[0] === "3";
var banners = new Array();

// node_modules/@progress/kendo-vue-pdf/dist/es/KendoDrawingAdapter.js
var allVue7 = vue_runtime_esm_bundler_exports;
var h = allVue7.h;
var createApp = allVue7.createApp;
var defaultFileName = "export.pdf";
var defaultCreator = "Kendo UI PDF Generator";
var KendoDrawingAdapter = (
  /** @class */
  function() {
    function KendoDrawingAdapter2(drawDOM2, exportPDF2, saveAs2, domElement, options) {
      if (options === void 0) {
        options = {};
      }
      var _this = this;
      this.drawDOM = drawDOM2;
      this.exportPDF = exportPDF2;
      this.saveAs = saveAs2;
      this.domElement = domElement;
      this.options = options;
      this.convertPageTemplateToHtml = function(pageContext) {
        if (h && createApp && canUseDOM) {
          var that_1 = _this;
          var outerWrapper_1 = document.createElement("div");
          outerWrapper_1.setAttribute("style", "position:absolute; left: -5000px; top: 0px;");
          var innerWrapper = document.createElement("div");
          outerWrapper_1.appendChild(innerWrapper);
          document.body.appendChild(outerWrapper_1);
          var tempPageComponent_1;
          var pageTemplate = {
            render: function() {
              return h(that_1.options.pageTemplate, {
                pageNum: pageContext.pageNum,
                totalPages: pageContext.totalPages
              });
            },
            mounted: function mounted2() {
              this.$nextTick(function() {
                document.body.removeChild(outerWrapper_1);
                tempPageComponent_1.unmount();
              });
            }
          };
          tempPageComponent_1 = createApp(pageTemplate);
          tempPageComponent_1.mount(innerWrapper);
          return innerWrapper.outerHTML;
        } else {
          var currentVue = allVue7.extend ? allVue7 : allVue7.default;
          var extendTemplate = currentVue.extend;
          var template = extendTemplate.call(currentVue, _this.options.pageTemplate);
          var instance_1 = new template({
            propsData: {
              pageNum: pageContext.pageNum,
              totalPages: pageContext.totalPages
            }
          });
          instance_1.$mount();
          instance_1.$nextTick(function() {
            instance_1.$destroy();
          });
          return instance_1.$el.outerHTML;
        }
      };
    }
    KendoDrawingAdapter2.prototype.savePDF = function(callback) {
      var _this = this;
      var savePromise = this.drawDOM(this.domElement, this.getDrawOptions()).then(function(group) {
        return _this.exportPDF(group, _this.getPDFOptions());
      }).then(function(dataUri) {
        return _this.saveAs(dataUri, _this.options.fileName || defaultFileName, _this.getSaveOptions());
      });
      if (callback) {
        savePromise.then(callback, callback);
      }
    };
    KendoDrawingAdapter2.prototype.getDrawOptions = function() {
      return {
        avoidLinks: this.options.avoidLinks,
        forcePageBreak: this.options.forcePageBreak,
        keepTogether: this.options.keepTogether,
        margin: this.options.margin,
        paperSize: this.options.paperSize,
        landscape: this.options.landscape,
        repeatHeaders: this.options.repeatHeaders,
        scale: this.options.scale,
        template: this.options.pageTemplate && this.convertPageTemplateToHtml
      };
    };
    KendoDrawingAdapter2.prototype.getPDFOptions = function() {
      return {
        author: this.options.author,
        creator: this.options.creator || defaultCreator,
        date: this.options.date,
        imgDPI: this.options.imageResolution,
        keywords: this.options.keywords,
        landscape: this.options.landscape,
        margin: this.options.margin,
        multiPage: true,
        paperSize: this.options.paperSize,
        producer: this.options.producer,
        subject: this.options.subject,
        title: this.options.title
      };
    };
    KendoDrawingAdapter2.prototype.getSaveOptions = function() {
      return {
        forceProxy: this.options.forceProxy,
        proxyData: this.options.proxyData,
        proxyTarget: this.options.proxyTarget,
        proxyURL: this.options.proxyURL
      };
    };
    return KendoDrawingAdapter2;
  }()
);
var KendoDrawingAdapter_default = KendoDrawingAdapter;

// node_modules/@progress/kendo-vue-pdf/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-vue-pdf",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1695043277,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-pdf/dist/es/PDFExport.js
var allVue8 = vue_runtime_esm_bundler_exports;
var gh6 = allVue8.h;
var isV37 = allVue8.version && allVue8.version[0] === "3";
var PDFExportVue2 = {
  name: "pdf-export",
  props: {
    author: String,
    avoidLinks: [Boolean, String],
    forcePageBreak: String,
    keepTogether: String,
    creator: String,
    date: Date,
    imageResolution: Number,
    fileName: String,
    forceProxy: Boolean,
    keywords: String,
    landscape: Boolean,
    margin: [String, Object],
    pageTemplate: [Object, Function],
    paperSize: [String, Object],
    repeatHeaders: Boolean,
    scale: Number,
    proxyData: Object,
    proxyURL: String,
    proxyTarget: String,
    producer: String,
    subject: String,
    title: String
  },
  methods: {
    save: function save(callback) {
      new KendoDrawingAdapter_default(
        drawDOM,
        exportPDF,
        saveAs,
        this.$el,
        // To do: we should consider whether we need a margin-top, margin-left, etc. props
        this.$props
      ).savePDF(callback);
    }
  },
  // @ts-ignore
  setup: !isV37 ? void 0 : function() {
    var v3 = !!isV37;
    return {
      v3
    };
  },
  created: function created2() {
    validatePackage(packageMetadata);
  },
  // @ts-ignore
  render: function render2(createElement) {
    var h4 = gh6 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h4("div", [defaultSlot]);
  }
  // To do: we should consider whether we need a margin-top, margin-left, etc. props
  // private getOptions() {
  //     return Object.assign({}, this.$props, { margin: getPageMrgin(this.$props) });
  // }
};
var PDFExport = PDFExportVue2;

// node_modules/@progress/kendo-vue-pdf/dist/es/savePDF.js
function savePDF(domElement, options, callback) {
  if (options === void 0) {
    options = {};
  }
  new KendoDrawingAdapter_default(drawDOM, exportPDF, saveAs, domElement, options).savePDF(callback);
}

// node_modules/@progress/kendo-vue-pdf/dist/es/common/dom-queries.js
var NODE_NAME_PREDICATES = {};
var toClassList = function(classNames2) {
  return String(classNames2).trim().split(" ");
};
var hasClasses = function(element, classNames2) {
  var namesList = toClassList(classNames2);
  return Boolean(toClassList(element.className).find(function(className) {
    return namesList.indexOf(className) >= 0;
  }));
};
var matchesClasses = function(classNames2) {
  return function(element) {
    return hasClasses(element, classNames2);
  };
};
var matchesNodeName = function(nodeName) {
  if (!NODE_NAME_PREDICATES[nodeName]) {
    NODE_NAME_PREDICATES[nodeName] = function(element) {
      return String(element.nodeName).toLowerCase() === nodeName.toLowerCase();
    };
  }
  return NODE_NAME_PREDICATES[nodeName];
};
var findElement = function(node, predicate, matchSelf) {
  if (matchSelf === void 0) {
    matchSelf = true;
  }
  if (!node) {
    return;
  }
  if (matchSelf && predicate(node)) {
    return node;
  }
  node = node.firstChild;
  while (node) {
    if (node.nodeType === 1) {
      var element = findElement(node, predicate);
      if (element) {
        return element;
      }
    }
    node = node.nextSibling;
  }
};

// node_modules/@progress/kendo-vue-pdf/dist/es/grid/grid-query.js
var HEADER_CLASS = "k-grid-header";
var FOOTER_CLASS = "k-grid-footer";
var TABLE = "TABLE";
var matchesTable = matchesNodeName(TABLE);
var suffix = function(locked) {
  return locked ? "locked" : "wrap";
};
var GridQuery = (
  /** @class */
  function() {
    function GridQuery3(element) {
      this.element = element;
      this.list = findElement(element, matchesClasses("k-grid-container"));
    }
    GridQuery3.prototype.content = function(locked) {
      return findElement(this.list, matchesClasses("k-grid-content".concat(locked ? "-locked" : "")));
    };
    GridQuery3.prototype.header = function(locked) {
      this.headerWrap = this.headerWrap || findElement(this.element, matchesClasses(HEADER_CLASS));
      return findElement(this.headerWrap, matchesClasses("".concat(HEADER_CLASS, "-").concat(suffix(locked))));
    };
    GridQuery3.prototype.footer = function(locked) {
      this.footerWrap = this.footerWrap || findElement(this.element, matchesClasses(FOOTER_CLASS));
      return findElement(this.footerWrap, matchesClasses("".concat(FOOTER_CLASS, "-").concat(suffix(locked))));
    };
    GridQuery3.prototype.table = function() {
      return findElement(this.element, matchesTable);
    };
    return GridQuery3;
  }()
);

// node_modules/@progress/kendo-vue-pdf/dist/es/common/utils.js
var FIRST_CLASS = "k-first";
var HEADER_CLASS2 = "k-grid-header";
var FOOTER_CLASS2 = "k-grid-footer";
var appendNodes = function(element, nodes) {
  var length = nodes.length;
  for (var idx = 0; idx < length; idx++) {
    element.appendChild(nodes[idx].cloneNode(true));
  }
};
var wrapTable = function(table) {
  var wrapper = document.createElement("div");
  wrapper.className = "k-grid k-grid-md";
  wrapper.appendChild(table);
  return wrapper;
};
var createTableElement = function(sources) {
  var sourceCount = sources.length;
  var element = sources[0].cloneNode(true);
  var rowsCount = element.rows.length;
  if (sourceCount > 1) {
    for (var rowIdx = 0; rowIdx < rowsCount; rowIdx++) {
      for (var sourceIdx = 1; sourceIdx < sourceCount; sourceIdx++) {
        appendNodes(element.rows[rowIdx], sources[sourceIdx].rows[rowIdx].cells);
      }
    }
  }
  return element;
};
var setFirstCellClass = function(header, headers) {
  if (headers.length > 1 && header.rows.length > 1) {
    for (var idx = 1; idx < header.rows.length; idx++) {
      var firstCellIndex = headers[0].rows[idx].cells.length;
      var cell = header.rows[idx].cells[firstCellIndex];
      if (String(cell.className).indexOf(FIRST_CLASS) === -1) {
        cell.className += " ".concat(FIRST_CLASS);
      }
    }
  }
};
var createTable = function(colGroups, headers, bodies, footers) {
  var table = document.createElement("table");
  var colGroup = colGroups[0].cloneNode(true);
  for (var idx = 1; idx < colGroups.length; idx++) {
    appendNodes(colGroup, colGroups[idx].querySelectorAll("col"));
  }
  var header = createTableElement(headers);
  var body = createTableElement(bodies);
  header.className = HEADER_CLASS2;
  setFirstCellClass(header, headers);
  table.appendChild(colGroup);
  table.appendChild(header);
  table.appendChild(body);
  if (footers.length) {
    var footer = createTableElement(footers);
    footer.className = FOOTER_CLASS2;
    table.appendChild(footer);
  }
  return wrapTable(table);
};

// node_modules/@progress/kendo-vue-pdf/dist/es/grid/export-element.js
var exportElement = function(wrapper) {
  var query = new GridQuery(wrapper);
  var content = query.content();
  var result;
  if (content) {
    var colGroups = [content.querySelector("colgroup")];
    var headers = [query.header().querySelector("thead")];
    var bodies = [content.querySelector("tbody")];
    var footer = query.footer();
    var footers = footer ? [footer.querySelector("tfoot")] : [];
    result = createTable(colGroups, headers, bodies, footers);
  } else {
    result = wrapTable(query.table().cloneNode(true));
  }
  return result;
};

// node_modules/@progress/kendo-vue-pdf/dist/es/grid/provideSaveGridPDF.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var allVue9 = vue_runtime_esm_bundler_exports;
var h2 = allVue9.h;
var createApp2 = allVue9.createApp;
function provideSaveGridPDF(savePDF2) {
  return function(grid, pdfExportOptions, callback, data, columns) {
    if (pdfExportOptions === void 0) {
      pdfExportOptions = {};
    }
    return saveGridPDF(savePDF2, grid, pdfExportOptions, callback, data, columns);
  };
}
function saveGridPDF(savePDF2, grid, pdfExportOptions, callback, data, v3) {
  if (pdfExportOptions === void 0) {
    pdfExportOptions = {};
  }
  renderGrid();
  var gridOuterWrapper;
  var gridInnerWrapper;
  var finalContainer;
  var gridInstance;
  function renderGrid() {
    if (!canUseDOM) {
      return;
    }
    gridOuterWrapper = document.createElement("div");
    gridOuterWrapper.setAttribute("style", "position:absolute; left: -5000px; top: 0px;");
    gridInnerWrapper = document.createElement("div");
    gridOuterWrapper.appendChild(gridInnerWrapper);
    document.body.appendChild(gridOuterWrapper);
    var customDataProps = data && {
      dataItems: data,
      total: data.length,
      pageSize: data.length,
      skip: 0
    };
    if (v3) {
      var gridForPdf = {
        render: function render5() {
          return h2(grid.type, __assign(__assign({}, grid.props), customDataProps), grid.children);
        },
        store: grid.$store,
        mounted: function mounted2() {
          if (this.$el.style) {
            this.$el.style.width = "1000px";
          }
          onGridRendered.call(this);
        }
      };
      gridInstance = createApp2(gridForPdf);
      gridInstance.mount(gridInnerWrapper);
    } else {
      var gridConstructor = Object.getPrototypeOf(grid).constructor;
      gridInstance = new gridConstructor({
        propsData: Object.assign({}, grid.$props, customDataProps),
        store: grid.$store,
        mounted: function mounted2() {
          if (gridInstance.$el.style) {
            gridInstance.$el.style.width = "1000px";
          }
          onGridRendered.call(gridInstance);
        }
      });
      gridInstance.$slots = grid.$slots;
      gridInstance.$scopedSlots = grid.$scopedSlots;
      gridInstance.$mount(gridInnerWrapper);
    }
  }
  function onGridRendered() {
    savePDF2(prepareFinalElementForExport.call(this), pdfExportOptions, cleanUpAndInvokeCallback);
  }
  function cleanUpAndInvokeCallback() {
    if (gridInstance.unmount) {
      gridInstance.unmount();
    } else {
      gridInstance.$destroy();
    }
    document.body.removeChild(gridOuterWrapper);
    document.body.removeChild(finalContainer);
    gridOuterWrapper = finalContainer = void 0;
    if (callback) {
      callback();
    }
  }
  function prepareFinalElementForExport() {
    finalContainer = document.createElement("div");
    finalContainer.className = "k-grid-pdf-export-element";
    var result = exportElement(this.$el);
    finalContainer.appendChild(result);
    document.body.appendChild(finalContainer);
    return result;
  }
}

// node_modules/@progress/kendo-vue-pdf/dist/es/grid/GridPDFExport.js
var allVue10 = vue_runtime_esm_bundler_exports;
var gh7 = allVue10.h;
var isV38 = allVue10.version && allVue10.version[0] === "3";
var GridPdfExportVue2 = {
  name: "grid-pdf-export",
  props: {
    author: String,
    avoidLinks: [Boolean, String],
    forcePageBreak: String,
    keepTogether: String,
    creator: String,
    date: Date,
    imageResolution: Number,
    fileName: String,
    forceProxy: Boolean,
    keywords: String,
    landscape: Boolean,
    margin: [String, Object],
    pageTemplate: [Object, Function],
    paperSize: [String, Object],
    repeatHeaders: Boolean,
    scale: Number,
    proxyData: Object,
    proxyURL: String,
    proxyTarget: String,
    producer: String,
    subject: String,
    title: String
  },
  created: function created3() {
    this.saveGridPDF = provideSaveGridPDF(this.getSavePDF());
  },
  methods: {
    save: function save2(data, callback) {
      var defaultSlot = getDefaultSlots(this);
      var gridSlot = defaultSlot.filter(function(child) {
        return child && child.tag && child.tag.toLowerCase().indexOf("grid") !== -1 || child.componentOptions && child.componentOptions.tag && child.componentOptions.tag.toLowerCase().indexOf("grid") !== -1 || child.type && child.type.name && child.type.name.toLowerCase().indexOf("grid") !== -1;
      });
      if (gridSlot.length) {
        this.gridComponent = this.v3 ? gridSlot[0] : gridSlot[0].componentInstance;
        this.saveGridPDF(this.gridComponent, this.$props, callback, data, this.v3);
      }
    },
    getSavePDF: function getSavePDF() {
      return savePDF;
    }
  },
  // @ts-ignore
  setup: !isV38 ? void 0 : function() {
    var v3 = !!isV38;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render3(createElement) {
    var h4 = gh7 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h4("div", [defaultSlot]);
  }
};
var GridPdfExport = GridPdfExportVue2;

// node_modules/@progress/kendo-vue-pdf/dist/es/common/table-query.js
var HEADER_CLASS3 = "k-grid-header";
var FOOTER_CLASS3 = "k-grid-footer";
var TABLE2 = "TABLE";
var matchesTable2 = matchesNodeName(TABLE2);
var GridQuery2 = (
  /** @class */
  function() {
    function GridQuery3(element) {
      this.element = element;
      this.list = findElement(element, matchesClasses("k-grid"));
    }
    GridQuery3.prototype.content = function() {
      return findElement(this.list, matchesClasses("k-grid"));
    };
    GridQuery3.prototype.header = function() {
      this.headerWrap = this.headerWrap || findElement(this.element, matchesClasses(HEADER_CLASS3));
      return findElement(this.headerWrap, matchesClasses("".concat(HEADER_CLASS3)));
    };
    GridQuery3.prototype.footer = function() {
      this.footerWrap = this.footerWrap || findElement(this.element, matchesClasses(FOOTER_CLASS3));
      return findElement(this.footerWrap, matchesClasses("".concat(FOOTER_CLASS3)));
    };
    GridQuery3.prototype.table = function() {
      return findElement(this.element, matchesTable2);
    };
    return GridQuery3;
  }()
);

// node_modules/@progress/kendo-vue-pdf/dist/es/treelist/export-element.js
var exportElement2 = function(wrapper) {
  var query = new GridQuery2(wrapper);
  var content = query.content();
  var result;
  var headerWithoutFilter = query.header();
  if (headerWithoutFilter.children.length > 1) {
    headerWithoutFilter.removeChild(headerWithoutFilter.children[1]);
  }
  headerWithoutFilter.children[0].childNodes.forEach(function(headerCell) {
    if (headerCell.style) {
      return headerCell.style.top = 0;
    }
  });
  if (content) {
    var colGroups = [content.querySelector("colgroup")];
    var headers = [headerWithoutFilter];
    var bodies = [content.querySelector("tbody")];
    var footer = query.footer();
    var footers = footer ? [footer.querySelector("tfoot")] : [];
    result = createTable(colGroups, headers, bodies, footers);
  } else {
    result = wrapTable(query.table().cloneNode(true));
  }
  return result;
};

// node_modules/@progress/kendo-vue-pdf/dist/es/treelist/provideSaveTreeListPDF.js
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var allVue11 = vue_runtime_esm_bundler_exports;
var h3 = allVue11.h;
var createApp3 = allVue11.createApp;
function provideSaveTreeListPDF(savePDF2) {
  return function(treeList, pdfExportOptions, callback, data, columns) {
    if (pdfExportOptions === void 0) {
      pdfExportOptions = {};
    }
    return saveTreeListPDF(savePDF2, treeList, pdfExportOptions, callback, data, columns);
  };
}
function saveTreeListPDF(savePDF2, treeList, pdfExportOptions, callback, data, v3) {
  if (pdfExportOptions === void 0) {
    pdfExportOptions = {};
  }
  renderTreeList();
  var treeListOuterWrapper;
  var treeListInnerWrapper;
  var finalContainer;
  var treeListInstance;
  function renderTreeList() {
    if (!canUseDOM) {
      return;
    }
    treeListOuterWrapper = document.createElement("div");
    treeListOuterWrapper.setAttribute("style", "position:absolute; left: -5000px; top: 0px;");
    treeListInnerWrapper = document.createElement("div");
    treeListOuterWrapper.appendChild(treeListInnerWrapper);
    document.body.appendChild(treeListOuterWrapper);
    var customDataProps = data && {
      dataItems: data,
      total: data.length,
      pageSize: data.length,
      skip: 0
    };
    if (v3) {
      var treeListForPdf = {
        render: function render5() {
          return h3(treeList.type, __assign2(__assign2({}, treeList.props), customDataProps), treeList.children);
        },
        store: treeList.$store,
        mounted: function mounted2() {
          if (this.$el.style) {
            this.$el.style.width = "1000px";
          }
          onTreeListRendered.call(this);
        }
      };
      treeListInstance = createApp3(treeListForPdf);
      treeListInstance.mount(treeListInnerWrapper);
    } else {
      var treeListConstructor = Object.getPrototypeOf(treeList).constructor;
      treeListInstance = new treeListConstructor({
        propsData: Object.assign({}, treeList.$props, customDataProps),
        store: treeList.$store,
        mounted: function mounted2() {
          if (treeListInstance.$el.style) {
            treeListInstance.$el.style.width = "1000px";
          }
          onTreeListRendered.call(treeListInstance);
        }
      });
      treeListInstance.$slots = treeList.$slots;
      treeListInstance.$scopedSlots = treeList.$scopedSlots;
      treeListInstance.$mount(treeListInnerWrapper);
    }
  }
  function onTreeListRendered() {
    savePDF2(prepareFinalElementForExport.call(this), pdfExportOptions, cleanUpAndInvokeCallback);
  }
  function cleanUpAndInvokeCallback() {
    if (treeListInstance.unmount) {
      treeListInstance.unmount();
    } else {
      treeListInstance.$destroy();
    }
    document.body.removeChild(treeListOuterWrapper);
    document.body.removeChild(finalContainer);
    treeListOuterWrapper = finalContainer = void 0;
    if (callback) {
      callback();
    }
  }
  function prepareFinalElementForExport() {
    finalContainer = document.createElement("div");
    finalContainer.className = "k-treelist-pdf-export-element";
    var result = exportElement2(this.$el);
    finalContainer.appendChild(result);
    document.body.appendChild(finalContainer);
    return result;
  }
}

// node_modules/@progress/kendo-vue-pdf/dist/es/treelist/TreeListPDFExport.js
var allVue12 = vue_runtime_esm_bundler_exports;
var gh8 = allVue12.h;
var isV39 = allVue12.version && allVue12.version[0] === "3";
var TreeListPDFExportVue2 = {
  name: "treelist-pdf-export",
  props: {
    author: String,
    avoidLinks: [Boolean, String],
    forcePageBreak: String,
    keepTogether: String,
    creator: String,
    date: Date,
    imageResolution: Number,
    fileName: String,
    forceProxy: Boolean,
    keywords: String,
    landscape: Boolean,
    margin: [String, Object],
    pageTemplate: [Object, Function],
    paperSize: [String, Object],
    repeatHeaders: Boolean,
    scale: Number,
    proxyData: Object,
    proxyURL: String,
    proxyTarget: String,
    producer: String,
    subject: String,
    title: String
  },
  created: function created4() {
    this.saveTreeListPDF = provideSaveTreeListPDF(this.getSavePDF());
  },
  methods: {
    save: function save3(data, callback) {
      var defaultSlot = getDefaultSlots(this);
      var treeListSlot = defaultSlot.filter(function(child) {
        return child && child.tag && child.tag.toLowerCase().indexOf("treelist") !== -1 || child.componentOptions && child.componentOptions.tag && child.componentOptions.tag.toLowerCase().indexOf("treelist") !== -1 || child.type && child.type.name && child.type.name.toLowerCase().indexOf("treelist") !== -1;
      });
      if (treeListSlot.length) {
        this.treeListComponent = this.v3 ? treeListSlot[0] : treeListSlot[0].componentInstance;
        this.saveTreeListPDF(this.treeListComponent, this.$props, callback, data, this.v3);
      }
    },
    getSavePDF: function getSavePDF2() {
      return savePDF;
    }
  },
  // @ts-ignore
  setup: !isV39 ? void 0 : function() {
    var v3 = !!isV39;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render4(createElement) {
    var h4 = gh8 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h4("div", [defaultSlot]);
  }
};
var TreeListPDFExport = TreeListPDFExportVue2;

// node_modules/@progress/kendo-vue-pdf/dist/es/main.js
var vue = "Vue";
if (typeof window !== "undefined" && window[vue] && window[vue].component) {
  window[vue].component("kendo-pdf-export", PDFExport);
  window[vue].component("kendo-grid-pdf-export", GridPdfExport);
}

export {
  PDFExportVue2,
  PDFExport,
  savePDF,
  GridPdfExportVue2,
  GridPdfExport,
  TreeListPDFExportVue2,
  TreeListPDFExport
};
//# sourceMappingURL=chunk-DUAICYJM.js.map
