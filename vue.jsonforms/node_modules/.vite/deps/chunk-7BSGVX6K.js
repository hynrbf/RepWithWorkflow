import {
  index_esm_exports,
  main_exports
} from "./chunk-NCGOQWHX.js";
import {
  vue_runtime_esm_bundler_exports
} from "./chunk-4NBGFDBU.js";

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/isObject.js
var isObject = function(value) {
  return typeof value === "object";
};

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/canUseDOM.js
var canUseDOM = Boolean(
  // from fbjs
  typeof window !== "undefined" && window.document && window.document.createElement
);

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/defaultSlots.js
function getDefaultSlots(component) {
  var defaultSlots = component.$slots.default;
  return component.v3 && defaultSlots && typeof defaultSlots === "function" ? defaultSlots() : defaultSlots;
}

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/Draggable.js
var _DraggableVue;
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return (typeof key === "undefined" ? "undefined" : _typeof(key)) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if ((typeof input === "undefined" ? "undefined" : _typeof(input)) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if ((typeof res === "undefined" ? "undefined" : _typeof(res)) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var allVue = vue_runtime_esm_bundler_exports;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === "3";
var DraggableVue2 = (_DraggableVue = {
  // @ts-ignore
  emits: {
    press: null,
    drag: null,
    release: null
  },
  inheritAttrs: false,
  created: function created() {
    this.element = null;
    var draggable = main_exports;
    var dp = typeof draggable !== "undefined" && draggable.Draggable ? draggable : draggable.default;
    this.draggable = new dp.Draggable({
      press: this.press,
      drag: this.drag,
      release: this.release
    });
  },
  // @ts-ignore
  setup: !isV3 ? void 0 : function() {
    var v3 = !!isV3;
    return {
      v3
    };
  },
  mounted: function mounted() {
    if (this.$el) {
      this.element = this.$el.nodeType === 3 ? this.$el.nextElementSibling : this.$el;
      this.draggable.bindTo(this.element);
    }
  },
  destroyed: !!isV3 ? void 0 : function() {
    this.draggable.destroy();
  },
  // @ts-ignore
  unmounted: function unmounted() {
    this.draggable.destroy();
  },
  methods: {
    press: function press(event) {
      if (this.element) {
        this.$emit("press", event, this.element);
      }
    },
    drag: function drag(event) {
      if (this.element) {
        this.$emit("drag", event, this.element);
      }
    },
    release: function release(event) {
      if (this.element) {
        this.$emit("release", event, this.element);
      }
    }
  }
}, _defineProperty(_DraggableVue, "setup", !isV3 ? void 0 : function() {
  var v3 = !!isV3;
  return {
    v3
  };
}), _defineProperty(_DraggableVue, "render", function render(createElement) {
  var h = gh || createElement;
  return getDefaultSlots(this);
}), _DraggableVue);

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/getter.js
var getterCache = {};
getterCache.undefined = function() {
  return void 0;
};

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/setter.js
var setterCache = {};
setterCache.undefined = function(obj) {
  return obj;
};

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/listeners.js
function getListeners() {
  if (this.v3) {
    var listeners = {};
    for (var key in this.$attrs) {
      if (key.startsWith("on")) {
        listeners[key] = this.$attrs[key];
      }
    }
    return listeners;
  } else {
    return this.$listeners;
  }
}

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/templateRendering.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var allVue2 = vue_runtime_esm_bundler_exports;
var isV32 = allVue2.version && allVue2.version[0] === "3";
function templateRendering(template, listeners) {
  if (!template && template !== false) {
    return void 0;
  }
  if (template.kt) {
    return template;
  }
  var scopedSlot = isV32 ? this.$slots[template] || (template.toLowerCase ? this.$slots[template.toLowerCase()] : null) : this.$scopedSlots[template] || (template.toLowerCase ? this.$scopedSlots[template.toLowerCase()] : null);
  if (typeof template === "string" && scopedSlot) {
    return { kt: true, type: "slot", render: scopedSlot, listeners };
  }
  if (typeof template === "string" || isObject(template) || typeof template === "function" && template.component) {
    return { kt: true, type: "component", render: template, listeners };
  }
  return { kt: true, type: "renderFunction", render: template, listeners };
}
function getTemplate(_a) {
  var h = _a.h, template = _a.template, defaultRendering = _a.defaultRendering, defaultSlots = _a.defaultSlots, additionalProps = _a.additionalProps, additionalListeners = _a.additionalListeners, swapDefaultSlots = _a.swapDefaultSlots;
  if (!template || template && template.render === true) {
    return defaultRendering;
  }
  var events;
  var props;
  var componentOptions;
  if (isV32) {
    var passedProps = defaultRendering ? defaultRendering.props : {};
    events = __assign(__assign({}, transformListeners(additionalListeners)), template.listeners);
    props = __assign(__assign(__assign({}, passedProps), additionalProps), events);
    componentOptions = __assign(__assign({}, props), events);
  } else {
    var hasComponentOptions = defaultRendering && defaultRendering.componentOptions;
    var defaultListeners = hasComponentOptions ? defaultRendering.componentOptions.listeners : {};
    var defaultProps = hasComponentOptions ? defaultRendering.componentOptions.propsData : {};
    events = __assign(__assign(__assign(__assign({}, defaultListeners), additionalListeners), transformListeners(additionalListeners)), template.listeners);
    props = __assign(__assign(__assign({}, defaultProps), additionalProps), events);
    componentOptions = { props, on: events };
  }
  if (template.type === "slot") {
    var slotTemplate = template.render({
      props,
      listeners: events,
      methods: events,
      defaultSlots
    });
    return isV32 ? slotTemplate : slotTemplate ? slotTemplate[0] : void 0;
  } else if (template.type === "renderFunction") {
    if (swapDefaultSlots) {
      return template.render ? template.render(h, defaultRendering, defaultSlots, props, events) : void 0;
    }
    return template.render ? template.render(h, defaultRendering, props, events, defaultSlots) : void 0;
  } else {
    return h(template.render, componentOptions, isV32 ? function() {
      return [defaultSlots];
    } : [defaultSlots]);
  }
}
function transformListeners(listeners) {
  if (!listeners) {
    return listeners;
  }
  var newListeners = {};
  var listenersKeys = Object.keys(listeners);
  for (var i = 0; i < listenersKeys.length; i++) {
    var currentKey = listenersKeys[i];
    newListeners["on" + currentKey.charAt(0).toUpperCase() + currentKey.slice(1)] = listeners[currentKey];
  }
  return newListeners;
}

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/isRtl.js
function getDir(element, initialDir) {
  if (!initialDir && canUseDOM && element) {
    var rtlCandidate = window.getComputedStyle(element).direction;
    if (rtlCandidate) {
      return rtlCandidate;
    }
  }
  return initialDir;
}

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/validate-package.js
function validatePackage(packageMetadata2) {
  var licensing = index_esm_exports;
  var ls = typeof licensing !== "undefined" && licensing.validatePackage ? licensing : licensing.default;
  if (ls && ls.validatePackage) {
    ls.validatePackage(packageMetadata2);
  } else {
    var message = "License activation failed for ".concat(packageMetadata2.name, "\n");
    message += "The @progress/kendo-licensing script is not loaded.\n";
    message += "See ".concat(packageMetadata2.licensingDocsUrl, " for more information.\n");
    console.warn(message);
  }
}

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/theme.js
var kendoThemeMaps = {
  sizeMap: {
    small: "sm",
    medium: "md",
    large: "lg"
  },
  roundedMap: {
    small: "sm",
    medium: "md",
    large: "lg"
  }
};

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/browser-support.service.js
var getDocument = function() {
  return typeof document !== "undefined" ? document : {};
};
var BrowserSupportService = (
  /** @class */
  function() {
    function BrowserSupportService2() {
    }
    Object.defineProperty(BrowserSupportService2.prototype, "scrollbarWidth", {
      get: function() {
        var document2 = getDocument();
        if (!this.scrollbar && document2 && document2.createElement) {
          var div = document2.createElement("div");
          div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
          div.innerHTML = "&nbsp;";
          document2.body.appendChild(div);
          this.scrollbar = div.offsetWidth - div.scrollWidth;
          document2.body.removeChild(div);
        }
        return this.scrollbar;
      },
      enumerable: false,
      configurable: true
    });
    return BrowserSupportService2;
  }()
);

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/icons/FontIcon.js
var allVue3 = vue_runtime_esm_bundler_exports;
var gh2 = allVue3.h;
var isV33 = allVue3.version && allVue3.version[0] === "3";

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/icons/SvgIcon.js
var allVue4 = vue_runtime_esm_bundler_exports;
var gh3 = allVue4.h;
var isV34 = allVue4.version && allVue4.version[0] === "3";

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/icons/Icon.js
var allVue5 = vue_runtime_esm_bundler_exports;
var gh4 = allVue5.h;
var isV35 = allVue5.version && allVue5.version[0] === "3";

// node_modules/@progress/kendo-vue-indicators/node_modules/@progress/kendo-vue-common/dist/es/navigation.js
var Navigation = (
  /** @class */
  function() {
    function Navigation2(options) {
      var _this = this;
      this.rovingTabIndex = true;
      this.update = function() {
      };
      this.focusNextIndex = function(target, indexDiff) {
        var all = _this.elements;
        var index = all.indexOf(target) + indexDiff;
        index = index < 0 ? all.length - 1 : index;
        _this.focusElement(all[index % all.length], target);
      };
      this.tabIndex = options.tabIndex || 0;
      this.root = options.root;
      this.selectors = options.selectors;
      this.rovingTabIndex = options.rovingTabIndex !== void 0 ? options.rovingTabIndex : true;
      this.mouseEvents = options.mouseEvents || {};
      this.keyboardEvents = options.keyboardEvents || {};
    }
    Object.defineProperty(Navigation2.prototype, "elements", {
      get: function() {
        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(","))) : [];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "first", {
      get: function() {
        return this.root && this.root.querySelector(this.selectors.join(",")) || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "last", {
      get: function() {
        var all = this.elements;
        return all[all.length - 1] || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "current", {
      get: function() {
        return this.elements.find(function(el) {
          return el.matches(":focus");
        }) || null;
      },
      enumerable: false,
      configurable: true
    });
    Navigation2.prototype.focusNext = function(target) {
      this.focusNextIndex(target, 1);
    };
    Navigation2.prototype.focusPrevious = function(target) {
      this.focusNextIndex(target, -1);
    };
    Navigation2.prototype.triggerKeyboardEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var key = ev.key === " " ? "Space" : ev.key;
      var eventType = ev.type;
      if (target && this.keyboardEvents[eventType][key]) {
        this.keyboardEvents[eventType][key].call(void 0, target, this, ev);
      }
    };
    Navigation2.prototype.triggerMouseEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var eventType = ev.type;
      if (target) {
        this.mouseEvents[eventType].call(void 0, target, this, ev);
      }
    };
    Navigation2.prototype.focusElement = function(element, previous) {
      if (element) {
        if (previous) {
          if (this.rovingTabIndex) {
            previous.removeAttribute("tabindex");
          }
          previous.classList.remove("k-focus");
        }
        if (this.rovingTabIndex) {
          element.setAttribute("tabindex", String(this.tabIndex));
        }
        element.focus({ preventScroll: true });
      }
    };
    return Navigation2;
  }()
);

// node_modules/@progress/kendo-vue-indicators/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-vue-indicators",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1693312953,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-indicators/dist/es/badge/Badge.js
var allVue6 = vue_runtime_esm_bundler_exports;
var gh5 = allVue6.h;
var isV36 = allVue6.version && allVue6.version[0] === "3";
var BadgeVue2 = {
  name: "KendoBadge",
  props: {
    dir: String,
    align: {
      type: Object,
      default: function _default() {
        return {
          vertical: "top",
          horizontal: "end"
        };
      }
    },
    size: {
      type: String,
      default: "medium",
      validator: function validator(value) {
        return ["small", "medium", "large"].includes(value);
      }
    },
    fillMode: {
      type: String,
      default: "solid",
      validator: function validator2(value) {
        return ["solid", "outline"].includes(value);
      }
    },
    themeColor: {
      type: String,
      default: "primary",
      validator: function validator3(value) {
        return ["primary", "secondary", "tertiary", "info", "success", "warning", "error", "dark", "light", "inverse"].includes(value);
      }
    },
    rounded: {
      type: String,
      default: "medium",
      validator: function validator4(value) {
        return [null, "small", "medium", "large", "full"].includes(value);
      }
    },
    position: {
      type: String,
      default: "edge",
      validator: function validator5(value) {
        return ["edge", "outside", "inside"].includes(value);
      }
    },
    cutoutBorder: Boolean
  },
  created: function created2() {
    validatePackage(packageMetadata);
    this.currentDir = void 0;
  },
  mounted: function mounted2() {
    this.currentDir = getDir(this.$el, this.$props.dir);
  },
  computed: {
    badgeClasses: function badgeClasses() {
      var _a;
      var _b = this.$props, size = _b.size, fillMode = _b.fillMode, cutoutBorder = _b.cutoutBorder, position = _b.position, align = _b.align, themeColor = _b.themeColor, rounded = _b.rounded;
      return _a = {
        "k-badge": true,
        "k-badge-sm": size === "small",
        "k-badge-md": size === "medium",
        "k-badge-lg": size === "large"
      }, _a["k-badge-".concat(fillMode)] = fillMode, _a["k-badge-".concat(fillMode, "-").concat(themeColor)] = Boolean(fillMode && themeColor), _a["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a["k-badge-border-cutout"] = cutoutBorder, _a["k-badge-".concat(position)] = position, _a["k-top-start"] = align.vertical === "top" && align.horizontal === "start", _a["k-top-end"] = align.vertical === "top" && align.horizontal === "end", _a["k-bottom-start"] = align.vertical === "bottom" && align.horizontal === "start", _a["k-bottom-end"] = align.vertical === "bottom" && align.horizontal === "end", _a;
    }
  },
  // @ts-ignore
  setup: !isV36 ? void 0 : function() {
    var v3 = !!isV36;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render2(createElement) {
    var h = gh5 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("span", {
      "class": this.badgeClasses,
      dir: this.currentDir,
      attrs: this.v3 ? void 0 : {
        dir: this.currentDir
      }
    }, [defaultSlot]);
  },
  methods: {
    focusElement: function focusElement() {
      if (this.$el) {
        this.$el.focus();
      }
    }
  }
};
var Badge = BadgeVue2;

// node_modules/@progress/kendo-vue-indicators/dist/es/badge/BadgeContainer.js
var allVue7 = vue_runtime_esm_bundler_exports;
var gh6 = allVue7.h;
var isV37 = allVue7.version && allVue7.version[0] === "3";
var BadgeContainerVue2 = {
  name: "KendoBadgeContainer",
  props: {
    dir: String,
    align: {
      type: Object,
      default: function _default2() {
        return {
          vertical: "top",
          horizontal: "end"
        };
      }
    },
    size: {
      type: String,
      default: "medium",
      validator: function validator6(value) {
        return ["small", "medium", "large"].includes(value);
      }
    },
    fillMode: {
      type: String,
      default: "solid",
      validator: function validator7(value) {
        return ["solid", "outline"].includes(value);
      }
    },
    themeColor: {
      type: String,
      default: "primary",
      validator: function validator8(value) {
        return ["primary", "secondary", "tertiary", "info", "success", "warning", "error", "dark", "light", "inverse"].includes(value);
      }
    },
    rounded: {
      type: String,
      default: "medium",
      validator: function validator9(value) {
        return [null, "small", "medium", "large", "full"].includes(value);
      }
    },
    position: {
      type: String,
      default: "edge",
      validator: function validator10(value) {
        return ["edge", "outside", "inside"].includes(value);
      }
    },
    cutoutBorder: Boolean,
    content: [String, Function, Object]
  },
  created: function created3() {
    validatePackage(packageMetadata);
    this.currentDir = void 0;
  },
  mounted: function mounted3() {
    this.currentDir = getDir(this.$el, this.$props.dir);
  },
  computed: {
    badgeContainerClasses: function badgeContainerClasses() {
      return {
        "k-badge-container": true
      };
    },
    badgeClasses: function badgeClasses2() {
      var _a;
      var _b = this.$props, size = _b.size, fillMode = _b.fillMode, cutoutBorder = _b.cutoutBorder, position = _b.position, align = _b.align, themeColor = _b.themeColor, rounded = _b.rounded;
      return _a = {
        "k-badge": true,
        "k-badge-sm": size === "small",
        "k-badge-md": size === "medium",
        "k-badge-lg": size === "large"
      }, _a["k-badge-".concat(fillMode)] = fillMode, _a["k-badge-".concat(fillMode, "-").concat(themeColor)] = Boolean(fillMode && themeColor), _a["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a["k-badge-border-cutout"] = cutoutBorder, _a["k-badge-".concat(position)] = position, _a["k-top-start"] = align.vertical === "top" && align.horizontal === "start", _a["k-top-end"] = align.vertical === "top" && align.horizontal === "end", _a["k-bottom-start"] = align.vertical === "bottom" && align.horizontal === "start", _a["k-bottom-end"] = align.vertical === "bottom" && align.horizontal === "end", _a;
    }
  },
  // @ts-ignore
  setup: !isV37 ? void 0 : function() {
    var v3 = !!isV37;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render3(createElement) {
    var h = gh6 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var content = templateRendering.call(this, this.content, getListeners.call(this));
    var contentElement = getTemplate.call(this, {
      h,
      template: content,
      additionalProps: this.$props
    });
    return h("span", {
      "class": this.badgeContainerClasses,
      style: {
        display: "inline-block"
      },
      dir: this.currentDir,
      attrs: this.v3 ? void 0 : {
        dir: this.currentDir
      }
    }, [defaultSlot, h("span", {
      "class": this.badgeClasses,
      dir: this.currentDir,
      attrs: this.v3 ? void 0 : {
        dir: this.currentDir
      }
    }, [contentElement])]);
  },
  methods: {
    focusElement: function focusElement2() {
      if (this.$el) {
        this.$el.focus();
      }
    }
  }
};
var BadgeContainer = BadgeContainerVue2;

// node_modules/@progress/kendo-vue-indicators/dist/es/loader/Loader.js
var allVue8 = vue_runtime_esm_bundler_exports;
var gh7 = allVue8.h;
var isV38 = allVue8.version && allVue8.version[0] === "3";
var SEGMENT_COUNT = {
  "pulsing": 2,
  "infinite-spinner": 3,
  "converging-spinner": 4
};
var LoaderVue2 = {
  name: "KendoLoader",
  props: {
    type: {
      type: String,
      default: "pulsing",
      validator: function validator11(value) {
        return ["pulsing", "infinite-spinner", "converging-spinner"].includes(value);
      }
    },
    size: {
      type: String,
      default: "medium",
      validator: function validator12(value) {
        return ["small", "medium", "large"].includes(value);
      }
    },
    themeColor: {
      type: String,
      default: "primary",
      validator: function validator13(value) {
        return ["primary", "secondary", "tertiary", "info", "success", "warning", "error", "dark", "light", "inverse"].includes(value);
      }
    }
  },
  created: function created4() {
    validatePackage(packageMetadata);
  },
  computed: {
    loaderClasses: function loaderClasses() {
      var _a = this.$props, type = _a.type, size = _a.size, themeColor = _a.themeColor;
      return {
        "k-loader": true,
        "k-loader-sm": size === "small",
        "k-loader-md": size === "medium",
        "k-loader-lg": size === "large",
        "k-loader-primary": themeColor === "primary",
        "k-loader-secondary": themeColor === "secondary",
        "k-loader-tertiary": themeColor === "tertiary",
        "k-loader-info": themeColor === "info",
        "k-loader-success": themeColor === "success",
        "k-loader-warning": themeColor === "warning",
        "k-loader-error": themeColor === "error",
        "k-loader-dark": themeColor === "dark",
        "k-loader-light": themeColor === "light",
        "k-loader-inverse": themeColor === "inverse",
        "k-loader-pulsing-2": type === "pulsing",
        "k-loader-spinner-3": type === "infinite-spinner",
        "k-loader-spinner-4": type === "converging-spinner"
      };
    }
  },
  // @ts-ignore
  setup: !isV38 ? void 0 : function() {
    var v3 = !!isV38;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render4(createElement) {
    var h = gh7 || createElement;
    var type = this.$props.type;
    var spans = new Array(SEGMENT_COUNT[type]);
    spans.fill(0, 0, SEGMENT_COUNT[type]);
    return h("div", {
      "class": this.loaderClasses
    }, [h("div", {
      "class": "k-loader-canvas"
    }, [spans.map(function(_, i) {
      return h("span", {
        key: i,
        "class": "k-loader-segment"
      });
    }, this)])]);
  },
  methods: {
    focus: function focus(e) {
      if (this.$el) {
        this.$el.focus(e);
      }
    }
  }
};
var Loader = LoaderVue2;

// node_modules/@progress/kendo-vue-indicators/dist/es/skeleton/Skeleton.js
var allVue9 = vue_runtime_esm_bundler_exports;
var gh8 = allVue9.h;
var isV39 = allVue9.version && allVue9.version[0] === "3";
var SkeletonVue2 = {
  name: "KendoSkeleton",
  props: {
    animation: {
      type: [Object, Boolean],
      default: function _default3() {
        return {
          type: "pulse"
        };
      },
      validator: function validator14(value) {
        return value === false || ["wave", "pulse"].includes(value.type);
      }
    },
    shape: {
      type: String,
      default: "text",
      validator: function validator15(value) {
        return ["circle", "rectangle", "text"].includes(value);
      }
    },
    ariaBusy: {
      type: Boolean,
      default: void 0
    },
    role: {
      type: String,
      default: void 0
    }
  },
  created: function created5() {
    validatePackage(packageMetadata);
  },
  computed: {
    skeletonClasses: function skeletonClasses() {
      return {
        "k-skeleton": true,
        "k-skeleton-circle": this.shape === "circle",
        "k-skeleton-rect": this.shape === "rectangle",
        "k-skeleton-text": this.shape === "text",
        "k-skeleton-pulse": isObject(this.animation) && this.animation.type === "pulse",
        "k-skeleton-wave": isObject(this.animation) && this.animation.type === "wave" || this.animation === true
      };
    }
  },
  // @ts-ignore
  setup: !isV39 ? void 0 : function() {
    var v3 = !!isV39;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render5(createElement) {
    var h = gh8 || createElement;
    return h("span", {
      role: this.$props.role,
      attrs: this.v3 ? void 0 : {
        role: this.$props.role,
        ariaBusy: this.$props.ariaBusy
      },
      "class": this.skeletonClasses,
      ariaBusy: this.$props.ariaBusy
    });
  }
};
var Skeleton = SkeletonVue2;

export {
  BadgeVue2,
  Badge,
  BadgeContainerVue2,
  BadgeContainer,
  LoaderVue2,
  Loader,
  SkeletonVue2,
  Skeleton
};
//# sourceMappingURL=chunk-7BSGVX6K.js.map
