import {
  __export
} from "./chunk-HM4MQYWN.js";

// node_modules/@progress/kendo-draggable/dist/es/main.js
var main_exports = {};
__export(main_exports, {
  Draggable: () => Draggable,
  default: () => main_default
});
var proxy = function(a, b) {
  return function(e) {
    return b(a(e));
  };
};
var bind = function(el, event, callback) {
  return el.addEventListener && el.addEventListener(event, callback);
};
var unbind = function(el, event, callback) {
  return el && el.removeEventListener && el.removeEventListener(event, callback);
};
var noop = function() {
};
var preventDefault = function(e) {
  return e.preventDefault();
};
var touchRegExp = /touch/;
var IGNORE_MOUSE_TIMEOUT = 2e3;
function normalizeEvent(e) {
  if (e.type.match(touchRegExp)) {
    return {
      pageX: e.changedTouches[0].pageX,
      pageY: e.changedTouches[0].pageY,
      clientX: e.changedTouches[0].clientX,
      clientY: e.changedTouches[0].clientY,
      type: e.type,
      originalEvent: e,
      isTouch: true
    };
  }
  return {
    pageX: e.pageX,
    pageY: e.pageY,
    clientX: e.clientX,
    clientY: e.clientY,
    offsetX: e.offsetX,
    offsetY: e.offsetY,
    type: e.type,
    ctrlKey: e.ctrlKey,
    shiftKey: e.shiftKey,
    altKey: e.altKey,
    originalEvent: e
  };
}
var Draggable = function Draggable2(ref) {
  var this$1 = this;
  var press = ref.press;
  if (press === void 0)
    press = noop;
  var drag = ref.drag;
  if (drag === void 0)
    drag = noop;
  var release = ref.release;
  if (release === void 0)
    release = noop;
  var mouseOnly = ref.mouseOnly;
  if (mouseOnly === void 0)
    mouseOnly = false;
  this._pressHandler = proxy(normalizeEvent, press);
  this._dragHandler = proxy(normalizeEvent, drag);
  this._releaseHandler = proxy(normalizeEvent, release);
  this._ignoreMouse = false;
  this._mouseOnly = mouseOnly;
  this._touchstart = function(e) {
    if (e.touches.length === 1) {
      this$1._pressHandler(e);
    }
  };
  this._touchmove = function(e) {
    if (e.touches.length === 1) {
      this$1._dragHandler(e);
    }
  };
  this._touchend = function(e) {
    if (e.touches.length === 0 && e.changedTouches.length === 1) {
      this$1._releaseHandler(e);
      this$1._ignoreMouse = true;
      setTimeout(this$1._restoreMouse, IGNORE_MOUSE_TIMEOUT);
    }
  };
  this._restoreMouse = function() {
    this$1._ignoreMouse = false;
  };
  this._mousedown = function(e) {
    var which = e.which;
    if (which && which > 1 || this$1._ignoreMouse) {
      return;
    }
    bind(this$1.document, "mousemove", this$1._mousemove);
    bind(this$1.document, "mouseup", this$1._mouseup);
    this$1._pressHandler(e);
  };
  this._mousemove = function(e) {
    this$1._dragHandler(e);
  };
  this._mouseup = function(e) {
    unbind(this$1.document, "mousemove", this$1._mousemove);
    unbind(this$1.document, "mouseup", this$1._mouseup);
    this$1._releaseHandler(e);
  };
  this._pointerdown = function(e) {
    if (e.isPrimary && e.button === 0) {
      bind(this$1.document, "pointermove", this$1._pointermove);
      bind(this$1.document, "pointerup", this$1._pointerup);
      bind(this$1.document, "pointercancel", this$1._pointerup);
      bind(this$1.document, "contextmenu", preventDefault);
      this$1._pressHandler(e);
    }
  };
  this._pointermove = function(e) {
    if (e.isPrimary) {
      this$1._dragHandler(e);
    }
  };
  this._pointerup = function(e) {
    if (e.isPrimary) {
      unbind(this$1.document, "pointermove", this$1._pointermove);
      unbind(this$1.document, "pointerup", this$1._pointerup);
      unbind(this$1.document, "pointercancel", this$1._pointerup);
      unbind(this$1.document, "contextmenu", preventDefault);
      this$1._releaseHandler(e);
    }
  };
};
var prototypeAccessors = { document: { configurable: true } };
Draggable.supportPointerEvent = function supportPointerEvent() {
  return typeof window !== "undefined" && window.PointerEvent;
};
prototypeAccessors.document.get = function() {
  return this._element ? this._element.ownerDocument : document;
};
Draggable.prototype.bindTo = function bindTo(element) {
  if (element === this._element) {
    return;
  }
  if (this._element) {
    this._unbindFromCurrent();
  }
  this._element = element;
  this._bindToCurrent();
};
Draggable.prototype._bindToCurrent = function _bindToCurrent() {
  var element = this._element;
  if (this._usePointers()) {
    bind(element, "pointerdown", this._pointerdown);
    return;
  }
  bind(element, "mousedown", this._mousedown);
  if (!this._mouseOnly) {
    bind(element, "touchstart", this._touchstart);
    bind(element, "touchmove", this._touchmove);
    bind(element, "touchend", this._touchend);
  }
};
Draggable.prototype._unbindFromCurrent = function _unbindFromCurrent() {
  var element = this._element;
  if (this._usePointers()) {
    unbind(element, "pointerdown", this._pointerdown);
    unbind(this.document, "pointermove", this._pointermove);
    unbind(this.document, "pointerup", this._pointerup);
    unbind(this.document, "contextmenu", preventDefault);
    unbind(this.document, "pointercancel", this._pointerup);
    return;
  }
  unbind(element, "mousedown", this._mousedown);
  if (!this._mouseOnly) {
    unbind(element, "touchstart", this._touchstart);
    unbind(element, "touchmove", this._touchmove);
    unbind(element, "touchend", this._touchend);
  }
};
Draggable.prototype._usePointers = function _usePointers() {
  return !this._mouseOnly && Draggable.supportPointerEvent();
};
Draggable.prototype.update = function update(ref) {
  var press = ref.press;
  if (press === void 0)
    press = noop;
  var drag = ref.drag;
  if (drag === void 0)
    drag = noop;
  var release = ref.release;
  if (release === void 0)
    release = noop;
  var mouseOnly = ref.mouseOnly;
  if (mouseOnly === void 0)
    mouseOnly = false;
  this._pressHandler = proxy(normalizeEvent, press);
  this._dragHandler = proxy(normalizeEvent, drag);
  this._releaseHandler = proxy(normalizeEvent, release);
  this._mouseOnly = mouseOnly;
};
Draggable.prototype.destroy = function destroy() {
  this._unbindFromCurrent();
  this._element = null;
};
Object.defineProperties(Draggable.prototype, prototypeAccessors);
Draggable.default = Draggable;
var main_default = Draggable;

// node_modules/@progress/kendo-licensing/dist/index-esm.js
var index_esm_exports = {};
__export(index_esm_exports, {
  setScriptKey: () => setScriptKey,
  validatePackage: () => validatePackage
});
var _0xca46 = ["vgHLihbYB2r1y3qGAxmGBM90igLUy2X1zgvKigLUihrOzsbSAwnLBNnLlGO=", "B2jQzwn0", "zg9JC1vYBa==", "y29Uy2f0", "CgfJA2fNzu5HBwu=", "lcb0AguGCgfJA2fNzsb3yxmGChvIBgLZAgvKig9Uia==", "D2fYBG==", "DgLTzxn0yw1W", "ChvIBgLZAerHDgu=", "AgfZ", "z2v0vgLTzq==", "y29Kzq==", "vu1uBKu=", "ue9bB1O=", "z3jVDxa=", "Dw5KzwzPBMvK", "CvP1q3y=", "z3jVDxbfBMq=", "C2nYAxb0s2v5", "C29YDa==", "ww91CIb0CMLHBcbSAwnLBNnLigv4CgLYzwqGB24G", "CxfvAwe=", "BgvUz3rO", "wxrJvxu=", "tgjeA1a=", "tMrlrfu=", "Dg9mB2nHBgvtDhjPBMC=", "DhjPywW=", "DMjZzwC=", "zxLLvMm=", "CezstwG=", "q2zkwgi=", "ww91CIbSAwnLBNnLigv4CgLYzwqGB24G", "tLbjwwi=", "ChjVzhvJDhm=", "tgLJzw5ZzsbHy3rPDMf0Aw9UigzHAwXLzcbMB3iG", "Aff3BLa=", "BKfquKO=", "BgLJzw5ZAw5Nrg9JC1vYBa==", "sLP3BKi=", "DhDKtKi=", "ChjVzhvJDenVzgvZ", "DeTXBMC=", "zNvUy3rPB24=", "yLjkuMK=", "z2v0", "BgHQD0O=", "DhLWzq==", "rKvdB04=", "reHQzhG=", "zgf0yq==", "BgLJzw5Zzuv4CgLYyxrPB25eyxrL", "zMLUza==", "Bhr6rMm=", "DMvYC2LVBG==", "EhHtA3C=", "Dhzjv2C=", "tM8GBgLJzw5ZzsbMB3vUzc4k", "BMfTzq==", "zxHWAxj5rgf0zq==", "uhjVz3jLC3mG", "B3PqtLG=", "ChjVzhvJDe5HBwu=", "u2vLia==", "igzVCIbTB3jLigLUzM9YBwf0Aw9UlGO=", "C2v0", "CgfYC2u="];
(function(_0x2cc0a7, _0xca46c7) {
  var _0x21b987 = function(_0x278ee2) {
    while (--_0x278ee2) {
      _0x2cc0a7["push"](_0x2cc0a7["shift"]());
    }
  };
  _0x21b987(++_0xca46c7);
})(_0xca46, 288);
var _0x21b9 = function(_0x2cc0a7, _0xca46c7) {
  _0x2cc0a7 = _0x2cc0a7 - 0;
  var _0x21b987 = _0xca46[_0x2cc0a7];
  if (_0x21b9["uRVkqr"] === void 0) {
    var _0x278ee2 = function(_0x52273d) {
      var _0x4be6c1 = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=", _0x452397 = String(_0x52273d)["replace"](/=+$/, "");
      var _0x4756cf = "";
      for (var _0x3b70ee = 0, _0x3483a9, _0x379692, _0x4218702 = 0; _0x379692 = _0x452397["charAt"](_0x4218702++); ~_0x379692 && (_0x3483a9 = _0x3b70ee % 4 ? _0x3483a9 * 64 + _0x379692 : _0x379692, _0x3b70ee++ % 4) ? _0x4756cf += String["fromCharCode"](255 & _0x3483a9 >> (-2 * _0x3b70ee & 6)) : 0) {
        _0x379692 = _0x4be6c1["indexOf"](_0x379692);
      }
      return _0x4756cf;
    };
    _0x21b9["Xlszsv"] = function(_0x4b2ff0) {
      var _0x476736 = _0x278ee2(_0x4b2ff0);
      var _0x10c4f5 = [];
      for (var _0x42379e2 = 0, _0x346f582 = _0x476736["length"]; _0x42379e2 < _0x346f582; _0x42379e2++) {
        _0x10c4f5 += "%" + ("00" + _0x476736["charCodeAt"](_0x42379e2)["toString"](16))["slice"](-2);
      }
      return decodeURIComponent(_0x10c4f5);
    }, _0x21b9["oujbmo"] = {}, _0x21b9["uRVkqr"] = !![];
  }
  var _0x2f8335 = _0x21b9["oujbmo"][_0x2cc0a7];
  return _0x2f8335 === void 0 ? (_0x21b987 = _0x21b9["Xlszsv"](_0x21b987), _0x21b9["oujbmo"][_0x2cc0a7] = _0x21b987) : _0x21b987 = _0x2f8335, _0x21b987;
};
var context = { data: "  {}  " };
var cache = /* @__PURE__ */ new Map();
function setScriptKey(_0x432c4f) {
}
function validatePackage(_0xf73f27) {
  if (cache[_0x21b9("0x38")](_0xf73f27[_0x21b9("0x26")])) {
    if (_0x21b9("0xb") === _0x21b9("0x29")) {
      let _0x2c91c3 = function() {
        _0x272598 = { "type": 1, "packageName": _0x570b0b, "docsUrl": _0x213e9e[_0x21b9("0x12")] };
      };
    } else
      return cache[_0x21b9("0x19")](_0xf73f27[_0x21b9("0x26")]);
  }
  var _0x5639be = _0xf73f27[_0x21b9("0x22")] ? " v" + _0xf73f27[_0x21b9("0x22")] : "", _0x230ba2 = _0xf73f27[_0x21b9("0x26")] + _0x5639be, _0xfd8cbf = JSON[_0x21b9("0x2e")](context[_0x21b9("0x1e")]), _0xe3605 = !_0xfd8cbf[_0x21b9("0x41")] && !_0xfd8cbf[_0x21b9("0x36")], _0x5612fd = _0xfd8cbf[_0x21b9("0x41")] && typeof KendoLicensing === _0x21b9("0x3e"), _0x45cd78 = matchProduct(_0xfd8cbf, _0xf73f27[_0x21b9("0x15")]), _0x11109a;
  if (_0xe3605 || _0x5612fd) {
    if (_0x21b9("0x1a") !== _0x21b9("0x1a")) {
      let _0x50bd01 = function() {
        _0x310f3d += _0x21b9("0x0")[_0x21b9("0x32")](_0x2c6e7b[_0x21b9("0x27")][_0x21b9("0x6")](), ".\n");
      };
    } else
      _0x11109a = { "type": 0, "packageName": _0x230ba2, "docsUrl": _0xf73f27[_0x21b9("0x12")] };
  } else {
    if (_0x21b9("0x18") === _0x21b9("0x18")) {
      if (!_0x45cd78) {
        if (_0x21b9("0x23") === _0x21b9("0x23"))
          _0x11109a = { "type": 1, "packageName": _0x230ba2, "docsUrl": _0xf73f27[_0x21b9("0x12")] };
        else {
          let _0x5d43ce = function() {
            _0x27e152 += _0x21b9("0xc")[_0x21b9("0x32")](_0x266891[_0x21b9("0x27")][_0x21b9("0x6")](), _0x21b9("0x34"))[_0x21b9("0x32")](_0xb65329[_0x21b9("0x37")][_0x21b9("0x6")](), ".\n");
          };
        }
      } else {
        if (_0x45cd78[_0x21b9("0x7")] === !![] && _0x45cd78[_0x21b9("0x1f")] < getCurrentDate()) {
          if (_0x21b9("0x8") === _0x21b9("0x8"))
            _0x11109a = { "type": 3, "packageName": _0x230ba2, "expiryDate": parseDate(_0x45cd78[_0x21b9("0x1f")]), "docsUrl": _0xf73f27[_0x21b9("0x12")] };
          else {
            let _0x7ca3c2 = function() {
              return _0x2ae6a8[_0x21b9("0x1f")] - _0x160cda[_0x21b9("0x1f")];
            };
          }
        } else {
          if (_0x45cd78[_0x21b9("0x1f")] < _0xf73f27[_0x21b9("0x37")]) {
            if (_0x21b9("0x1d") !== _0x21b9("0x9"))
              _0x11109a = { "type": 2, "packageName": _0x230ba2, "publishDate": parseDate(_0xf73f27[_0x21b9("0x37")]), "expiryDate": parseDate(_0x45cd78[_0x21b9("0x1f")]), "docsUrl": _0xf73f27[_0x21b9("0x12")] };
            else {
              let _0x4601cf = function() {
                return _0xa63671[_0x21b9("0x38")](_0x455ea1[_0x21b9("0x3a")]);
              };
            }
          }
        }
      }
    } else {
      let _0x30531c = function() {
        return _0x37969[_0x21b9("0x19")](_0x421870[_0x21b9("0x26")]);
      };
    }
  }
  if (_0x11109a && typeof console === _0x21b9("0x30")) {
    if (_0x21b9("0x13") !== _0x21b9("0x13")) {
      let _0x3cf56 = function() {
        var _0x29373f = _0x21b9("0x28")[_0x21b9("0x32")](_0x5c4d31[_0x21b9("0x2a")]), _0x25cd08 = typeof _0x1611ed[_0x21b9("0x3d")] === _0x21b9("0x17");
        _0x25cd08 ? _0x4a6cb4[_0x21b9("0x3d")](_0x29373f) : _0x1939fa[_0x21b9("0x35")](_0x29373f), _0x21bf6a[_0x21b9("0x35")](_0x2ed6be(_0x2780bc)), _0x25cd08 && _0x2b4d62[_0x21b9("0x40")]();
      };
    } else {
      var _0x3149fb = _0x21b9("0x28")[_0x21b9("0x32")](_0xf73f27[_0x21b9("0x2a")]), _0x43c0ec = typeof console[_0x21b9("0x3d")] === _0x21b9("0x17");
      if (_0x43c0ec) {
        if (_0x21b9("0x24") !== _0x21b9("0x24")) {
          let _0x5a7db1 = function() {
            return null;
          };
        } else
          console[_0x21b9("0x3d")](_0x3149fb);
      } else {
        if (_0x21b9("0x14") !== _0x21b9("0x3b"))
          console[_0x21b9("0x35")](_0x3149fb);
        else {
          let _0xe655bf = function() {
            _0x4d161a += _0x21b9("0x2f");
          };
        }
      }
      console[_0x21b9("0x35")](formatError(_0x11109a));
      if (_0x43c0ec) {
        if (_0x21b9("0x11") !== _0x21b9("0x1"))
          console[_0x21b9("0x40")]();
        else {
          let _0x9728a1 = function() {
            _0x3943fb[_0x21b9("0x3d")](_0x36b16d);
          };
        }
      }
    }
  }
  var _0x11a7ae = !_0x11109a;
  return cache[_0x21b9("0x2d")](_0xf73f27[_0x21b9("0x26")], _0x11a7ae), _0x11a7ae;
}
function formatError(_0x5101b9) {
  var _0x5a2792 = _0x21b9("0xf")[_0x21b9("0x32")](_0x5101b9[_0x21b9("0x33")], "\n");
  if (_0x5101b9[_0x21b9("0x1b")] === 2) {
    if (_0x21b9("0x4") === _0x21b9("0x4"))
      _0x5a2792 += _0x21b9("0xc")[_0x21b9("0x32")](_0x5101b9[_0x21b9("0x27")][_0x21b9("0x6")](), _0x21b9("0x34"))[_0x21b9("0x32")](_0x5101b9[_0x21b9("0x37")][_0x21b9("0x6")](), ".\n");
    else {
      let _0x63cbba = function() {
        _0x42379e = { "type": 0, "packageName": _0x346f58, "docsUrl": _0x2a550b[_0x21b9("0x12")] };
      };
    }
  }
  if (_0x5101b9[_0x21b9("0x1b")] === 3) {
    if (_0x21b9("0x3c") === _0x21b9("0x10")) {
      let _0x48ecf0 = function() {
        if (!_0x542925)
          _0x546660 = { "type": 1, "packageName": _0x1a86af, "docsUrl": _0x37a449[_0x21b9("0x12")] };
        else {
          if (_0x25c7e6[_0x21b9("0x7")] === !![] && _0xfd5c3c[_0x21b9("0x1f")] < _0x480ff3())
            _0x316813 = { "type": 3, "packageName": _0x501f00, "expiryDate": _0x346b86(_0x5e6098[_0x21b9("0x1f")]), "docsUrl": _0x215250[_0x21b9("0x12")] };
          else
            _0x40d129[_0x21b9("0x1f")] < _0x2b223f[_0x21b9("0x37")] && (_0x3aab99 = { "type": 2, "packageName": _0x21bd2e, "publishDate": _0x5cef3a(_0x2114e1[_0x21b9("0x37")]), "expiryDate": _0xbb0ed4(_0x65863c[_0x21b9("0x1f")]), "docsUrl": _0x132c48[_0x21b9("0x12")] });
        }
      };
    } else
      _0x5a2792 += _0x21b9("0x0")[_0x21b9("0x32")](_0x5101b9[_0x21b9("0x27")][_0x21b9("0x6")](), ".\n");
  } else {
    if (_0x5101b9[_0x21b9("0x1b")] === 0) {
      if (_0x21b9("0x5") === _0x21b9("0xd")) {
        let _0x5a596c = function() {
          var _0x2d2702 = _0x47b41f[_0x21b9("0xe")];
          if (!_0x2d2702 || !_0x2d2702[_0x21b9("0x2")])
            return null;
          var _0x3ca628 = new _0x462a6b(_0x27fee3);
          return _0x2d2702[_0x21b9("0x42")](function(_0x27730f, _0x452cb0) {
            return _0x452cb0[_0x21b9("0x1f")] - _0x27730f[_0x21b9("0x1f")];
          })[_0x21b9("0x20")](function(_0x56d4fd) {
            return _0x3ca628[_0x21b9("0x38")](_0x56d4fd[_0x21b9("0x3a")]);
          });
        };
      } else
        _0x5a2792 += _0x21b9("0x25");
    } else {
      if (_0x5101b9[_0x21b9("0x1b")] === 1) {
        if (_0x21b9("0x3f") !== _0x21b9("0xa"))
          _0x5a2792 += _0x21b9("0x2f");
        else {
          let _0x3a9523 = function() {
            _0x358358 += _0x21b9("0x25");
          };
        }
      }
    }
  }
  return _0x5a2792 += _0x21b9("0x2b")[_0x21b9("0x32")](_0x5101b9[_0x21b9("0x31")], _0x21b9("0x2c")), _0x5a2792;
}
function matchProduct(_0xfa18c7, _0x1cf50e) {
  var _0x4dc100 = _0xfa18c7[_0x21b9("0xe")];
  if (!_0x4dc100 || !_0x4dc100[_0x21b9("0x2")]) {
    if (_0x21b9("0x3") === _0x21b9("0x3"))
      return null;
    else {
      let _0x3e3d13 = function() {
        _0x28b955[_0x21b9("0x35")](_0x314eb9);
      };
    }
  }
  var _0x17565f = new Set(_0x1cf50e);
  return _0x4dc100[_0x21b9("0x42")](function(_0x6caec6, _0x2feb2c) {
    if (_0x21b9("0x21") === _0x21b9("0x21"))
      return _0x2feb2c[_0x21b9("0x1f")] - _0x6caec6[_0x21b9("0x1f")];
    else {
      let _0x160f25 = function() {
        return new _0x2f5929()[_0x21b9("0x39")]() / 1e3;
      };
    }
  })[_0x21b9("0x20")](function(_0x1bf3ae) {
    if (_0x21b9("0x16") === _0x21b9("0x1c")) {
      let _0x7f3142 = function() {
        return new _0x560aee(_0x5c4927 * 1e3);
      };
    } else
      return _0x17565f[_0x21b9("0x38")](_0x1bf3ae[_0x21b9("0x3a")]);
  });
}
function parseDate(_0x549452) {
  return new Date(_0x549452 * 1e3);
}
function getCurrentDate() {
  return (/* @__PURE__ */ new Date())[_0x21b9("0x39")]() / 1e3;
}

export {
  main_exports,
  index_esm_exports
};
//# sourceMappingURL=chunk-NCGOQWHX.js.map
