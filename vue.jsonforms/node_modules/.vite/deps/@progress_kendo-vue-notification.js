import {
  checkOutlineIcon,
  exclamationCircleIcon,
  infoCircleIcon,
  xIcon,
  xOutlineIcon
} from "./chunk-HKPTYRTE.js";
import {
  index_esm_exports,
  main_exports
} from "./chunk-NCGOQWHX.js";
import {
  vue_runtime_esm_bundler_exports
} from "./chunk-4NBGFDBU.js";
import "./chunk-HM4MQYWN.js";

// node_modules/@progress/kendo-vue-notification/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-vue-notification",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1684213912,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/guid.js
var guid = function() {
  var id = "";
  var i;
  var random;
  for (i = 0; i < 32; i++) {
    random = Math.random() * 16 | 0;
    if (i === 8 || i === 12 || i === 16 || i === 20) {
      id += "-";
    }
    id += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);
  }
  return id;
};

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/canUseDOM.js
var canUseDOM = Boolean(
  // from fbjs
  typeof window !== "undefined" && window.document && window.document.createElement
);

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/defaultSlots.js
function getDefaultSlots(component) {
  var defaultSlots = component.$slots.default;
  return component.v3 && defaultSlots && typeof defaultSlots === "function" ? defaultSlots() : defaultSlots;
}

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/Draggable.js
var _DraggableVue;
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return (typeof key === "undefined" ? "undefined" : _typeof(key)) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if ((typeof input === "undefined" ? "undefined" : _typeof(input)) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if ((typeof res === "undefined" ? "undefined" : _typeof(res)) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var allVue = vue_runtime_esm_bundler_exports;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === "3";
var DraggableVue2 = (_DraggableVue = {
  // @ts-ignore
  emits: {
    press: null,
    drag: null,
    release: null
  },
  inheritAttrs: false,
  created: function created() {
    this.element = null;
    var draggable = main_exports;
    var dp = typeof draggable !== "undefined" && draggable.Draggable ? draggable : draggable.default;
    this.draggable = new dp.Draggable({
      press: this.press,
      drag: this.drag,
      release: this.release
    });
  },
  // @ts-ignore
  setup: !isV3 ? void 0 : function() {
    var v3 = !!isV3;
    return {
      v3
    };
  },
  mounted: function mounted() {
    if (this.$el) {
      this.element = this.$el.nodeType === 3 ? this.$el.nextElementSibling : this.$el;
      this.draggable.bindTo(this.element);
    }
  },
  destroyed: !!isV3 ? void 0 : function() {
    this.draggable.destroy();
  },
  // @ts-ignore
  unmounted: function unmounted() {
    this.draggable.destroy();
  },
  methods: {
    press: function press(event) {
      if (this.element) {
        this.$emit("press", event, this.element);
      }
    },
    drag: function drag(event) {
      if (this.element) {
        this.$emit("drag", event, this.element);
      }
    },
    release: function release(event) {
      if (this.element) {
        this.$emit("release", event, this.element);
      }
    }
  }
}, _defineProperty(_DraggableVue, "setup", !isV3 ? void 0 : function() {
  var v3 = !!isV3;
  return {
    v3
  };
}), _defineProperty(_DraggableVue, "render", function render(createElement) {
  var h = gh || createElement;
  return getDefaultSlots(this);
}), _DraggableVue);

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/getter.js
var getterCache = {};
getterCache.undefined = function() {
  return void 0;
};

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/setter.js
var setterCache = {};
setterCache.undefined = function(obj) {
  return obj;
};

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/templateRendering.js
var allVue2 = vue_runtime_esm_bundler_exports;
var isV32 = allVue2.version && allVue2.version[0] === "3";

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/validate-package.js
function validatePackage(packageMetadata2) {
  var licensing = index_esm_exports;
  var ls = typeof licensing !== "undefined" && licensing.validatePackage ? licensing : licensing.default;
  if (ls && ls.validatePackage) {
    ls.validatePackage(packageMetadata2);
  } else {
    var message = "License activation failed for ".concat(packageMetadata2.name, "\n");
    message += "The @progress/kendo-licensing script is not loaded.\n";
    message += "See ".concat(packageMetadata2.licensingDocsUrl, " for more information.\n");
    console.warn(message);
  }
}

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/browser-support.service.js
var getDocument = function() {
  return typeof document !== "undefined" ? document : {};
};
var BrowserSupportService = (
  /** @class */
  function() {
    function BrowserSupportService2() {
    }
    Object.defineProperty(BrowserSupportService2.prototype, "scrollbarWidth", {
      get: function() {
        var document2 = getDocument();
        if (!this.scrollbar && document2 && document2.createElement) {
          var div = document2.createElement("div");
          div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
          div.innerHTML = "&nbsp;";
          document2.body.appendChild(div);
          this.scrollbar = div.offsetWidth - div.scrollWidth;
          document2.body.removeChild(div);
        }
        return this.scrollbar;
      },
      enumerable: false,
      configurable: true
    });
    return BrowserSupportService2;
  }()
);

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/icons/constants.js
var SIZE_CLASSES = {
  "default": "",
  "xsmall": "k-icon-xs",
  "small": "k-icon-sm",
  "medium": "k-icon-md",
  "large": "k-icon-lg",
  "xlarge": "k-icon-xl"
};

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/icons/FontIcon.js
var allVue3 = vue_runtime_esm_bundler_exports;
var gh2 = allVue3.h;
var isV33 = allVue3.version && allVue3.version[0] === "3";
var FontIconVue2 = {
  name: "KendoFontIcon",
  // @ts-ignore
  emits: {
    click: null
  },
  props: {
    name: String,
    themeColor: {
      type: String
    },
    size: {
      type: String
    },
    flip: {
      type: String
    },
    id: String,
    ariaLabel: String,
    title: String,
    tabIndex: Number
  },
  computed: {
    fontClassNames: function fontClassNames() {
      var _a;
      var _b = this.$props, name = _b.name, flip = _b.flip, size = _b.size, themeColor = _b.themeColor;
      return _a = {
        "k-icon": true
      }, _a["k-i-" + name] = name, _a["k-color-" + themeColor] = themeColor, _a["k-flip-h"] = flip === "horizontal" || flip === "both", _a["k-flip-v"] = flip === "vertical" || flip === "both", _a[SIZE_CLASSES[size]] = size, _a;
    }
  },
  // @ts-ignore
  setup: !isV33 ? void 0 : function() {
    var v3 = !!isV33;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render2(createElement) {
    var h = gh2 || createElement;
    var _a = this.$props, id = _a.id, title = _a.title, tabIndex = _a.tabIndex, ariaLabel = _a.ariaLabel;
    return h("span", {
      "class": this.fontClassNames,
      id,
      attrs: this.v3 ? void 0 : {
        id,
        title,
        "aria-label": ariaLabel,
        tabIndex,
        role: "presentation"
      },
      title,
      "aria-label": ariaLabel,
      tabIndex,
      role: "presentation",
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    });
  },
  methods: {
    handleClick: function handleClick(e) {
      this.$emit("click", e);
    }
  }
};
var FontIcon = FontIconVue2;

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/icons/SvgIcon.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var allVue4 = vue_runtime_esm_bundler_exports;
var gh3 = allVue4.h;
var isV34 = allVue4.version && allVue4.version[0] === "3";
var SvgIconVue2 = {
  name: "KendoSvgIcon",
  // @ts-ignore
  emits: {
    click: null
  },
  props: {
    icon: Object,
    themeColor: {
      type: String
    },
    size: {
      type: String
    },
    flip: {
      type: String
    },
    id: String,
    ariaLabel: String,
    title: String,
    viewBox: {
      type: String,
      default: "0 0 24 24"
    },
    tabIndex: Number
  },
  computed: {
    wrapperClass: function wrapperClass() {
      var _a;
      var _b = this.$props, name = _b.name, flip = _b.flip, size = _b.size, themeColor = _b.themeColor;
      return _a = {
        "k-svg-icon": true
      }, _a["k-color-" + themeColor] = themeColor, _a["k-svg-i-" + name] = name, _a["k-flip-h"] = flip === "horizontal" || flip === "both", _a["k-flip-v"] = flip === "vertical" || flip === "both", _a[SIZE_CLASSES[size]] = size, _a;
    }
  },
  // @ts-ignore
  setup: !isV34 ? void 0 : function() {
    var v3 = !!isV34;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render3(createElement) {
    var h = gh3 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a = this.$props, svgClassName = _a.svgClassName, icon = _a.icon, id = _a.id, tabIndex = _a.tabIndex, svgStyle = _a.svgStyle, viewBox = _a.viewBox, title = _a.title, ariaLabel = _a.ariaLabel;
    var innerHTML = icon ? icon.content : void 0;
    var attrs = {
      id,
      title,
      "aria-hidden": true,
      tabIndex,
      ariaLabel,
      focusable: "false",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: icon ? icon.viewBox : viewBox
    };
    var svg = h("svg", __assign(__assign({}, attrs), {
      attrs: this.v3 ? void 0 : attrs,
      domProps: this.v3 ? void 0 : {
        innerHTML
      },
      innerHTML,
      "class": svgClassName,
      style: svgStyle
    }), [icon ? void 0 : defaultSlot]);
    return h("span", {
      "class": this.wrapperClass,
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    }, [svg]);
  },
  methods: {
    handleClick: function handleClick2(e) {
      this.$emit("click", e);
    }
  }
};
var SvgIcon = SvgIconVue2;

// node_modules/@progress/kendo-vue-notification/node_modules/@progress/kendo-vue-common/dist/es/icons/Icon.js
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var allVue5 = vue_runtime_esm_bundler_exports;
var gh4 = allVue5.h;
var isV35 = allVue5.version && allVue5.version[0] === "3";
var IconVue2 = {
  name: "KendoIcon",
  // @ts-ignore
  emits: {
    click: null
  },
  inject: {
    kendoIcons: {
      default: {
        type: "font",
        icons: {}
      }
    }
  },
  props: {
    name: String,
    icon: Object,
    title: String,
    themeColor: {
      type: String
    },
    size: {
      type: String
    },
    flip: {
      type: String
    },
    id: String,
    ariaLabel: String,
    viewBox: {
      type: String,
      default: "0 0 24 24"
    },
    tabIndex: Number
  },
  // @ts-ignore
  setup: !isV35 ? void 0 : function() {
    var v3 = !!isV35;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render4(createElement) {
    var h = gh4 || createElement;
    var _a = this.$props, name = _a.name, icon = _a.icon, themeColor = _a.themeColor, size = _a.size, flip = _a.flip, id = _a.id, viewBox = _a.viewBox, tabIndex = _a.tabIndex, title = _a.title, ariaLabel = _a.ariaLabel;
    var svg = name && this.kendoIcons && this.kendoIcons.icons[name] || icon;
    var renderSVG = this.kendoIcons && this.kendoIcons.type === "svg" && svg !== void 0;
    var resolvedName = name || (icon && icon.name ? icon.name : void 0);
    var commonProps = {
      themeColor,
      size,
      flip,
      id,
      tabIndex,
      title,
      ariaLabel
    };
    var fontIcon = h(FontIcon, __assign2(__assign2({}, commonProps), {
      name: resolvedName,
      attrs: this.v3 ? void 0 : __assign2(__assign2({}, commonProps), {
        name: resolvedName
      }),
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    }));
    var svgIcon = h(SvgIcon, __assign2(__assign2({}, commonProps), {
      icon: svg,
      viewBox,
      attrs: this.v3 ? void 0 : __assign2(__assign2({}, commonProps), {
        icon: svg,
        viewBox
      }),
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    }));
    return renderSVG ? svgIcon : fontIcon;
  },
  methods: {
    handleClick: function handleClick3(e) {
      this.$emit("click", e);
    }
  }
};
var Icon = IconVue2;

// node_modules/@progress/kendo-vue-notification/dist/es/Notification.js
var allVue6 = vue_runtime_esm_bundler_exports;
var gh5 = allVue6.h;
var isV36 = allVue6.version && allVue6.version[0] === "3";
var buttonTitle = "Close";
var NotificationVue2 = {
  name: "KendoNotification",
  props: {
    closable: {
      type: [Object, Boolean],
      default: function _default() {
        return false;
      }
    },
    dir: String,
    type: {
      type: Object,
      default: function _default2() {
        return {
          style: "none",
          icon: true
        };
      },
      validator: function validator(value) {
        return ["none", "success", "error", "warning", "info"].includes(value.style);
      }
    },
    themeColor: {
      type: String,
      default: "base",
      validator: function validator2(value) {
        return [null, "base", "error", "info", "success", "warning"].includes(value);
      }
    },
    ariaLabel: {
      type: String,
      default: void 0
    }
  },
  created: function created2() {
    validatePackage(packageMetadata);
    this.notificationContentId = guid();
  },
  computed: {
    computedTheme: function computedTheme() {
      var _a = this.$props, type = _a.type, themeColor = _a.themeColor;
      return type.style !== "none" ? type.style : themeColor;
    },
    computedSvg: function computedSvg() {
      switch (this.computedTheme) {
        case "success":
          return {
            name: "check-outline",
            icon: checkOutlineIcon
          };
        case "error":
          return {
            name: "x-outline",
            icon: xOutlineIcon
          };
        case "info":
          return {
            name: "info-circle",
            icon: infoCircleIcon
          };
        case "warning":
          return {
            name: "exclamation-circle",
            icon: exclamationCircleIcon
          };
        default:
          return {};
      }
    },
    wrapperClass: function wrapperClass2() {
      var _a;
      var closable = this.$props.closable;
      return _a = {
        "k-notification": true
      }, _a["k-notification-".concat(this.computedTheme)] = this.computedTheme, _a["k-notification-closable"] = closable, _a;
    }
  },
  // @ts-ignore
  setup: !isV36 ? void 0 : function() {
    var v3 = !!isV36;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render5(createElement) {
    var h = gh5 || createElement;
    var defaultSlot = getDefaultSlots(this);
    var _a = this.$props, closable = _a.closable, type = _a.type;
    return h("div", {
      "class": "k-notification-container"
    }, [h("div", {
      role: "alert",
      attrs: this.v3 ? void 0 : {
        role: "alert",
        "aria-live": "polite",
        "aria-label": this.$props.ariaLabel,
        "aria-describedby": this.notificationContentId
      },
      "class": this.wrapperClass,
      style: this.$props.style,
      "aria-live": "polite",
      "aria-label": this.$props.ariaLabel,
      "aria-describedby": this.notificationContentId
    }, [type.icon && this.computedSvg.name && h(Icon, {
      name: this.computedSvg.name,
      attrs: this.v3 ? void 0 : {
        name: this.computedSvg.name,
        icon: this.computedSvg.icon
      },
      icon: this.computedSvg.icon,
      "class": "k-notification-status"
    }), h("div", {
      "class": "k-notification-content",
      id: this.notificationContentId,
      attrs: this.v3 ? void 0 : {
        id: this.notificationContentId
      }
    }, [defaultSlot]), closable && h("span", {
      "class": "k-notification-actions"
    }, [h("span", {
      "class": "k-notification-action k-notification-close-action",
      "aria-hidden": true,
      attrs: this.v3 ? void 0 : {
        "aria-hidden": true
      }
    }, [h(Icon, {
      name: "x",
      attrs: this.v3 ? void 0 : {
        name: "x",
        icon: xIcon,
        title: buttonTitle
      },
      icon: xIcon,
      title: buttonTitle,
      onClick: this.handleClick,
      on: this.v3 ? void 0 : {
        "click": this.handleClick
      }
    })])])])]);
  },
  methods: {
    handleClick: function handleClick4(event) {
      this.$emit("close", {
        component: this,
        event
      });
    }
  }
};
var Notification = NotificationVue2;

// node_modules/@progress/kendo-vue-notification/dist/es/NotificationGroup.js
var allVue7 = vue_runtime_esm_bundler_exports;
var gh6 = allVue7.h;
var isV37 = allVue7.version && allVue7.version[0] === "3";
var NotificationGroupVue2 = {
  name: "KendoNotificationGroup",
  // @ts-ignore
  setup: !isV37 ? void 0 : function() {
    var v3 = !!isV37;
    return {
      v3
    };
  },
  // @ts-ignore
  render: function render6(createElement) {
    var h = gh6 || createElement;
    var defaultSlot = getDefaultSlots(this);
    return h("div", {
      "class": "k-notification-group",
      style: {
        alignItems: "center",
        flexWrap: "wrap"
      }
    }, [defaultSlot]);
  }
};
var NotificationGroup = NotificationGroupVue2;
export {
  Notification,
  NotificationGroup
};
//# sourceMappingURL=@progress_kendo-vue-notification.js.map
