import {
  provideLocalizationService
} from "./chunk-TNWINVQ6.js";
import {
  index_esm_exports,
  main_exports
} from "./chunk-NCGOQWHX.js";
import {
  vue_runtime_esm_bundler_exports
} from "./chunk-4NBGFDBU.js";

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/canUseDOM.js
var canUseDOM = Boolean(
  // from fbjs
  typeof window !== "undefined" && window.document && window.document.createElement
);

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/defaultSlots.js
function getDefaultSlots(component) {
  var defaultSlots = component.$slots.default;
  return component.v3 && defaultSlots && typeof defaultSlots === "function" ? defaultSlots() : defaultSlots;
}

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/Draggable.js
var _DraggableVue;
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return (typeof key === "undefined" ? "undefined" : _typeof(key)) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if ((typeof input === "undefined" ? "undefined" : _typeof(input)) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if ((typeof res === "undefined" ? "undefined" : _typeof(res)) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var allVue = vue_runtime_esm_bundler_exports;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === "3";
var DraggableVue2 = (_DraggableVue = {
  // @ts-ignore
  emits: {
    press: null,
    drag: null,
    release: null
  },
  inheritAttrs: false,
  created: function created() {
    this.element = null;
    var draggable = main_exports;
    var dp = typeof draggable !== "undefined" && draggable.Draggable ? draggable : draggable.default;
    this.draggable = new dp.Draggable({
      press: this.press,
      drag: this.drag,
      release: this.release
    });
  },
  // @ts-ignore
  setup: !isV3 ? void 0 : function() {
    var v3 = !!isV3;
    return {
      v3
    };
  },
  mounted: function mounted() {
    if (this.$el) {
      this.element = this.$el.nodeType === 3 ? this.$el.nextElementSibling : this.$el;
      this.draggable.bindTo(this.element);
    }
  },
  destroyed: !!isV3 ? void 0 : function() {
    this.draggable.destroy();
  },
  // @ts-ignore
  unmounted: function unmounted() {
    this.draggable.destroy();
  },
  methods: {
    press: function press(event) {
      if (this.element) {
        this.$emit("press", event, this.element);
      }
    },
    drag: function drag(event) {
      if (this.element) {
        this.$emit("drag", event, this.element);
      }
    },
    release: function release(event) {
      if (this.element) {
        this.$emit("release", event, this.element);
      }
    }
  }
}, _defineProperty(_DraggableVue, "setup", !isV3 ? void 0 : function() {
  var v3 = !!isV3;
  return {
    v3
  };
}), _defineProperty(_DraggableVue, "render", function render(createElement) {
  var h = gh || createElement;
  return getDefaultSlots(this);
}), _DraggableVue);

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/getter.js
var getterCache = {};
getterCache.undefined = function() {
  return void 0;
};

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/setter.js
var setterCache = {};
setterCache.undefined = function(obj) {
  return obj;
};

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/templateRendering.js
var allVue2 = vue_runtime_esm_bundler_exports;
var isV32 = allVue2.version && allVue2.version[0] === "3";

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/validate-package.js
function validatePackage(packageMetadata2) {
  var licensing = index_esm_exports;
  var ls = typeof licensing !== "undefined" && licensing.validatePackage ? licensing : licensing.default;
  if (ls && ls.validatePackage) {
    ls.validatePackage(packageMetadata2);
  } else {
    var message = "License activation failed for ".concat(packageMetadata2.name, "\n");
    message += "The @progress/kendo-licensing script is not loaded.\n";
    message += "See ".concat(packageMetadata2.licensingDocsUrl, " for more information.\n");
    console.warn(message);
  }
}

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/browser-support.service.js
var getDocument = function() {
  return typeof document !== "undefined" ? document : {};
};
var BrowserSupportService = (
  /** @class */
  function() {
    function BrowserSupportService2() {
    }
    Object.defineProperty(BrowserSupportService2.prototype, "scrollbarWidth", {
      get: function() {
        var document2 = getDocument();
        if (!this.scrollbar && document2 && document2.createElement) {
          var div = document2.createElement("div");
          div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
          div.innerHTML = "&nbsp;";
          document2.body.appendChild(div);
          this.scrollbar = div.offsetWidth - div.scrollWidth;
          document2.body.removeChild(div);
        }
        return this.scrollbar;
      },
      enumerable: false,
      configurable: true
    });
    return BrowserSupportService2;
  }()
);

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/icons/FontIcon.js
var allVue3 = vue_runtime_esm_bundler_exports;
var gh2 = allVue3.h;
var isV33 = allVue3.version && allVue3.version[0] === "3";

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/icons/SvgIcon.js
var allVue4 = vue_runtime_esm_bundler_exports;
var gh3 = allVue4.h;
var isV34 = allVue4.version && allVue4.version[0] === "3";

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/icons/Icon.js
var allVue5 = vue_runtime_esm_bundler_exports;
var gh4 = allVue5.h;
var isV35 = allVue5.version && allVue5.version[0] === "3";

// node_modules/@progress/kendo-vue-labels/node_modules/@progress/kendo-vue-common/dist/es/navigation.js
var Navigation = (
  /** @class */
  function() {
    function Navigation2(options) {
      var _this = this;
      this.rovingTabIndex = true;
      this.update = function() {
      };
      this.focusNextIndex = function(target, indexDiff) {
        var all = _this.elements;
        var index = all.indexOf(target) + indexDiff;
        index = index < 0 ? all.length - 1 : index;
        _this.focusElement(all[index % all.length], target);
      };
      this.tabIndex = options.tabIndex || 0;
      this.root = options.root;
      this.selectors = options.selectors;
      this.rovingTabIndex = options.rovingTabIndex !== void 0 ? options.rovingTabIndex : true;
      this.mouseEvents = options.mouseEvents || {};
      this.keyboardEvents = options.keyboardEvents || {};
    }
    Object.defineProperty(Navigation2.prototype, "elements", {
      get: function() {
        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(","))) : [];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "first", {
      get: function() {
        return this.root && this.root.querySelector(this.selectors.join(",")) || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "last", {
      get: function() {
        var all = this.elements;
        return all[all.length - 1] || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation2.prototype, "current", {
      get: function() {
        return this.elements.find(function(el) {
          return el.matches(":focus");
        }) || null;
      },
      enumerable: false,
      configurable: true
    });
    Navigation2.prototype.focusNext = function(target) {
      this.focusNextIndex(target, 1);
    };
    Navigation2.prototype.focusPrevious = function(target) {
      this.focusNextIndex(target, -1);
    };
    Navigation2.prototype.triggerKeyboardEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var key = ev.key === " " ? "Space" : ev.key;
      var eventType = ev.type;
      if (target && this.keyboardEvents[eventType][key]) {
        this.keyboardEvents[eventType][key].call(void 0, target, this, ev);
      }
    };
    Navigation2.prototype.triggerMouseEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var eventType = ev.type;
      if (target) {
        this.mouseEvents[eventType].call(void 0, target, this, ev);
      }
    };
    Navigation2.prototype.focusElement = function(element, previous) {
      if (element) {
        if (previous) {
          if (this.rovingTabIndex) {
            previous.removeAttribute("tabindex");
          }
          previous.classList.remove("k-focus");
        }
        if (this.rovingTabIndex) {
          element.setAttribute("tabindex", String(this.tabIndex));
        }
        element.focus({ preventScroll: true });
      }
    };
    return Navigation2;
  }()
);

// node_modules/@progress/kendo-vue-labels/dist/es/messages/main.js
var _a;
var labelsOptional = "labels.optional";
var messages = (_a = {}, _a[labelsOptional] = "(Optional)", _a);

// node_modules/@progress/kendo-vue-labels/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-vue-labels",
  productName: "Kendo UI for Vue",
  productCodes: ["KENDOUIVUE", "KENDOUICOMPLETE"],
  publishDate: 1693312523,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-vue-ui/my-license/?utm_medium=product&utm_source=kendovue&utm_campaign=kendo-ui-vue-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-vue-labels/dist/es/Label.js
var allVue6 = vue_runtime_esm_bundler_exports;
var gh5 = allVue6.h;
var isV36 = allVue6.version && allVue6.version[0] === "3";
var inject = allVue6.inject;
var LabelVue2 = {
  name: "KendoLabel",
  props: {
    id: String,
    editorId: String,
    editorRef: String,
    editorValid: {
      type: Boolean,
      default: void 0
    },
    editorDisabled: Boolean,
    optional: Boolean
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  created: function created2() {
    validatePackage(packageMetadata);
  },
  computed: {
    labelClassName: function labelClassName() {
      return {
        "k-label": true,
        "k-label-empty": !this.defaultSlots,
        "k-text-error": this.$props.editorValid === false,
        "k-text-disabled": this.$props.editorDisabled === true
      };
    }
  },
  methods: {
    onLabelClick: function onLabelClick(e) {
      if (this.$props.editorRef && this.$props.editorRef.current && !this.$props.editorDisabled) {
        if (this.$props.editorRef.current.focus) {
          e.preventDefault();
          this.$props.editorRef.current.focus();
        }
        var editorActionElement = this.$props.editorRef.current.actionElement;
        if (editorActionElement) {
          e.preventDefault();
          editorActionElement.click();
        }
      }
    }
  },
  // @ts-ignore
  setup: !isV36 ? void 0 : function() {
    var v3 = !!isV36;
    var kendoLocalizationService = inject("kendoLocalizationService", {});
    return {
      v3,
      kendoLocalizationService
    };
  },
  render: function render2(createElement) {
    var h = gh5 || createElement;
    this.defaultSlots = getDefaultSlots(this);
    var ls = provideLocalizationService(this);
    var _a2 = this.$props, id = _a2.id, editorId = _a2.editorId, optional = _a2.optional;
    var localizedOptional = optional ? ls.toLanguageString(labelsOptional, messages[labelsOptional]) : "";
    var optionalElement = localizedOptional && h("span", {
      "class": "k-label-optional"
    }, [localizedOptional]);
    return h("label", {
      id,
      attrs: this.v3 ? void 0 : {
        id,
        "for": editorId
      },
      "for": editorId,
      onClick: this.onLabelClick,
      on: this.v3 ? void 0 : {
        "click": this.onLabelClick
      },
      "class": this.labelClassName
    }, [this.defaultSlots, optionalElement]);
  }
};
var Label = LabelVue2;

// node_modules/@progress/kendo-vue-labels/dist/es/Error.js
var allVue7 = vue_runtime_esm_bundler_exports;
var gh6 = allVue7.h;
var isV37 = allVue7.version && allVue7.version[0] === "3";
var ErrorVue2 = {
  name: "KendoError",
  props: {
    id: String,
    direction: {
      type: String,
      default: "start",
      validator: function validator(value) {
        return ["start", "end"].includes(value);
      }
    }
  },
  created: function created3() {
    validatePackage(packageMetadata);
  },
  computed: {
    errorClassName: function errorClassName() {
      return {
        "k-form-error": true,
        "k-text-start": this.$props.direction === "start",
        "k-text-end": this.$props.direction === "end"
      };
    }
  },
  // @ts-ignore
  setup: !isV37 ? void 0 : function() {
    var v3 = !!isV37;
    return {
      v3
    };
  },
  render: function render3(createElement) {
    var h = gh6 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      id: this.$props.id,
      attrs: this.v3 ? void 0 : {
        id: this.$props.id,
        role: "alert"
      },
      role: "alert",
      "class": this.errorClassName
    }, [defaultSlots]);
  }
};
var Error = ErrorVue2;

// node_modules/@progress/kendo-vue-labels/dist/es/Hint.js
var allVue8 = vue_runtime_esm_bundler_exports;
var gh7 = allVue8.h;
var isV38 = allVue8.version && allVue8.version[0] === "3";
var HintVue2 = {
  name: "KendoHint",
  props: {
    id: String,
    direction: {
      type: String,
      default: "start",
      validator: function validator2(value) {
        return ["start", "end"].includes(value);
      }
    }
  },
  created: function created4() {
    validatePackage(packageMetadata);
  },
  computed: {
    hintClassName: function hintClassName() {
      return {
        "k-form-hint": true,
        "k-text-start": this.$props.direction === "start",
        "k-text-end": this.$props.direction === "end"
      };
    }
  },
  // @ts-ignore
  setup: !isV38 ? void 0 : function() {
    var v3 = !!isV38;
    return {
      v3
    };
  },
  render: function render4(createElement) {
    var h = gh7 || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      id: this.$props.id,
      attrs: this.v3 ? void 0 : {
        id: this.$props.id
      },
      "class": this.hintClassName
    }, [defaultSlots]);
  }
};
var Hint = HintVue2;

// node_modules/@progress/kendo-vue-labels/dist/es/FloatingLabel.js
var allVue9 = vue_runtime_esm_bundler_exports;
var gh8 = allVue9.h;
var isV39 = allVue9.version && allVue9.version[0] === "3";
var inject2 = allVue9.inject;
var FloatingLabelVue2 = {
  name: "KendoFloatingLabel",
  props: {
    label: String,
    labelClass: String,
    editorId: String,
    editorValue: [String, Boolean, Number],
    editorPlaceholder: String,
    editorValid: {
      type: Boolean,
      default: void 0
    },
    editorDisabled: Boolean,
    id: String,
    optional: Boolean,
    focused: {
      type: Boolean,
      default: void 0
    }
  },
  data: function data() {
    return {
      currentFocused: false
    };
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  created: function created5() {
    validatePackage(packageMetadata);
  },
  computed: {
    computedFocused: function computedFocused() {
      return this.$props.focused !== void 0 ? this.$props.focused : this.currentFocused;
    },
    spanClassNames: function spanClassNames() {
      return {
        "k-floating-label-container": true,
        "k-focus": this.computedFocused,
        "k-empty": !this.$props.editorPlaceholder && !this.$props.editorValue && this.$props.editorValue !== 0,
        "k-text-disabled": this.$props.editorDisabled,
        "k-rtl": this.$props.dir === "rtl"
      };
    },
    labelClassNames: function labelClassNames() {
      var _a2;
      return _a2 = {
        "k-label": true,
        "k-text-error": this.$props.editorValid === false,
        "k-text-disabled": this.$props.editorDisabled
      }, _a2[this.$props.labelClass] = this.$props.labelClass, _a2;
    }
  },
  methods: {
    handleFocus: function handleFocus() {
      this.currentFocused = true;
    },
    handleBlur: function handleBlur() {
      this.currentFocused = false;
    }
  },
  // @ts-ignore
  setup: !isV39 ? void 0 : function() {
    var v3 = !!isV39;
    var kendoLocalizationService = inject2("kendoLocalizationService", {});
    return {
      v3,
      kendoLocalizationService
    };
  },
  render: function render5(createElement) {
    var h = gh8 || createElement;
    var defaultSlots = getDefaultSlots(this);
    var _a2 = this.$props, label = _a2.label, editorId = _a2.editorId, id = _a2.id, optional = _a2.optional;
    var ls = provideLocalizationService(this);
    var localizedOptional = optional ? ls.toLanguageString(labelsOptional, messages[labelsOptional]) : "";
    var optionalElement = localizedOptional && h("span", {
      "class": "k-label-optional"
    }, [localizedOptional]);
    return h("span", {
      "class": this.spanClassNames,
      onFocusin: this.handleFocus,
      on: this.v3 ? void 0 : {
        "focusin": this.handleFocus,
        "focusout": this.handleBlur
      },
      onFocusout: this.handleBlur,
      dir: this.$props.dir,
      attrs: this.v3 ? void 0 : {
        dir: this.$props.dir
      }
    }, [defaultSlots, label ? editorId ? h("label", {
      id,
      attrs: this.v3 ? void 0 : {
        id,
        "for": editorId
      },
      "for": editorId,
      "class": this.labelClassNames
    }, [label, optionalElement]) : h("span", {
      id,
      attrs: this.v3 ? void 0 : {
        id
      },
      "class": this.labelClassNames
    }, [label, optionalElement]) : null]);
  }
};
var FloatingLabel = FloatingLabelVue2;

export {
  LabelVue2,
  Label,
  ErrorVue2,
  Error,
  HintVue2,
  Hint,
  FloatingLabelVue2,
  FloatingLabel
};
//# sourceMappingURL=chunk-C5E7VHMO.js.map
