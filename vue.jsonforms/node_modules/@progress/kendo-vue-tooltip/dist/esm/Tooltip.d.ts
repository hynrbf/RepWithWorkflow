import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { TooltipProps } from './TooltipProps';
/**
 * @hidden
 */
interface TooltipData {
    targetElement: HTMLElement | null;
    open: boolean;
    title: string;
}
/**
 * @hidden
 */
export interface TooltipComputed {
    [key: string]: any;
    computedTarget: any;
    computedOpen: any;
}
/**
 * @hidden
 */
export interface TooltipMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface TooltipState {
    top: number;
    left: number;
    openTimeoutId?: any;
    updateIntervalId?: any;
    willOpen: boolean;
}
/**
 * @hidden
 */
export interface TooltipAll extends Vue2type, TooltipMethods, TooltipData, TooltipComputed, TooltipState {
}
/**
 * @hidden
 */
declare let TooltipVue2: ComponentOptions<TooltipAll, DefaultData<TooltipData>, DefaultMethods<TooltipAll>, TooltipComputed, RecordPropsDefinition<TooltipProps>>;
/**
 * @hidden
 */
declare const Tooltip: DefineComponent<TooltipProps, any, TooltipData, TooltipComputed, TooltipMethods, {}, {}, {}, string, TooltipProps, TooltipProps, {}>;
export { Tooltip, TooltipVue2 };
