// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var inject = allVue.inject;
import { DateHeaderCell } from '../../components/DateHeaderCell.js';
import { ZonedDate } from '@progress/kendo-date-math';
/** @hidden */
var DayViewHeadVue2 = {
  name: 'KendoDayViewHead',
  props: {
    timeRanges: Array,
    dateHeaderCell: [String, Function, Object]
  },
  inject: {
    ri: {
      default: null
    },
    ks: {
      default: null
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    return h("div", {
      "class": "k-scheduler-row",
      key: this.ri.groupIndex
    }, [this.timeRanges.map(function (range, rangeIndex) {
      return h(DateHeaderCell, {
        as: this.$props.dateHeaderCell,
        attrs: this.v3 ? undefined : {
          as: this.$props.dateHeaderCell,
          date: ZonedDate.fromLocalDate(new Date(range.zonedEnd.getTime() - (range.zonedEnd.getTime() - range.zonedStart.getTime()) / 2), this.ks.timezone),
          start: range.start,
          end: range.end,
          format: {
            skeleton: 'MEd'
          }
        },
        key: rangeIndex,
        date: ZonedDate.fromLocalDate(new Date(range.zonedEnd.getTime() - (range.zonedEnd.getTime() - range.zonedStart.getTime()) / 2), this.ks.timezone),
        start: range.start,
        end: range.end,
        format: {
          skeleton: 'MEd'
        }
      });
    }, this)]);
  }
};
/** @hidden */
var DayViewHead = DayViewHeadVue2;
export { DayViewHead, DayViewHeadVue2 };