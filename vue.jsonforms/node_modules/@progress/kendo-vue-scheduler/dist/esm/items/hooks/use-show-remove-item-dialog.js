/**
 * Represents the available `action` types for the `SchedulerItemShowRemoveDialogAction` objects.
 *
 * The available actions are:
 * - `SHOW_REMOVE_DIALOG_SET`
 * - `SHOW_REMOVE_DIALOG_OPEN`
 * - `SHOW_REMOVE_DIALOG_CLOSE`
 * - `SHOW_REMOVE_DIALOG_RESET`
 * - `SHOW_REMOVE_DIALOG_TOGGLE`
 */
export var SHOW_REMOVE_DIALOG_ACTION;
(function (SHOW_REMOVE_DIALOG_ACTION) {
  SHOW_REMOVE_DIALOG_ACTION["set"] = "SHOW_REMOVE_DIALOG_SET";
  SHOW_REMOVE_DIALOG_ACTION["open"] = "SHOW_REMOVE_DIALOG_OPEN";
  SHOW_REMOVE_DIALOG_ACTION["close"] = "SHOW_REMOVE_DIALOG_CLOSE";
  SHOW_REMOVE_DIALOG_ACTION["reset"] = "SHOW_REMOVE_DIALOG_RESET";
  SHOW_REMOVE_DIALOG_ACTION["toggle"] = "SHOW_REMOVE_DIALOG_TOGGLE";
})(SHOW_REMOVE_DIALOG_ACTION || (SHOW_REMOVE_DIALOG_ACTION = {}));
/** @hidden */
export var showRemoveDialogReducer = function showRemoveDialogReducer(state, action) {
  switch (action.type) {
    case SHOW_REMOVE_DIALOG_ACTION.reset:
      return false;
    case SHOW_REMOVE_DIALOG_ACTION.set:
      return action.payload;
    case SHOW_REMOVE_DIALOG_ACTION.open:
      return true;
    case SHOW_REMOVE_DIALOG_ACTION.close:
      return false;
    case SHOW_REMOVE_DIALOG_ACTION.toggle:
      return !state;
    default:
      return state;
  }
};
/** @hidden */
export var useShowRemoveDialog = function useShowRemoveDialog(_defaultProp, _prop, _callback) {
  // const [showRemoveDialog, setShowRemoveDialog] = useControlledState<DataItem | null>(defaultProp, prop, callback);
  // const handleShowRemoveDialogAction = (action: SchedulerItemShowRemoveDialogAction) => {
  //     const newShowRemoveDialog = showRemoveDialogReducer(showRemoveDialog, action);
  //     setShowRemoveDialog(newShowRemoveDialog);
  // };
  // return [showRemoveDialog, setShowRemoveDialog, handleShowRemoveDialogAction];
  return [];
};