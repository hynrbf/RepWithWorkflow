import { LocalizationService, IntlService } from '@progress/kendo-vue-intl';
import { DateRange } from './DateRange';
import { Day } from '@progress/kendo-date-math';
import { DataAction } from '../Scheduler';
/**
 * Represents the arguments which are passed to the [dateRange]({% slug api_scheduler_schedulerviewprops %}#toc-daterange) function.
 */
export interface SchedulerViewDateRangeArgs {
    date: Date;
    intl: IntlService;
    timezone?: string;
    numberOfDays?: number;
    workWeekStart?: Day;
    workWeekEnd?: Day;
}
/** @hidden */
export declare type SchedulerViewDateRangeFunction = (args: SchedulerViewDateRangeArgs) => DateRange;
/**
 * Represents the required props which every [SchedulerView]({% slug api_scheduler_schedulerview %}) must accept.
 */
export interface SchedulerViewProps {
    /**
     * The name property is used by the Scheduler to match which view is selected. Every view has a default name.
     */
    name?: string;
    /**
     * The title to be displayed in the view selection list in the Toolbar.
     * If a function is passed, it will receive a [LocalizationService]({ slug api_intl_localizationservice }) as an argument
     */
    title?: string | ((localization: LocalizationService) => string);
    /**
     * Called every time any of the SchedulerView Slots or Items trigger a data action, through editing, deleting or creating new `DataItem`.
     */
    onDataaction?: (action: DataAction) => void;
    /**
     * Specifies the number of days to be shown in the current view.
     */
    numberOfDays?: number;
    /**
     * The long-date format for displaying the
     * selected date in the Scheduler toolbar.
     * Defaults to `{0:Y}`
     * ([more information](https://www.github.com/telerik/kendo-intl/blob/develop/docs/date-formatting/index.md))
     */
    selectedDateFormat?: string;
    /**
     * The short-date format for displaying the
     * selected date in the Scheduler toolbar.
     * Defaults to `{0:Y}`
     * ([more information](https://www.github.com/telerik/kendo-intl/blob/develop/docs/date-formatting/index.md))
     */
    selectedShortDateFormat?: string;
    /**
     * Overrides the `dateRange` calculated by the `Scheduler` component.
     *
     * If a function is passed, an object of type [SchedulerViewDateRangeArgs]({% slug api_scheduler_schedulerviewdaterangeargs %}) will be passed.
     */
    dateRange?: DateRange | ((args: SchedulerViewDateRangeArgs) => DateRange);
    /** @hidden */
    header?: any;
    /** @hidden */
    footer?: any;
    /** @hidden */
    slotDivisions?: number;
    /** @hidden */
    slotDuration?: number;
    /** @hidden */
    workWeekStart?: Day;
    /** @hidden */
    workWeekEnd?: Day;
    /** @hidden */
    format?: string;
    /**
     * Overrides the `dragItem` prop of the Scheduler for the specified view only.
     */
    dragItem?: any;
    /**
     * Overrides the `resizeItem` prop of the Scheduler for the specified view only.
     */
    resizeItem?: any;
}
/** @hidden */
export declare type SchedulerView = any;
