// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { Button } from '@progress/kendo-vue-buttons';
import { DialogActionsBar } from '@progress/kendo-vue-dialogs';
import { cancelIcon, saveIcon } from '@progress/kendo-svg-icons';
/**
 * @hidden
 */
var SchedulerActionButtonsVue2 = {
  name: 'KendoSchedulerActionButtons',
  props: {
    editSaveMessage: String,
    editCancelMessage: String
  },
  inject: {
    kendoForm: {
      default: {}
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;
    var h = gh || createElement;
    return (
      // @ts-ignore  function children
      h(DialogActionsBar, {
        "class": 'k-form-buttons',
        layout: 'start',
        attrs: this.v3 ? undefined : {
          layout: 'start'
        }
      }, this.v3 ? function () {
        return [
        // @ts-ignore  function children
        h(Button, {
          type: "submit",
          attrs: _this.v3 ? undefined : {
            type: "submit",
            themeColor: 'primary',
            disabled: !_this.kendoForm.allowSubmit,
            icon: 'save',
            svgIcon: saveIcon
          },
          themeColor: 'primary',
          disabled: !_this.kendoForm.allowSubmit,
          icon: 'save',
          svgIcon: saveIcon,
          onClick: _this.onSubmit,
          on: _this.v3 ? undefined : {
            "click": _this.onSubmit
          }
        }, _this.v3 ? function () {
          return [_this.editSaveMessage];
        } : [_this.editSaveMessage]),
        // @ts-ignore  function children
        h(Button, {
          onClick: _this.handleCancel,
          on: _this.v3 ? undefined : {
            "click": _this.handleCancel
          },
          icon: 'cancel',
          attrs: _this.v3 ? undefined : {
            icon: 'cancel',
            svgIcon: cancelIcon
          },
          svgIcon: cancelIcon
        }, _this.v3 ? function () {
          return [_this.editCancelMessage];
        } : [_this.editCancelMessage])];
      } : [h(Button, {
        type: "submit",
        attrs: _this.v3 ? undefined : {
          type: "submit",
          themeColor: 'primary',
          disabled: !_this.kendoForm.allowSubmit,
          icon: 'save',
          svgIcon: saveIcon
        },
        themeColor: 'primary',
        disabled: !_this.kendoForm.allowSubmit,
        icon: 'save',
        svgIcon: saveIcon,
        onClick: _this.onSubmit,
        on: _this.v3 ? undefined : {
          "click": _this.onSubmit
        }
      }, _this.v3 ? function () {
        return [_this.editSaveMessage];
      } : [_this.editSaveMessage]), h(Button, {
        onClick: _this.handleCancel,
        on: _this.v3 ? undefined : {
          "click": _this.handleCancel
        },
        icon: 'cancel',
        attrs: _this.v3 ? undefined : {
          icon: 'cancel',
          svgIcon: cancelIcon
        },
        svgIcon: cancelIcon
      }, _this.v3 ? function () {
        return [_this.editCancelMessage];
      } : [_this.editCancelMessage])])
    );
  },
  methods: {
    onSubmit: function onSubmit(e) {
      this.kendoForm.onSubmit(e);
    },
    handleCancel: function handleCancel(e) {
      this.$emit('cancel', e);
    }
  }
};
/**
 * @hidden
 */
var SchedulerActionButtons = SchedulerActionButtonsVue2;
export { SchedulerActionButtons, SchedulerActionButtonsVue2 };