import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
declare type CurrentTimeMarkerProps = {
    updateInterval?: number;
    groupIndex?: number | null;
    vertical?: boolean;
    attachArrow?: HTMLElement;
};
/**
 * @hidden
 */
export interface CurrentTimeMarkerState {
    interval: number | undefined;
    arrowRef: HTMLDivElement | null;
    line: HTMLDivElement | Element | null;
}
/**
 * @hidden
 */
export interface CurrentTimeMarkerComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CurrentTimeMarkerMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CurrentTimeMarkerData {
}
/**
 * @hidden
 */
export interface CurrentTimeMarkerAll extends Vue2type, CurrentTimeMarkerMethods, CurrentTimeMarkerData, CurrentTimeMarkerComputed, CurrentTimeMarkerState {
}
/**
 * @hidden
 */
declare let CurrentTimeMarkerVue2: ComponentOptions<CurrentTimeMarkerAll, DefaultData<CurrentTimeMarkerData>, DefaultMethods<CurrentTimeMarkerAll>, CurrentTimeMarkerComputed, RecordPropsDefinition<CurrentTimeMarkerProps>>;
/**
 * @hidden
 */
declare const CurrentTimeMarker: DefineComponent<CurrentTimeMarkerProps, any, CurrentTimeMarkerData, CurrentTimeMarkerComputed, CurrentTimeMarkerMethods, {}, {}, {}, string, CurrentTimeMarkerProps, CurrentTimeMarkerProps, {}>;
export { CurrentTimeMarker, CurrentTimeMarkerVue2 };
