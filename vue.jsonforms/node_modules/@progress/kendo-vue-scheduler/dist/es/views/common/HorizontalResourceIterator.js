// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var inject = allVue.inject;
import { expandResources, toGroupResources } from './utils';
import { EMPTY_RESOURCE } from '../../constants/main';
import { SchedulerResourceIteratorContext } from '../../context/SchedulerResourceIteratorContext';
import { getDefaultSlots } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
var HorizontalResourceIteratorVue2 = {
  name: 'KendoHorizontalResourceIterator',
  props: {
    group: Object,
    resources: Array,
    nested: Boolean,
    rowContent: [String, Function, Object],
    childRowContent: [String, Function, Object],
    rowContentProps: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var that = this;
    var _a = this.$props,
      nested = _a.nested,
      rowContentProps = _a.rowContentProps;
    var rowContent = this.$props.rowContent || DefaultRowContent;
    var childRowContent = this.$props.childRowContent || rowContent;
    var resources = toGroupResources(this.$props.group, this.$props.resources);
    var defaultSlot = getDefaultSlots(this);
    var groupIndex = 0;
    var renderResources = function renderResources(args) {
      var deepestResources = expandResources(args.resources, args.resources.length - 1);
      var ChildRowContent = args.childRowContent;
      var hasGroups = args.resources.length > 0;
      return h("div", {
        "class": "k-scheduler-row"
      }, [h(ChildRowContent, {
        timeHeaderCell: args.rowContentProps.timeHeaderCell,
        attrs: this.v3 ? undefined : {
          timeHeaderCell: args.rowContentProps.timeHeaderCell,
          isMaster: args.rowContentProps.isMaster,
          isLast: args.rowContentProps.isLast,
          contentSlot: args.rowContentProps.contentSlot,
          resources: args.resources
        },
        isMaster: args.rowContentProps.isMaster,
        isLast: args.rowContentProps.isLast,
        contentSlot: args.rowContentProps.contentSlot,
        resources: args.resources
      }), (deepestResources.length ? deepestResources : EMPTY_RESOURCE).map(function (resource, cGroupIndex) {
        return (
          // @ts-ignore  function children
          h(SchedulerResourceIteratorContext, {
            key: cGroupIndex,
            resource: resource,
            attrs: this.v3 ? undefined : {
              resource: resource,
              groupIndex: hasGroups ? cGroupIndex : 0
            },
            groupIndex: hasGroups ? cGroupIndex : 0
          }, this.v3 ? function () {
            return [getDefaultSlots(that)];
          } : [getDefaultSlots(that)])
        );
      }, this)]);
    };
    var renderResourcesRecursively = function renderResourcesRecursively(args) {
      var children = args.children;
      if (args.groupIndex === args.resources.length) {
        return renderResources.call(this, {
          resources: args.resources,
          rowContent: args.rowContent,
          children: children,
          nested: args.nested,
          groupIndex: args.groupIndex,
          rowContentProps: args.rowContentProps,
          childRowContent: args.childRowContent
        });
      }
      var expandedResources = expandResources(args.resources, args.groupIndex);
      var RowContent = args.rowContent;
      return [args.nested ? h("div", {
        "class": "k-scheduler-row"
      }, [h(RowContent, {
        resources: args.resources,
        attrs: this.v3 ? undefined : {
          resources: args.resources,
          groupIndex: args.groupIndex,
          timeHeaderCell: args.rowContentProps.timeHeaderCell,
          isMaster: args.rowContentProps.isMaster,
          isLast: args.rowContentProps.isLast,
          contentSlot: args.rowContentProps.contentSlot
        },
        groupIndex: args.groupIndex,
        timeHeaderCell: args.rowContentProps.timeHeaderCell,
        isMaster: args.rowContentProps.isMaster,
        isLast: args.rowContentProps.isLast,
        contentSlot: args.rowContentProps.contentSlot
      }), expandedResources.map(function (expandedResource, expandedResourceIndex) {
        return h("div", {
          key: expandedResourceIndex,
          "class": "k-scheduler-cell k-heading-cell"
        }, [expandedResource.text]);
      })]) : h(RowContent, {
        resources: args.resources,
        attrs: this.v3 ? undefined : {
          resources: args.resources,
          groupIndex: args.groupIndex,
          timeHeaderCell: args.rowContentProps.timeHeaderCell,
          isMaster: args.rowContentProps.isMaster,
          isLast: args.rowContentProps.isLast,
          contentSlot: args.rowContentProps.contentSlot
        },
        groupIndex: args.groupIndex,
        timeHeaderCell: args.rowContentProps.timeHeaderCell,
        isMaster: args.rowContentProps.isMaster,
        isLast: args.rowContentProps.isLast,
        contentSlot: args.rowContentProps.contentSlot
      })(expandedResources.map(function (expandedResource, expandedResourceIndex) {
        return h("div", {
          key: expandedResourceIndex,
          "class": "k-scheduler-cell k-heading-cell"
        }, [expandedResource.text]);
      }, this)), renderResourcesRecursively.call(this, {
        resources: resources,
        children: defaultSlot,
        nested: nested,
        rowContent: rowContent,
        rowContentProps: args.rowContentProps,
        childRowContent: childRowContent,
        groupIndex: args.groupIndex + 1
      })];
    };
    return h("div", {
      "class": "k-scheduler-group k-group-horizontal"
    }, [nested ? renderResourcesRecursively.call(this, {
      resources: resources,
      children: defaultSlot,
      nested: nested,
      groupIndex: groupIndex,
      rowContent: rowContent,
      rowContentProps: rowContentProps,
      childRowContent: childRowContent
    }) : renderResources.call(this, {
      resources: resources,
      children: defaultSlot,
      rowContent: rowContent,
      nested: !!nested,
      groupIndex: groupIndex,
      rowContentProps: rowContentProps,
      childRowContent: childRowContent
    })]);
  }
};
/** @hidden */
export var DefaultRowContent = function DefaultRowContent(props) {
  return props.children;
};
/** @hidden */
var HorizontalResourceIterator = HorizontalResourceIteratorVue2;
export { HorizontalResourceIterator, HorizontalResourceIteratorVue2 };