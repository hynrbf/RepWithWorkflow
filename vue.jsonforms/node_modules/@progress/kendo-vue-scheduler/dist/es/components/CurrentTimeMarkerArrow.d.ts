import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
declare type CurrentTimeMarkerArrowProps = {
    updateInterval?: number;
    groupIndex?: number | null;
    vertical?: boolean;
    attachArrow?: HTMLElement;
};
/**
 * @hidden
 */
export interface CurrentTimeMarkerArrowState {
    interval: number | undefined;
    arrowRef: HTMLElement | null;
}
/**
 * @hidden
 */
export interface CurrentTimeMarkerArrowComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CurrentTimeMarkerArrowMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CurrentTimeMarkerArrowData {
}
/**
 * @hidden
 */
export interface CurrentTimeMarkerArrowAll extends Vue2type, CurrentTimeMarkerArrowMethods, CurrentTimeMarkerArrowData, CurrentTimeMarkerArrowComputed, CurrentTimeMarkerArrowState {
}
/** @hidden */
declare let CurrentTimeMarkerArrowVue2: ComponentOptions<CurrentTimeMarkerArrowAll, DefaultData<CurrentTimeMarkerArrowData>, DefaultMethods<CurrentTimeMarkerArrowAll>, CurrentTimeMarkerArrowComputed, RecordPropsDefinition<CurrentTimeMarkerArrowProps>>;
/**
 * @hidden
 */
declare const CurrentTimeMarkerArrow: DefineComponent<CurrentTimeMarkerArrowProps, any, CurrentTimeMarkerArrowData, CurrentTimeMarkerArrowComputed, CurrentTimeMarkerArrowMethods, {}, {}, {}, string, CurrentTimeMarkerArrowProps, CurrentTimeMarkerArrowProps, {}>;
export { CurrentTimeMarkerArrow, CurrentTimeMarkerArrowVue2 };
