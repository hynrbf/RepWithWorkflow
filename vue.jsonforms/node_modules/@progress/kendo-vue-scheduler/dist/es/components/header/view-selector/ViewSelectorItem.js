// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { Button } from '@progress/kendo-vue-buttons';
import { provideLocalizationService } from '@progress/kendo-vue-intl';
import { messages } from '../../../messages/main';
/**
 * @hidden
 */
var ViewSelectorItemVue2 = {
  name: 'KendoViewSelectorItem',
  props: {
    view: Object
  },
  inject: {
    kendoLocalizationService: {
      default: null
    },
    setActiveViewName: {
      default: null
    },
    ks: {
      default: null
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var localization = provideLocalizationService(this);
    var nameTitle = 'scheduler.' + this.$props.view.name + 'ViewTitle';
    var name = localization.toLanguageString(nameTitle, messages[nameTitle]) || this.$props.view.name;
    var title = this.$props.view.title || name;
    return (
      // @ts-ignore function children
      h(Button, {
        "class": "k-toolbar-button",
        role: "button",
        attrs: this.v3 ? undefined : {
          role: "button",
          type: "button",
          tabIndex: -1,
          togglable: true,
          selected: this.$props.view.name === this.ks.activeViewName
        },
        type: "button",
        tabIndex: -1,
        togglable: true,
        selected: this.$props.view.name === this.ks.activeViewName,
        onClick: this.handleClick,
        on: this.v3 ? undefined : {
          "click": this.handleClick
        }
      }, this.v3 ? function () {
        return [title];
      } : [title])
    );
  },
  methods: {
    handleClick: function handleClick() {
      if (this.$props.view.name) {
        this.setActiveViewName(this.$props.view.name);
      }
    }
  }
};
/**
 * @hidden
 */
var ViewSelectorItem = ViewSelectorItemVue2;
export { ViewSelectorItem, ViewSelectorItemVue2 };