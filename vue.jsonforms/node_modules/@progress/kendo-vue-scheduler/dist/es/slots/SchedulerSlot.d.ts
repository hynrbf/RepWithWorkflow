import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { Slot, SchedulerSlotMouseEvent, SchedulerSlotKeyboardEvent, SchedulerSlotFocusEvent, EditableProp } from '../models/main';
/**
 * Represents the props of the Kendo UI for Vue [SchedulerSlot]({% slug api_scheduler_schedulerslotprops %}) component.
 */
export interface SchedulerSlotProps extends Slot {
    /** @hidden */
    refTo: any;
    /** @hidden */
    navDay?: boolean;
    /** @hidden */
    itemsPerSlot?: number;
    /** @hidden */
    formItem?: object;
    /** @hidden */
    viewSlot?: any;
    /** @hidden */
    slotStyle?: any;
    /**
     * Specifies the `id` of the wrapping element of the SchedulerSlot.
     */
    id?: string;
    /**
     * Specifies the `tabIndex` attribute of the wrapping element of the SchedulerSlot.
     *
     * Providing `null` will not apply any `tabIndex` to the element.
     */
    tabIndex?: number;
    /**
     * Overrides the `editable` prop of the `Scheduler` and the active view.
     */
    editable?: EditableProp | boolean;
    /**
     * Specifies if the `day` of the SchedulerSlot(in the current timezone) is between the `workDayStart` and `workDayEnd` of the active view.
     */
    isWorkDay?: boolean;
    /**
     * Specifies if the `time` of the SchedulerSlot(in the current timezone) is between the `workDayStart` and `workDayEnd` of the active view.
     */
    isWorkHour?: boolean;
    /**
     * Sets the selected state of the SchedulerSlot. By default the `k-selected` className is added if `props.selected` is `true`.
     */
    selected?: boolean;
    /**
     * Sets the `row` in the context of the current active view.
     * This property is being used to provide keyboard navigation between the SchedulerSlot components.
     */
    row: number;
    /**
     * Sets the `col` in the context of the current active view.
     * This property is being used to provide keyboard navigation between the SchedulerSlot components.
     */
    col: number;
    /**
     * Called each time the element, or any of its child elements, receive focus.
     */
    onFocus?: (event: SchedulerSlotFocusEvent) => void;
    /**
     * Called each time the element, or any of its child elements, lose focus.
     */
    onBlur?: (event: SchedulerSlotFocusEvent) => void;
    /**
     * Called each time the element, or any of its child elements, is clicked.
     */
    onClick?: (event: SchedulerSlotMouseEvent) => void;
    /**
     * Called each time the element, or any of its child elements receives `mouseenter` event.
     */
    onMouseEnter?: (event: SchedulerSlotMouseEvent) => void;
    /**
     * Called each time the element, or any of its child elements receives `mouseleave` event.
     */
    onMouseLeave?: (event: SchedulerSlotMouseEvent) => void;
    /**
     * Called each time the element, or any of its child elements receives `mouseover` event.
     */
    onMouseOver?: (event: SchedulerSlotMouseEvent) => void;
    /**
     * Called each time the element, or any of its child elements receives `mouseout` event.
     */
    onMouseOut?: (event: SchedulerSlotMouseEvent) => void;
    /**
     * Called each time the element, or any of its child elements, is double-clicked.
     */
    onDoubleClick?: (event: SchedulerSlotMouseEvent) => void;
    /**
     * Called each time a `keydown` event propagates to the wrapping element.
     */
    onKeyDown?: (event: SchedulerSlotKeyboardEvent) => void;
    /**
     * Called each time a `keypress` event propagates to the wrapping element.
     */
    onKeyPress?: (event: SchedulerSlotKeyboardEvent) => void;
    /**
     * Called each time a `keyup` event propagates to the wrapping element.
     */
    onKeyUp?: (event: SchedulerSlotKeyboardEvent) => void;
}
/** @hidden */
export interface SchedulerSlotHandle {
    element: HTMLDivElement | null;
    props: SchedulerSlotProps;
}
/**
 * @hidden
 */
export interface SchedulerSlotState {
}
/**
 * @hidden
 */
export interface SchedulerSlotComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface SchedulerSlotMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface SchedulerSlotData {
}
/**
 * @hidden
 */
export interface SchedulerSlotAll extends Vue2type, SchedulerSlotMethods, SchedulerSlotData, SchedulerSlotComputed, SchedulerSlotState {
}
/**
 * @hidden
 */
declare let SchedulerSlotVue2: ComponentOptions<SchedulerSlotAll, DefaultData<SchedulerSlotData>, DefaultMethods<SchedulerSlotAll>, SchedulerSlotComputed, RecordPropsDefinition<SchedulerSlotProps>>;
/**
 * @hidden
 */
declare const SchedulerSlot: DefineComponent<SchedulerSlotProps, any, SchedulerSlotData, SchedulerSlotComputed, SchedulerSlotMethods, {}, {}, {}, string, SchedulerSlotProps, SchedulerSlotProps, {}>;
export { SchedulerSlot, SchedulerSlotVue2 };
