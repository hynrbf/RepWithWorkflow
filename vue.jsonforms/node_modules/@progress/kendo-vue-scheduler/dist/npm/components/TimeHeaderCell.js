"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimeHeaderCellVue2 = exports.TimeHeaderCell = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var inject = allVue.inject;
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
/**
 * @hidden
 */
var TimeHeaderCellVue2 = {
  name: 'KendoTimeHeaderCell',
  props: {
    as: [String, Function, Object],
    format: {
      type: [String, Object],
      default: 't'
    },
    date: [Date, Object],
    start: [Date, Object],
    end: [Date, Object]
  },
  inject: {
    kendoIntlService: {
      default: null
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    var kendoIntlService = inject('kendoIntlService', {});
    return {
      v3: v3,
      kendoIntlService: kendoIntlService
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var intl = (0, kendo_vue_intl_1.provideIntlService)(this);
    var renderAs;
    var defaultRendering = intl.formatDate(this.$props.date, this.$props.format);
    renderAs = kendo_vue_common_1.getTemplate.call(this, {
      h: h,
      template: this.$props.as,
      defaultRendering: defaultRendering,
      additionalProps: {
        default: defaultRendering,
        date: this.$props.date,
        format: this.$props.format
      }
    });
    return h("div", {
      "class": 'k-scheduler-cell k-heading-cell'
    }, [renderAs]);
  }
};
exports.TimeHeaderCellVue2 = TimeHeaderCellVue2;
/**
 * @hidden
 */
var TimeHeaderCell = TimeHeaderCellVue2;
exports.TimeHeaderCell = TimeHeaderCell;