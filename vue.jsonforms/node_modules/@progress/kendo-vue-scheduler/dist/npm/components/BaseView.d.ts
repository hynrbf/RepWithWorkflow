import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { Range, SchedulerViewProps } from '../models/main';
/**
 * @hidden
 */
export interface BaseViewProps {
    viewProps: SchedulerViewProps;
    baseSlots: any[];
    ranges: Range[];
    id?: string;
    isAgendaView?: Boolean;
}
/**
 * @hidden
 */
export interface BaseViewState {
}
/**
 * @hidden
 */
export interface BaseViewComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface BaseViewMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface BaseViewData {
}
/**
 * @hidden
 */
export interface BaseViewAll extends Vue2type, BaseViewMethods, BaseViewData, BaseViewComputed, BaseViewState {
}
/**
 * @hidden
 */
declare let BaseViewVue2: ComponentOptions<BaseViewAll, DefaultData<BaseViewData>, DefaultMethods<BaseViewAll>, BaseViewComputed, RecordPropsDefinition<BaseViewProps>>;
/**
 * @hidden
 */
declare const BaseView: DefineComponent<{}, any, BaseViewData, BaseViewComputed, BaseViewMethods, {}, {}, {}, string, {}, {}, {}>;
export { BaseView, BaseViewVue2 };
