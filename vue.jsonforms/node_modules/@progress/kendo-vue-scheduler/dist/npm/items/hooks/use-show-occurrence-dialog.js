"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useShowOccurrenceDialog = exports.showOccurrenceDialogReducer = exports.SHOW_OCCURRENCE_DIALOG_ACTION = void 0;
/**
 * Represents the available `action` types for the `SchedulerItemShowOccurrenceDialogAction` objects.
 *
 * The available actions are:
 * - `SHOW_OCCURRENCE_DIALOG_SET`
 * - `SHOW_OCCURRENCE_DIALOG_OPEN`
 * - `SHOW_OCCURRENCE_DIALOG_CLOSE`
 * - `SHOW_OCCURRENCE_DIALOG_RESET`
 * - `SHOW_OCCURRENCE_DIALOG_TOGGLE`
 */
var SHOW_OCCURRENCE_DIALOG_ACTION;
(function (SHOW_OCCURRENCE_DIALOG_ACTION) {
  SHOW_OCCURRENCE_DIALOG_ACTION["set"] = "SHOW_OCCURRENCE_DIALOG_SET";
  SHOW_OCCURRENCE_DIALOG_ACTION["open"] = "SHOW_OCCURRENCE_DIALOG_OPEN";
  SHOW_OCCURRENCE_DIALOG_ACTION["close"] = "SHOW_OCCURRENCE_DIALOG_CLOSE";
  SHOW_OCCURRENCE_DIALOG_ACTION["reset"] = "SHOW_OCCURRENCE_DIALOG_RESET";
  SHOW_OCCURRENCE_DIALOG_ACTION["toggle"] = "SHOW_OCCURRENCE_DIALOG_TOGGLE";
})(SHOW_OCCURRENCE_DIALOG_ACTION = exports.SHOW_OCCURRENCE_DIALOG_ACTION || (exports.SHOW_OCCURRENCE_DIALOG_ACTION = {}));
/** @hidden */
var showOccurrenceDialogReducer = function showOccurrenceDialogReducer(state, action) {
  switch (action.type) {
    case SHOW_OCCURRENCE_DIALOG_ACTION.reset:
      return false;
    case SHOW_OCCURRENCE_DIALOG_ACTION.set:
      return action.payload;
    case SHOW_OCCURRENCE_DIALOG_ACTION.open:
      return true;
    case SHOW_OCCURRENCE_DIALOG_ACTION.close:
      return false;
    case SHOW_OCCURRENCE_DIALOG_ACTION.toggle:
      return !state;
    default:
      return state;
  }
};
exports.showOccurrenceDialogReducer = showOccurrenceDialogReducer;
/** @hidden */
var useShowOccurrenceDialog = function useShowOccurrenceDialog(_defaultProp, _prop, _callback) {
  // const [showOccurrenceDialog, setShowOccurrenceDialog] = 
  // useControlledState<DataItem | null>(defaultProp, prop, callback);
  // const handleShowOccurrenceDialogAction = (action: SchedulerItemShowOccurrenceDialogAction) => {
  //     const newShowOccurrenceDialog = showOccurrenceDialogReducer(showOccurrenceDialog, action);
  //     setShowOccurrenceDialog(newShowOccurrenceDialog);
  // };
  // return [showOccurrenceDialog, setShowOccurrenceDialog, handleShowOccurrenceDialogAction];
  return [];
};
exports.useShowOccurrenceDialog = useShowOccurrenceDialog;