"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RecurrenceEditorVue2 = exports.RecurrenceEditor = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var kendo_vue_form_1 = require("@progress/kendo-vue-form");
var main_1 = require("../messages/main");
var kendo_recurrence_1 = require("@progress/kendo-recurrence");
var kendo_date_math_1 = require("@progress/kendo-date-math");
var RecurrenceFrequencyEditor_1 = require("./RecurrenceFrequencyEditor");
var RecurrenceRepeatOnWeekEditor_1 = require("./RecurrenceRepeatOnWeekEditor");
var common_1 = require("./common");
var kendo_vue_labels_1 = require("@progress/kendo-vue-labels");
var kendo_vue_inputs_1 = require("@progress/kendo-vue-inputs");
var kendo_vue_dropdowns_1 = require("@progress/kendo-vue-dropdowns");
var kendo_vue_dateinputs_1 = require("@progress/kendo-vue-dateinputs");
/**
 * @hidden
 */
var RecurrenceEditorVue2 = {
  name: 'KendoRecurrenceEditor',
  // @ts-ignore
  emits: {
    change: null
  },
  props: {
    name: String,
    value: {
      type: String,
      default: ''
    },
    start: Date,
    timezone: String
  },
  inject: {
    ks: {
      default: null
    },
    kendoLocalizationService: {
      default: null
    },
    kendoIntlService: {
      default: null
    }
  },
  computed: {
    rrule: function rrule() {
      return (0, common_1.getRule)(this.$props.value);
    },
    frequencies: function frequencies() {
      return (0, common_1.getFrequencies)(this.localizeMessage);
    },
    frequency: function frequency() {
      return (0, common_1.getFrequency)(this.rrule);
    },
    extendedWeekDays: function extendedWeekDays() {
      return (0, common_1.getExtendedWeekDays)(this.intl, this.localizeMessage);
    },
    weekDay: function weekDay() {
      return (0, common_1.getWeekDay)(this.extendedWeekDays, this.rrule, this.$props.start);
    },
    months: function months() {
      return (0, common_1.getMonths)(this.intl);
    },
    month: function month() {
      return (0, common_1.getMonth)(this.months, this.rrule);
    },
    offsets: function offsets() {
      return (0, common_1.getOffsets)(this.localizeMessage);
    },
    offset: function offset() {
      return (0, common_1.getOffset)(this.offsets, this.rrule);
    },
    endRule: function endRule() {
      return (0, common_1.getEndRule)(this.rrule);
    },
    monthDay: function monthDay() {
      return (0, common_1.getMonthDay)(this.rrule, this.$props.start);
    },
    until: function until() {
      return (0, common_1.getUntil)(this.rrule);
    },
    weekDays: function weekDays() {
      return (0, common_1.getWeekDays)(this.intl);
    },
    repeatOnRule: function repeatOnRule() {
      return (0, common_1.getRepeatOnRule)(this.rrule);
    }
  },
  data: function data() {
    return {
      defaultCount: 1,
      defaultUntil: kendo_date_math_1.ZonedDate.fromUTCDate(this.$props.start)
    };
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this2 = this;
    var h = gh || createElement;
    var that = this;
    this.intl = (0, kendo_vue_intl_1.provideIntlService)(this);
    this.localization = (0, kendo_vue_intl_1.provideLocalizationService)(this);
    var timezone = this.ks.timezone;
    var itemStyle = {
      display: 'flex',
      alignItems: 'center',
      minHeight: 30
    };
    var monthlyWeekDay = function monthlyWeekDay() {
      return [h(kendo_vue_dropdowns_1.DropDownList, {
        key: "weekday-offset",
        textField: "text",
        attrs: this.v3 ? undefined : {
          textField: "text",
          dataItemKey: "value",
          disabled: this.repeatOnRule !== 'weekday',
          dataItems: this.offsets,
          value: this.offset
        },
        dataItemKey: "value",
        disabled: this.repeatOnRule !== 'weekday',
        dataItems: this.offsets,
        value: this.offset,
        onChange: this.handleOffsetChange,
        on: this.v3 ? undefined : {
          "change": this.handleOffsetChange
        },
        style: {
          width: 'auto'
        }
      }), h(kendo_vue_dropdowns_1.DropDownList, {
        key: "weekday-value",
        disabled: this.repeatOnRule !== 'weekday',
        attrs: this.v3 ? undefined : {
          disabled: this.repeatOnRule !== 'weekday',
          value: this.weekDay,
          dataItem: this.extendedWeekDays,
          textField: "text",
          dataItemKey: "value"
        },
        value: this.weekDay,
        dataItem: this.extendedWeekDays,
        onChange: this.handleWeekDayChange,
        on: this.v3 ? undefined : {
          "change": this.handleWeekDayChange
        },
        textField: "text",
        dataItemKey: "value",
        style: {
          width: 'auto'
        }
      })];
    };
    var monthlyMonthDay = function monthlyMonthDay() {
      return h(kendo_vue_inputs_1.NumericTextBox, {
        key: 'weekday-day',
        min: 1,
        attrs: this.v3 ? undefined : {
          min: 1,
          max: 31,
          disabled: this.repeatOnRule !== 'monthday',
          value: this.rrule && this.rrule.byMonthDay && this.rrule.byMonthDay[0],
          width: 'auto'
        },
        max: 31,
        disabled: this.repeatOnRule !== 'monthday',
        value: this.rrule && this.rrule.byMonthDay && this.rrule.byMonthDay[0],
        onChange: this.handleMonthDayChange,
        on: this.v3 ? undefined : {
          "change": this.handleMonthDayChange
        },
        width: 'auto'
      });
    };
    var yearlyMonthDay = function yearlyMonthDay() {
      return [h(kendo_vue_dropdowns_1.DropDownList, {
        key: "monthday-month",
        disabled: this.repeatOnRule !== 'monthday',
        attrs: this.v3 ? undefined : {
          disabled: this.repeatOnRule !== 'monthday',
          value: this.month,
          dataItems: this.months,
          textField: "text",
          dataItemKey: "value"
        },
        value: this.month,
        dataItems: this.months,
        textField: "text",
        dataItemKey: "value",
        onChange: this.handleMonthChange,
        on: this.v3 ? undefined : {
          "change": this.handleMonthChange
        },
        style: {
          width: 'auto'
        }
      }), h(kendo_vue_inputs_1.NumericTextBox, {
        key: "monthday-day",
        min: 1,
        attrs: this.v3 ? undefined : {
          min: 1,
          max: 31,
          disabled: this.repeatOnRule !== 'monthday',
          value: this.monthDay
        },
        max: 31,
        disabled: this.repeatOnRule !== 'monthday',
        value: this.monthDay,
        onChange: this.handleMonthDayChange,
        on: this.v3 ? undefined : {
          "change": this.handleMonthDayChange
        },
        style: {
          width: 'auto'
        }
      })];
    };
    var yearlyWeekDay = function yearlyWeekDay() {
      return [h(kendo_vue_dropdowns_1.DropDownList, {
        key: "yearly-weekday-offset",
        textField: "text",
        attrs: this.v3 ? undefined : {
          textField: "text",
          dataItemKey: "value",
          disabled: this.repeatOnRule !== 'weekday',
          dataItems: this.offsets,
          value: this.offset
        },
        dataItemKey: "value",
        disabled: this.repeatOnRule !== 'weekday',
        dataItems: this.offsets,
        value: this.offset,
        onChange: this.handleOffsetChange,
        on: this.v3 ? undefined : {
          "change": this.handleOffsetChange
        },
        style: {
          width: 'auto'
        }
      }), h(kendo_vue_dropdowns_1.DropDownList, {
        key: "yearly-weekday-day",
        textField: "text",
        attrs: this.v3 ? undefined : {
          textField: "text",
          dataItemKey: "value",
          disabled: this.repeatOnRule !== 'weekday',
          value: this.weekDay,
          dataItems: this.extendedWeekDays
        },
        dataItemKey: "value",
        disabled: this.repeatOnRule !== 'weekday',
        value: this.weekDay,
        dataItems: this.extendedWeekDays,
        onChange: this.handleWeekDayChange,
        on: this.v3 ? undefined : {
          "change": this.handleWeekDayChange
        },
        style: {
          width: 'auto'
        }
      }), h("span", {
        key: "yearly-weekday-of-label"
      }, [this.localizeMessage(main_1.recurrenceEditorYearlyOf, true)]), h(kendo_vue_dropdowns_1.DropDownList, {
        key: "yearly-weekday-month",
        textField: "text",
        attrs: this.v3 ? undefined : {
          textField: "text",
          dataItemKey: "value",
          disabled: this.repeatOnRule !== 'weekday',
          value: this.month,
          dataItems: this.months
        },
        dataItemKey: "value",
        disabled: this.repeatOnRule !== 'weekday',
        value: this.month,
        dataItems: this.months,
        onChange: this.handleMonthChange,
        on: this.v3 ? undefined : {
          "change": this.handleMonthChange
        },
        style: {
          width: 'auto'
        }
      })];
    };
    var count = function count() {
      var _this = this;
      return [h(kendo_vue_inputs_1.NumericTextBox, {
        key: "endrule-after-editor",
        id: "k-endrule-after",
        attrs: this.v3 ? undefined : {
          id: "k-endrule-after",
          min: 1,
          width: '70px',
          value: this.endRule === 'count' ? this.rrule.count : this.defaultCount,
          disabled: this.endRule !== 'count'
        },
        min: 1,
        width: '70px',
        value: this.endRule === 'count' ? this.rrule.count : this.defaultCount,
        onChange: this.handleCountChange,
        on: this.v3 ? undefined : {
          "change": this.handleCountChange
        },
        disabled: this.endRule !== 'count'
      }),
      // @ts-ignore function children
      h(kendo_vue_labels_1.Label, {
        key: "endrule-after-label",
        "class": 'k-radio-label',
        editorId: 'k-endrule-after',
        attrs: this.v3 ? undefined : {
          editorId: 'k-endrule-after'
        }
      }, this.v3 ? function () {
        return [_this.localizeMessage(main_1.recurrenceEditorEndOccurrence, true)];
      } : [_this.localizeMessage(main_1.recurrenceEditorEndOccurrence, true)])];
    };
    var dpUntil = function dpUntil() {
      return (
        // @ts-ignore 
        h(kendo_vue_dateinputs_1.DatePicker, {
          key: "k-endrule-until-editor",
          id: "k-endrule-until",
          attrs: this.v3 ? undefined : {
            id: "k-endrule-until",
            disabled: that.endRule !== 'until',
            min: that.$props.start,
            value: that.endRule === 'until' ? that.until : (0, kendo_date_math_1.toLocalDate)(that.defaultUntil)
          },
          disabled: that.endRule !== 'until',
          min: that.$props.start,
          value: that.endRule === 'until' ? that.until : (0, kendo_date_math_1.toLocalDate)(that.defaultUntil),
          onChange: that.handleUntilChange,
          on: this.v3 ? undefined : {
            "change": that.handleUntilChange
          },
          style: {
            width: 'auto'
          }
        })
      );
    };
    return (
      // fragment
      h("div", [
      // @ts-ignore function children
      h(kendo_vue_form_1.FieldWrapper, this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_labels_1.Label, {
          "class": 'k-form-label'
        }, _this2.v3 ? function () {
          return [_this2.localization.toLanguageString(main_1.recurrenceEditorRepeat, main_1.messages[main_1.recurrenceEditorRepeat])];
        } : [_this2.localization.toLanguageString(main_1.recurrenceEditorRepeat, main_1.messages[main_1.recurrenceEditorRepeat])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(RecurrenceFrequencyEditor_1.RecurrenceFrequencyEditor, {
          value: _this2.frequency,
          attrs: _this2.v3 ? undefined : {
            value: _this2.frequency,
            dataItems: _this2.frequencies
          },
          dataItems: _this2.frequencies,
          onChange: _this2.handleFrequencyChange,
          on: _this2.v3 ? undefined : {
            "change": _this2.handleFrequencyChange
          }
        })])];
      } : [h(kendo_vue_labels_1.Label, {
        "class": 'k-form-label'
      }, _this2.v3 ? function () {
        return [_this2.localization.toLanguageString(main_1.recurrenceEditorRepeat, main_1.messages[main_1.recurrenceEditorRepeat])];
      } : [_this2.localization.toLanguageString(main_1.recurrenceEditorRepeat, main_1.messages[main_1.recurrenceEditorRepeat])]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(RecurrenceFrequencyEditor_1.RecurrenceFrequencyEditor, {
        value: _this2.frequency,
        attrs: _this2.v3 ? undefined : {
          value: _this2.frequency,
          dataItems: _this2.frequencies
        },
        dataItems: _this2.frequencies,
        onChange: _this2.handleFrequencyChange,
        on: _this2.v3 ? undefined : {
          "change": _this2.handleFrequencyChange
        }
      })])]), this.frequency !== 'never' &&
      // @ts-ignore function children
      h(kendo_vue_form_1.FieldWrapper, this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_labels_1.Label, {
          editorId: "interval-editor",
          attrs: _this2.v3 ? undefined : {
            editorId: "interval-editor"
          },
          "class": 'k-form-label'
        }, _this2.v3 ? function () {
          return [_this2.localizeMessage((0, common_1.capitalize)(_this2.frequency) + 'RepeatEvery')];
        } : [_this2.localizeMessage((0, common_1.capitalize)(_this2.frequency) + 'RepeatEvery')]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_inputs_1.NumericTextBox, {
          min: 1,
          attrs: _this2.v3 ? undefined : {
            min: 1,
            step: 1,
            defaultValue: 1,
            value: _this2.rrule.interval,
            id: "interval-editor"
          },
          step: 1,
          defaultValue: 1,
          value: _this2.rrule.interval,
          onChange: _this2.handleIntervalChange,
          on: _this2.v3 ? undefined : {
            "change": _this2.handleIntervalChange
          },
          id: "interval-editor"
        }),
        // @ts-ignore function children
        h(kendo_vue_labels_1.Label, {
          editorId: "interval-editor",
          attrs: _this2.v3 ? undefined : {
            editorId: "interval-editor"
          }
        }, _this2.v3 ? function () {
          return [_this2.localizeMessage((0, common_1.capitalize)(_this2.frequency) + 'Interval')];
        } : [_this2.localizeMessage((0, common_1.capitalize)(_this2.frequency) + 'Interval')])])];
      } : [h(kendo_vue_labels_1.Label, {
        editorId: "interval-editor",
        attrs: _this2.v3 ? undefined : {
          editorId: "interval-editor"
        },
        "class": 'k-form-label'
      }, _this2.v3 ? function () {
        return [_this2.localizeMessage((0, common_1.capitalize)(_this2.frequency) + 'RepeatEvery')];
      } : [_this2.localizeMessage((0, common_1.capitalize)(_this2.frequency) + 'RepeatEvery')]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_inputs_1.NumericTextBox, {
        min: 1,
        attrs: _this2.v3 ? undefined : {
          min: 1,
          step: 1,
          defaultValue: 1,
          value: _this2.rrule.interval,
          id: "interval-editor"
        },
        step: 1,
        defaultValue: 1,
        value: _this2.rrule.interval,
        onChange: _this2.handleIntervalChange,
        on: _this2.v3 ? undefined : {
          "change": _this2.handleIntervalChange
        },
        id: "interval-editor"
      }), h(kendo_vue_labels_1.Label, {
        editorId: "interval-editor",
        attrs: _this2.v3 ? undefined : {
          editorId: "interval-editor"
        }
      }, _this2.v3 ? function () {
        return [_this2.localizeMessage((0, common_1.capitalize)(_this2.frequency) + 'Interval')];
      } : [_this2.localizeMessage((0, common_1.capitalize)(_this2.frequency) + 'Interval')])])]), this.frequency === 'weekly' &&
      // @ts-ignore function children
      h(kendo_vue_form_1.FieldWrapper, this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_labels_1.Label, {
          "class": 'k-form-label'
        }, _this2.v3 ? function () {
          return [_this2.localizeMessage(main_1.recurrenceEditorWeeklyRepeatOn, true)];
        } : [_this2.localizeMessage(main_1.recurrenceEditorWeeklyRepeatOn, true)]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(RecurrenceRepeatOnWeekEditor_1.RecurrenceRepeatOnWeekEditor, {
          dataItems: _this2.weekDays,
          attrs: _this2.v3 ? undefined : {
            dataItems: _this2.weekDays,
            value: (_this2.rrule.byWeekDay || []).map(function (_a) {
              var day = _a.day;
              return day;
            })
          },
          value: (_this2.rrule.byWeekDay || []).map(function (_a) {
            var day = _a.day;
            return day;
          }),
          onChange: _this2.handleWeekDaysChange,
          on: _this2.v3 ? undefined : {
            "change": _this2.handleWeekDaysChange
          }
        })])];
      } : [h(kendo_vue_labels_1.Label, {
        "class": 'k-form-label'
      }, _this2.v3 ? function () {
        return [_this2.localizeMessage(main_1.recurrenceEditorWeeklyRepeatOn, true)];
      } : [_this2.localizeMessage(main_1.recurrenceEditorWeeklyRepeatOn, true)]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(RecurrenceRepeatOnWeekEditor_1.RecurrenceRepeatOnWeekEditor, {
        dataItems: _this2.weekDays,
        attrs: _this2.v3 ? undefined : {
          dataItems: _this2.weekDays,
          value: (_this2.rrule.byWeekDay || []).map(function (_a) {
            var day = _a.day;
            return day;
          })
        },
        value: (_this2.rrule.byWeekDay || []).map(function (_a) {
          var day = _a.day;
          return day;
        }),
        onChange: _this2.handleWeekDaysChange,
        on: _this2.v3 ? undefined : {
          "change": _this2.handleWeekDaysChange
        }
      })])]), this.frequency === 'monthly' &&
      // @ts-ignore function children
      h(kendo_vue_form_1.FieldWrapper, this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_labels_1.Label, {
          key: "recurrence-repeat-on-monthly-label",
          "class": 'k-form-label'
        }, _this2.v3 ? function () {
          return [_this2.localizeMessage(main_1.recurrenceEditorMonthlyRepeatOn, true)];
        } : [_this2.localizeMessage(main_1.recurrenceEditorMonthlyRepeatOn, true)]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_inputs_1.RadioGroup, {
          value: _this2.repeatOnRule,
          attrs: _this2.v3 ? undefined : {
            value: _this2.repeatOnRule,
            dataItems: [{
              value: 'monthday',
              style: itemStyle,
              label: _this2.localizeMessage(main_1.recurrenceEditorMonthlyDay, true),
              content: monthlyMonthDay.call(_this2)
            }, {
              value: 'weekday',
              style: itemStyle,
              label: ' ',
              content: monthlyWeekDay.call(_this2)
            }]
          },
          onChange: _this2.handleRepeatOnRuleChange,
          on: _this2.v3 ? undefined : {
            "change": _this2.handleRepeatOnRuleChange
          },
          "class": "k-reset",
          dataItems: [{
            value: 'monthday',
            style: itemStyle,
            label: _this2.localizeMessage(main_1.recurrenceEditorMonthlyDay, true),
            content: monthlyMonthDay.call(_this2)
          }, {
            value: 'weekday',
            style: itemStyle,
            label: ' ',
            content: monthlyWeekDay.call(_this2)
          }]
        })])];
      } : [h(kendo_vue_labels_1.Label, {
        key: "recurrence-repeat-on-monthly-label",
        "class": 'k-form-label'
      }, _this2.v3 ? function () {
        return [_this2.localizeMessage(main_1.recurrenceEditorMonthlyRepeatOn, true)];
      } : [_this2.localizeMessage(main_1.recurrenceEditorMonthlyRepeatOn, true)]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_inputs_1.RadioGroup, {
        value: _this2.repeatOnRule,
        attrs: _this2.v3 ? undefined : {
          value: _this2.repeatOnRule,
          dataItems: [{
            value: 'monthday',
            style: itemStyle,
            label: _this2.localizeMessage(main_1.recurrenceEditorMonthlyDay, true),
            content: monthlyMonthDay.call(_this2)
          }, {
            value: 'weekday',
            style: itemStyle,
            label: ' ',
            content: monthlyWeekDay.call(_this2)
          }]
        },
        onChange: _this2.handleRepeatOnRuleChange,
        on: _this2.v3 ? undefined : {
          "change": _this2.handleRepeatOnRuleChange
        },
        "class": "k-reset",
        dataItems: [{
          value: 'monthday',
          style: itemStyle,
          label: _this2.localizeMessage(main_1.recurrenceEditorMonthlyDay, true),
          content: monthlyMonthDay.call(_this2)
        }, {
          value: 'weekday',
          style: itemStyle,
          label: ' ',
          content: monthlyWeekDay.call(_this2)
        }]
      })])]), this.frequency === 'yearly' &&
      // @ts-ignore function children
      h(kendo_vue_form_1.FieldWrapper, this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_labels_1.Label, {
          "class": 'k-form-label'
        }, _this2.v3 ? function () {
          return [_this2.localizeMessage(main_1.recurrenceEditorYearlyRepeatOn, true)];
        } : [_this2.localizeMessage(main_1.recurrenceEditorYearlyRepeatOn, true)]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_inputs_1.RadioGroup, {
          value: _this2.repeatOnRule,
          attrs: _this2.v3 ? undefined : {
            value: _this2.repeatOnRule,
            dataItems: [{
              value: 'monthday',
              label: ' ',
              style: itemStyle,
              content: yearlyMonthDay.call(_this2)
            }, {
              value: 'weekday',
              label: ' ',
              style: itemStyle,
              content: yearlyWeekDay.call(_this2)
            }]
          },
          onChange: _this2.handleRepeatOnRuleChange,
          on: _this2.v3 ? undefined : {
            "change": _this2.handleRepeatOnRuleChange
          },
          "class": "k-reset",
          dataItems: [{
            value: 'monthday',
            label: ' ',
            style: itemStyle,
            content: yearlyMonthDay.call(_this2)
          }, {
            value: 'weekday',
            label: ' ',
            style: itemStyle,
            content: yearlyWeekDay.call(_this2)
          }]
        })])];
      } : [h(kendo_vue_labels_1.Label, {
        "class": 'k-form-label'
      }, _this2.v3 ? function () {
        return [_this2.localizeMessage(main_1.recurrenceEditorYearlyRepeatOn, true)];
      } : [_this2.localizeMessage(main_1.recurrenceEditorYearlyRepeatOn, true)]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_inputs_1.RadioGroup, {
        value: _this2.repeatOnRule,
        attrs: _this2.v3 ? undefined : {
          value: _this2.repeatOnRule,
          dataItems: [{
            value: 'monthday',
            label: ' ',
            style: itemStyle,
            content: yearlyMonthDay.call(_this2)
          }, {
            value: 'weekday',
            label: ' ',
            style: itemStyle,
            content: yearlyWeekDay.call(_this2)
          }]
        },
        onChange: _this2.handleRepeatOnRuleChange,
        on: _this2.v3 ? undefined : {
          "change": _this2.handleRepeatOnRuleChange
        },
        "class": "k-reset",
        dataItems: [{
          value: 'monthday',
          label: ' ',
          style: itemStyle,
          content: yearlyMonthDay.call(_this2)
        }, {
          value: 'weekday',
          label: ' ',
          style: itemStyle,
          content: yearlyWeekDay.call(_this2)
        }]
      })])]), this.frequency !== 'never' &&
      // @ts-ignore function children
      h(kendo_vue_form_1.FieldWrapper, this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_labels_1.Label, {
          "class": 'k-form-label'
        }, _this2.v3 ? function () {
          return [_this2.localizeMessage(main_1.recurrenceEditorEndLabel, true)];
        } : [_this2.localizeMessage(main_1.recurrenceEditorEndLabel, true)]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_inputs_1.RadioGroup, {
          value: _this2.endRule,
          attrs: _this2.v3 ? undefined : {
            value: _this2.endRule,
            dataItems: [{
              value: 'never',
              style: itemStyle,
              label: _this2.localizeMessage(main_1.recurrenceEditorEndNever, true)
            }, {
              value: 'count',
              style: itemStyle,
              label: _this2.localizeMessage(main_1.recurrenceEditorEndAfter, true),
              content: count.call(_this2)
            }, {
              value: 'until',
              style: itemStyle,
              label: _this2.localizeMessage(main_1.recurrenceEditorEndOn, true),
              content: dpUntil.call(_this2)
            }]
          },
          onChange: _this2.handleEndRuleChange,
          on: _this2.v3 ? undefined : {
            "change": _this2.handleEndRuleChange
          },
          dataItems: [{
            value: 'never',
            style: itemStyle,
            label: _this2.localizeMessage(main_1.recurrenceEditorEndNever, true)
          }, {
            value: 'count',
            style: itemStyle,
            label: _this2.localizeMessage(main_1.recurrenceEditorEndAfter, true),
            content: count.call(_this2)
          }, {
            value: 'until',
            style: itemStyle,
            label: _this2.localizeMessage(main_1.recurrenceEditorEndOn, true),
            content: dpUntil.call(_this2)
          }]
        })])];
      } : [h(kendo_vue_labels_1.Label, {
        "class": 'k-form-label'
      }, _this2.v3 ? function () {
        return [_this2.localizeMessage(main_1.recurrenceEditorEndLabel, true)];
      } : [_this2.localizeMessage(main_1.recurrenceEditorEndLabel, true)]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_inputs_1.RadioGroup, {
        value: _this2.endRule,
        attrs: _this2.v3 ? undefined : {
          value: _this2.endRule,
          dataItems: [{
            value: 'never',
            style: itemStyle,
            label: _this2.localizeMessage(main_1.recurrenceEditorEndNever, true)
          }, {
            value: 'count',
            style: itemStyle,
            label: _this2.localizeMessage(main_1.recurrenceEditorEndAfter, true),
            content: count.call(_this2)
          }, {
            value: 'until',
            style: itemStyle,
            label: _this2.localizeMessage(main_1.recurrenceEditorEndOn, true),
            content: dpUntil.call(_this2)
          }]
        },
        onChange: _this2.handleEndRuleChange,
        on: _this2.v3 ? undefined : {
          "change": _this2.handleEndRuleChange
        },
        dataItems: [{
          value: 'never',
          style: itemStyle,
          label: _this2.localizeMessage(main_1.recurrenceEditorEndNever, true)
        }, {
          value: 'count',
          style: itemStyle,
          label: _this2.localizeMessage(main_1.recurrenceEditorEndAfter, true),
          content: count.call(_this2)
        }, {
          value: 'until',
          style: itemStyle,
          label: _this2.localizeMessage(main_1.recurrenceEditorEndOn, true),
          content: dpUntil.call(_this2)
        }]
      })])])])
    );
  },
  methods: {
    localizeMessage: function localizeMessage(baseMassage, removePrepend) {
      var message = removePrepend ? baseMassage : 'scheduler.recurrenceEditor' + baseMassage;
      return this.localization.toLanguageString(message, main_1.messages[message]);
    },
    onChangeHandler: function onChangeHandler(newRrule) {
      if (newRrule.freq === 'never') {
        this.$emit('change', {
          value: null
        });
      } else {
        if (newRrule.weekStart === undefined) {
          newRrule.weekStart = this.intl.firstDay();
        }
        this.$emit('change', {
          value: (0, kendo_recurrence_1.serializeRule)(newRrule, this.$props.timezone)
        });
      }
    },
    handleFrequencyChange: function handleFrequencyChange(newFreq) {
      var newRrule = {};
      newRrule.freq = newFreq;
      newRrule.interval = 1;
      if (newFreq === 'weekly') {
        newRrule.byWeekDay = [{
          day: kendo_date_math_1.ZonedDate.fromLocalDate(this.$props.start, this.timezone).getDay(),
          offset: 0
        }];
      }
      if (newFreq === 'monthly' || newFreq === 'yearly') {
        newRrule.byMonthDay = [this.$props.start.getDate()];
      }
      if (newFreq === 'yearly') {
        newRrule.byMonth = [this.$props.start.getMonth() + 1];
      }
      this.onChangeHandler(newRrule);
    },
    handleIntervalChange: function handleIntervalChange(event) {
      var newInterval = event.value;
      this.onChangeHandler(Object.assign({}, this.rrule, {
        interval: newInterval
      }));
    },
    handleCountChange: function handleCountChange(event) {
      var newCount = event.value;
      this.onChangeHandler(Object.assign({}, this.rrule, {
        count: newCount
      }));
      if (newCount !== null) {
        this.defaultCount = newCount;
      }
    },
    handleUntilChange: function handleUntilChange(event) {
      var newUntil = event.value;
      if (!newUntil) {
        return;
      }
      var value = kendo_date_math_1.ZonedDate.fromLocalDate(newUntil, this.$props.timezone);
      this.onChangeHandler(Object.assign({}, this.rrule, {
        until: value
      }));
      this.defaultUntil = value;
    },
    handleWeekDaysChange: function handleWeekDaysChange(newWeekDays) {
      this.onChangeHandler(Object.assign({}, this.rrule, {
        byWeekDay: this.weekDays.filter(function (wd) {
          return newWeekDays.some(function (nwd) {
            return nwd === wd.value;
          });
        }).map(function (wd) {
          return {
            offset: 0,
            day: wd.value
          };
        })
      }));
    },
    handleWeekDayChange: function handleWeekDayChange(event) {
      var newRrule = Object.assign({}, this.rrule);
      var newWeekDay = event.target.value;
      if (typeof newWeekDay.value === 'string') {
        /* day, weekday or weekend */
        newRrule.byWeekDay = (0, common_1.weekDayRuleFromString)(newWeekDay.value);
        newRrule.bySetPosition = [this.offset.value];
      } else {
        /* specific weekday */
        newRrule.byWeekDay = [{
          day: newWeekDay.value,
          offset: this.offset.value
        }];
      }
      this.onChangeHandler(newRrule);
    },
    handleMonthDayChange: function handleMonthDayChange(event) {
      this.onChangeHandler(Object.assign({}, this.rrule, {
        byMonthDay: [event.value]
      }));
    },
    handleMonthChange: function handleMonthChange(event) {
      var newMonth = event.value;
      this.onChangeHandler(Object.assign({}, this.rrule, {
        byMonth: [newMonth.value]
      }));
    },
    handleEndRuleChange: function handleEndRuleChange(event) {
      var newEnd = event.value;
      var newRrule = Object.assign({}, this.rrule);
      switch (newEnd) {
        case 'never':
          newRrule.until = undefined;
          newRrule.count = undefined;
          break;
        case 'count':
          newRrule.until = undefined;
          newRrule.count = this.defaultCount;
          break;
        case 'until':
          newRrule.until = this.defaultUntil;
          newRrule.count = undefined;
          break;
        default:
          break;
      }
      this.onChangeHandler(newRrule);
    },
    handleRepeatOnRuleChange: function handleRepeatOnRuleChange(event) {
      var newRrule = Object.assign({}, this.rrule);
      if (event.value === 'monthday') {
        newRrule.byWeekDay = undefined;
        newRrule.bySetPosition = undefined;
        newRrule.byMonthDay = [this.monthDay];
      } else if (event.value === 'weekday') {
        // weekDays
        newRrule.byMonthDay = undefined;
        if (typeof this.weekDay.value === 'string') {
          /* day, weekday or weekend */
          newRrule.bySetPosition = [this.offset.value];
          newRrule.byWeekDay = (0, common_1.weekDayRuleFromString)(this.weekDay.value);
        } else {
          /* specific weekday */
          newRrule.byWeekDay = [{
            day: this.weekDay.value,
            offset: this.offset.value
          }];
        }
      }
      this.onChangeHandler(newRrule);
    },
    handleOffsetChange: function handleOffsetChange(event) {
      var newRrule = Object.assign({}, this.rrule);
      var newOffset = event.value;
      if (newRrule.byWeekDay) {
        var weekDaysCount = newRrule.byWeekDay.length;
        switch (weekDaysCount) {
          case 7:
          case 5:
          case 2:
            newRrule.bySetPosition = [newOffset.value];
            break;
          case 1:
            newRrule.byWeekDay[0].offset = newOffset.value;
            break;
          default:
            break;
        }
      }
      this.onChangeHandler(newRrule);
    }
  }
};
exports.RecurrenceEditorVue2 = RecurrenceEditorVue2;
/**
 * @hidden
 */
var RecurrenceEditor = RecurrenceEditorVue2;
exports.RecurrenceEditor = RecurrenceEditor;