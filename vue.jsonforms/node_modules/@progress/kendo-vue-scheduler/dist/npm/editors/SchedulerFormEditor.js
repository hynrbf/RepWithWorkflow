"use strict";

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SchedulerFormEditorVue2 = exports.SchedulerFormEditor = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_date_math_1 = require("@progress/kendo-date-math");
var kendo_vue_labels_1 = require("@progress/kendo-vue-labels");
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var kendo_vue_form_1 = require("@progress/kendo-vue-form");
var kendo_vue_inputs_1 = require("@progress/kendo-vue-inputs");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var main_1 = require("../messages/main");
var FilterableComboBox_1 = require("./FilterableComboBox");
var kendo_vue_common_2 = require("@progress/kendo-vue-common");
var RecurrenceEditor_1 = require("../recurrence/RecurrenceEditor");
var ResourceEditor_1 = require("./ResourceEditor");
var ZonedDateTime_1 = require("./ZonedDateTime");
/**
 * @hidden
 */
var SchedulerFormEditorVue2 = {
  name: 'KendoSchedulerFormEditor',
  props: {
    as: [String, Function, Object],
    id: String,
    tabIndex: Number,
    titleLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    titleError: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Error;
      }
    },
    titleEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_inputs_1.Input;
      }
    },
    startLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    startError: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Error;
      }
    },
    startEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return ZonedDateTime_1.ZonedDateTime;
      }
    },
    startTimezoneLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    startTimezoneError: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Error;
      }
    },
    startTimezoneEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return FilterableComboBox_1.FilterableComboBox;
      }
    },
    startTimezoneCheckedLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    startTimezoneCheckedEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_inputs_1.Checkbox;
      }
    },
    endLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    endError: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Error;
      }
    },
    endEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return ZonedDateTime_1.ZonedDateTime;
      }
    },
    endTimezoneLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    endTimezoneError: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Error;
      }
    },
    endTimezoneEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return FilterableComboBox_1.FilterableComboBox;
      }
    },
    endTimezoneCheckedLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    endTimezoneCheckedEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_inputs_1.Checkbox;
      }
    },
    allDayLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    allDayEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_inputs_1.Checkbox;
      }
    },
    recurrenceEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return RecurrenceEditor_1.RecurrenceEditor;
      }
    },
    descriptionLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    descriptionError: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Error;
      }
    },
    descriptionEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_inputs_1.TextArea;
      }
    },
    resourceLabel: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    resourcesError: {
      type: [String, Function, Object],
      default: function _default() {
        return kendo_vue_labels_1.Label;
      }
    },
    resourceEditor: {
      type: [String, Function, Object],
      default: function _default() {
        return ResourceEditor_1.ResourceEditor;
      }
    },
    errors: Object,
    valid: Boolean,
    touched: Boolean,
    visited: Boolean,
    modified: Boolean,
    submitted: Boolean,
    allowSubmit: Boolean,
    valueGetter: Function
  },
  created: function created() {
    this.requiredValidationMessage = undefined;
  },
  inject: {
    ks: {
      default: null
    },
    kendoForm: {
      default: {}
    },
    kendoLocalizationService: {
      default: null
    }
  },
  data: function data() {
    return {
      startZoneChecked: Boolean(this.kendoForm.valueGetter(this.ks.fields.startTimezone)),
      endZoneChecked: Boolean(this.kendoForm.valueGetter(this.ks.fields.endTimezone))
    };
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;
    var h = gh || createElement;
    var defaultSlots = (0, kendo_vue_common_2.getDefaultSlots)(this);
    var timezones = (0, kendo_date_math_1.timezoneNames)();
    var localization = (0, kendo_vue_intl_1.provideLocalizationService)(this);
    var _a = this.$props,
      Component = _a.as,
      other = __rest(_a, ["as"]);
    var _b = this.$props,
      StartTimezoneCheckedLabel = _b.startTimezoneCheckedLabel,
      StartTimezoneCheckedEditor = _b.startTimezoneCheckedEditor,
      EndTimezoneCheckedLabel = _b.endTimezoneCheckedLabel,
      EndTimezoneCheckedEditor = _b.endTimezoneCheckedEditor;
    var titleLabel = kendo_vue_common_1.templateRendering.call(this, this.titleLabel, kendo_vue_common_1.getListeners.call(this));
    var titleError = kendo_vue_common_1.templateRendering.call(this, this.titleError, kendo_vue_common_1.getListeners.call(this));
    var titleEditor = kendo_vue_common_1.templateRendering.call(this, this.titleEditor, kendo_vue_common_1.getListeners.call(this));
    var startLabel = kendo_vue_common_1.templateRendering.call(this, this.startLabel, kendo_vue_common_1.getListeners.call(this));
    var startError = kendo_vue_common_1.templateRendering.call(this, this.startError, kendo_vue_common_1.getListeners.call(this));
    var startEditor = kendo_vue_common_1.templateRendering.call(this, this.startEditor, kendo_vue_common_1.getListeners.call(this));
    var startTimezoneLabel = kendo_vue_common_1.templateRendering.call(this, this.startTimezoneLabel, kendo_vue_common_1.getListeners.call(this));
    var startTimezoneError = kendo_vue_common_1.templateRendering.call(this, this.startTimezoneError, kendo_vue_common_1.getListeners.call(this));
    var startTimezoneEditor = kendo_vue_common_1.templateRendering.call(this, this.startTimezoneEditor, kendo_vue_common_1.getListeners.call(this));
    var endLabel = kendo_vue_common_1.templateRendering.call(this, this.endLabel, kendo_vue_common_1.getListeners.call(this));
    var endError = kendo_vue_common_1.templateRendering.call(this, this.endError, kendo_vue_common_1.getListeners.call(this));
    var endEditor = kendo_vue_common_1.templateRendering.call(this, this.endEditor, kendo_vue_common_1.getListeners.call(this));
    var endTimezoneLabel = kendo_vue_common_1.templateRendering.call(this, this.endTimezoneLabel, kendo_vue_common_1.getListeners.call(this));
    var endTimezoneError = kendo_vue_common_1.templateRendering.call(this, this.endTimezoneError, kendo_vue_common_1.getListeners.call(this));
    var endTimezoneEditor = kendo_vue_common_1.templateRendering.call(this, this.endTimezoneEditor, kendo_vue_common_1.getListeners.call(this));
    var allDayLabel = kendo_vue_common_1.templateRendering.call(this, this.allDayLabel, kendo_vue_common_1.getListeners.call(this));
    var allDayEditor = kendo_vue_common_1.templateRendering.call(this, this.allDayEditor, kendo_vue_common_1.getListeners.call(this));
    var recurrenceEditor = kendo_vue_common_1.templateRendering.call(this, this.recurrenceEditor, kendo_vue_common_1.getListeners.call(this));
    var descriptionLabel = kendo_vue_common_1.templateRendering.call(this, this.descriptionLabel, kendo_vue_common_1.getListeners.call(this));
    var descriptionEditor = kendo_vue_common_1.templateRendering.call(this, this.descriptionEditor, kendo_vue_common_1.getListeners.call(this));
    var descriptionError = kendo_vue_common_1.templateRendering.call(this, this.descriptionError, kendo_vue_common_1.getListeners.call(this));
    var resourceLabel = kendo_vue_common_1.templateRendering.call(this, this.resourceLabel, kendo_vue_common_1.getListeners.call(this));
    var resourceEditor = kendo_vue_common_1.templateRendering.call(this, this.resourceEditor, kendo_vue_common_1.getListeners.call(this));
    var start = this.kendoForm.valueGetter(this.ks.fields.start) || new Date();
    var startTimezone = this.kendoForm.valueGetter(this.ks.fields.startTimezone) || this.ks.timezone || '';
    var endTimezone = this.kendoForm.valueGetter(this.ks.fields.endTimezone) || this.ks.timezone || '';
    this.requiredValidationMessage = localization.toLanguageString(main_1.editorValidationRequired, main_1.messages[main_1.editorValidationRequired]);
    var title = this.ks.fields.title;
    return (
      // @ts-ignore function children
      h(kendo_vue_form_1.FormElement, {
        "class": 'k-scheduler-edit-form'
      }, this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: title,
            attrs: _this.v3 ? undefined : {
              name: title,
              component: titleLabel,
              editorId: 'k-scheduler-editor-title'
            },
            component: titleLabel,
            editorId: 'k-scheduler-editor-title'
          }, _this.v3 ? function () {
            return [localization.toLanguageString(main_1.editorEventTitle, main_1.messages[main_1.editorEventTitle])];
          } : [localization.toLanguageString(main_1.editorEventTitle, main_1.messages[main_1.editorEventTitle])]), h("div", {
            "class": "k-form-field-wrap"
          }, [h(kendo_vue_form_1.Field, {
            id: "k-scheduler-editor-title",
            attrs: _this.v3 ? undefined : {
              id: "k-scheduler-editor-title",
              name: title,
              field: title,
              component: titleEditor
            },
            name: title,
            field: title,
            component: titleEditor
          }), _this.kendoForm.errors[title] &&
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: title,
            attrs: _this.v3 ? undefined : {
              name: title,
              component: titleError
            },
            component: titleError
          }, _this.v3 ? function () {
            return [_this.kendoForm.errors[title]];
          } : [_this.kendoForm.errors[title]])])];
        } : [h(kendo_vue_form_1.Field, {
          name: title,
          attrs: _this.v3 ? undefined : {
            name: title,
            component: titleLabel,
            editorId: 'k-scheduler-editor-title'
          },
          component: titleLabel,
          editorId: 'k-scheduler-editor-title'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventTitle, main_1.messages[main_1.editorEventTitle])];
        } : [localization.toLanguageString(main_1.editorEventTitle, main_1.messages[main_1.editorEventTitle])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          id: "k-scheduler-editor-title",
          attrs: _this.v3 ? undefined : {
            id: "k-scheduler-editor-title",
            name: title,
            field: title,
            component: titleEditor
          },
          name: title,
          field: title,
          component: titleEditor
        }), _this.kendoForm.errors[title] && h(kendo_vue_form_1.Field, {
          name: title,
          attrs: _this.v3 ? undefined : {
            name: title,
            component: titleError
          },
          component: titleError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[title]];
        } : [_this.kendoForm.errors[title]])])]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.start,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.start,
              component: startLabel,
              editorId: "k-scheduler-editor-start"
            },
            component: startLabel,
            editorId: "k-scheduler-editor-start",
            "class": 'k-form-label'
          }, _this.v3 ? function () {
            return [localization.toLanguageString(main_1.editorEventStart, main_1.messages[main_1.editorEventStart])];
          } : [localization.toLanguageString(main_1.editorEventStart, main_1.messages[main_1.editorEventStart])]), h("div", {
            "class": "k-form-field-wrap"
          }, [h(kendo_vue_form_1.Field, {
            id: "k-scheduler-editor-start",
            attrs: _this.v3 ? undefined : {
              id: "k-scheduler-editor-start",
              name: _this.ks.fields.start,
              width: "auto",
              component: startEditor,
              isAllDay: !!_this.kendoForm.values.isAllDay,
              timezone: _this.ks.timezone
            },
            name: _this.ks.fields.start,
            width: "auto",
            component: startEditor,
            isAllDay: !!_this.kendoForm.values.isAllDay,
            timezone: _this.ks.timezone
          }), _this.kendoForm.errors[_this.ks.fields.start] &&
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.start,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.start,
              component: startError
            },
            component: startError
          }, _this.v3 ? function () {
            return [_this.kendoForm.errors[_this.ks.fields.start]];
          } : [_this.kendoForm.errors[_this.ks.fields.start]])])];
        } : [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.start,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.start,
            component: startLabel,
            editorId: "k-scheduler-editor-start"
          },
          component: startLabel,
          editorId: "k-scheduler-editor-start",
          "class": 'k-form-label'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventStart, main_1.messages[main_1.editorEventStart])];
        } : [localization.toLanguageString(main_1.editorEventStart, main_1.messages[main_1.editorEventStart])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          id: "k-scheduler-editor-start",
          attrs: _this.v3 ? undefined : {
            id: "k-scheduler-editor-start",
            name: _this.ks.fields.start,
            width: "auto",
            component: startEditor,
            isAllDay: !!_this.kendoForm.values.isAllDay,
            timezone: _this.ks.timezone
          },
          name: _this.ks.fields.start,
          width: "auto",
          component: startEditor,
          isAllDay: !!_this.kendoForm.values.isAllDay,
          timezone: _this.ks.timezone
        }), _this.kendoForm.errors[_this.ks.fields.start] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.start,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.start,
            component: startError
          },
          component: startError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.start]];
        } : [_this.kendoForm.errors[_this.ks.fields.start]])])]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [timezones.length > 0 && h("div", [h(StartTimezoneCheckedEditor, {
            id: 'k-scheduler-editor-set-start-timezone',
            attrs: _this.v3 ? undefined : {
              id: 'k-scheduler-editor-set-start-timezone',
              value: _this.startZoneChecked
            },
            onChange: _this.handleStartZoneCheckboxChange,
            on: _this.v3 ? undefined : {
              "change": _this.handleStartZoneCheckboxChange
            },
            value: _this.startZoneChecked
          }),
          // @ts-ignore function children
          h(StartTimezoneCheckedLabel, {
            "class": 'k-checkbox-label',
            editorId: 'k-scheduler-editor-set-start-timezone',
            attrs: _this.v3 ? undefined : {
              editorId: 'k-scheduler-editor-set-start-timezone'
            },
            style: {
              display: 'inline-flex'
            }
          }, _this.v3 ? function () {
            return [localization.toLanguageString(main_1.editorEventTimeZone, main_1.messages[main_1.editorEventTimeZone])];
          } : [localization.toLanguageString(main_1.editorEventTimeZone, main_1.messages[main_1.editorEventTimeZone])])])];
        } : [timezones.length > 0 && h("div", [h(StartTimezoneCheckedEditor, {
          id: 'k-scheduler-editor-set-start-timezone',
          attrs: _this.v3 ? undefined : {
            id: 'k-scheduler-editor-set-start-timezone',
            value: _this.startZoneChecked
          },
          onChange: _this.handleStartZoneCheckboxChange,
          on: _this.v3 ? undefined : {
            "change": _this.handleStartZoneCheckboxChange
          },
          value: _this.startZoneChecked
        }), h(StartTimezoneCheckedLabel, {
          "class": 'k-checkbox-label',
          editorId: 'k-scheduler-editor-set-start-timezone',
          attrs: _this.v3 ? undefined : {
            editorId: 'k-scheduler-editor-set-start-timezone'
          },
          style: {
            display: 'inline-flex'
          }
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventTimeZone, main_1.messages[main_1.editorEventTimeZone])];
        } : [localization.toLanguageString(main_1.editorEventTimeZone, main_1.messages[main_1.editorEventTimeZone])])])]), _this.startZoneChecked &&
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.start,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.start,
              component: startTimezoneLabel
            },
            component: startTimezoneLabel
          }, _this.v3 ? function () {
            return [localization.toLanguageString(main_1.editorEventStartTimeZone, main_1.messages[main_1.editorEventStartTimeZone])];
          } : [localization.toLanguageString(main_1.editorEventStartTimeZone, main_1.messages[main_1.editorEventStartTimeZone])]), h("div", {
            "class": "k-form-field-wrap"
          }, [h(kendo_vue_form_1.Field, {
            component: startTimezoneEditor,
            attrs: _this.v3 ? undefined : {
              component: startTimezoneEditor,
              value: startTimezone,
              validator: _this.startTimezoneValidator,
              dataItems: timezones,
              name: _this.ks.fields.startTimezone
            },
            value: startTimezone,
            validator: _this.startTimezoneValidator,
            dataItems: timezones,
            name: _this.ks.fields.startTimezone
          }), _this.kendoForm.errors[_this.ks.fields.startTimezone] &&
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.startTimezone,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.startTimezone,
              component: startTimezoneError
            },
            component: startTimezoneError
          }, _this.v3 ? function () {
            return [_this.kendoForm.errors[_this.ks.fields.startTimezone]];
          } : [_this.kendoForm.errors[_this.ks.fields.startTimezone]])])];
        } : [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.start,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.start,
            component: startTimezoneLabel
          },
          component: startTimezoneLabel
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventStartTimeZone, main_1.messages[main_1.editorEventStartTimeZone])];
        } : [localization.toLanguageString(main_1.editorEventStartTimeZone, main_1.messages[main_1.editorEventStartTimeZone])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          component: startTimezoneEditor,
          attrs: _this.v3 ? undefined : {
            component: startTimezoneEditor,
            value: startTimezone,
            validator: _this.startTimezoneValidator,
            dataItems: timezones,
            name: _this.ks.fields.startTimezone
          },
          value: startTimezone,
          validator: _this.startTimezoneValidator,
          dataItems: timezones,
          name: _this.ks.fields.startTimezone
        }), _this.kendoForm.errors[_this.ks.fields.startTimezone] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.startTimezone,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.startTimezone,
            component: startTimezoneError
          },
          component: startTimezoneError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.startTimezone]];
        } : [_this.kendoForm.errors[_this.ks.fields.startTimezone]])])]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.end,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.end,
              component: endLabel,
              editorId: "k-scheduler-editor-end"
            },
            component: endLabel,
            editorId: "k-scheduler-editor-end",
            "class": 'k-form-label'
          }, _this.v3 ? function () {
            return [localization.toLanguageString(main_1.editorEventEnd, main_1.messages[main_1.editorEventEnd])];
          } : [localization.toLanguageString(main_1.editorEventEnd, main_1.messages[main_1.editorEventEnd])]), h("div", {
            "class": "k-form-field-wrap"
          }, [h(kendo_vue_form_1.Field, {
            id: "k-scheduler-editor-end",
            attrs: _this.v3 ? undefined : {
              id: "k-scheduler-editor-end",
              name: _this.ks.fields.end,
              width: "auto",
              component: endEditor,
              isAllDay: !!_this.kendoForm.values.isAllDay,
              timezone: _this.ks.timezone
            },
            name: _this.ks.fields.end,
            width: "auto",
            component: endEditor,
            isAllDay: !!_this.kendoForm.values.isAllDay,
            timezone: _this.ks.timezone
          }), _this.kendoForm.errors[_this.ks.fields.end] &&
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.end,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.end,
              component: endError
            },
            component: endError
          }, _this.v3 ? function () {
            return [_this.kendoForm.errors[_this.ks.fields.end]];
          } : [_this.kendoForm.errors[_this.ks.fields.end]])])];
        } : [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.end,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.end,
            component: endLabel,
            editorId: "k-scheduler-editor-end"
          },
          component: endLabel,
          editorId: "k-scheduler-editor-end",
          "class": 'k-form-label'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventEnd, main_1.messages[main_1.editorEventEnd])];
        } : [localization.toLanguageString(main_1.editorEventEnd, main_1.messages[main_1.editorEventEnd])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          id: "k-scheduler-editor-end",
          attrs: _this.v3 ? undefined : {
            id: "k-scheduler-editor-end",
            name: _this.ks.fields.end,
            width: "auto",
            component: endEditor,
            isAllDay: !!_this.kendoForm.values.isAllDay,
            timezone: _this.ks.timezone
          },
          name: _this.ks.fields.end,
          width: "auto",
          component: endEditor,
          isAllDay: !!_this.kendoForm.values.isAllDay,
          timezone: _this.ks.timezone
        }), _this.kendoForm.errors[_this.ks.fields.end] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.end,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.end,
            component: endError
          },
          component: endError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.end]];
        } : [_this.kendoForm.errors[_this.ks.fields.end]])])]), _this.startZoneChecked &&
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h("div", {
            className: "k-form-field-wrap",
            attrs: _this.v3 ? undefined : {
              className: "k-form-field-wrap"
            }
          }, [h(EndTimezoneCheckedEditor, {
            id: 'k-scheduler-editor-set-end-timezone',
            attrs: _this.v3 ? undefined : {
              id: 'k-scheduler-editor-set-end-timezone',
              value: _this.endZoneChecked
            },
            onChange: _this.handleEndZoneCheckboxChange,
            on: _this.v3 ? undefined : {
              "change": _this.handleEndZoneCheckboxChange
            },
            value: _this.endZoneChecked
          })]),
          // @ts-ignore function children
          h(EndTimezoneCheckedLabel, {
            "class": 'k-checkbox-label',
            editorId: 'k-scheduler-editor-set-end-timezone',
            attrs: _this.v3 ? undefined : {
              editorId: 'k-scheduler-editor-set-end-timezone'
            },
            style: {
              display: 'inline-flex'
            }
          }, _this.v3 ? function () {
            return [localization.toLanguageString(main_1.editorEventSeparateTimeZones, main_1.messages[main_1.editorEventSeparateTimeZones])];
          } : [localization.toLanguageString(main_1.editorEventSeparateTimeZones, main_1.messages[main_1.editorEventSeparateTimeZones])])];
        } : [h("div", {
          className: "k-form-field-wrap",
          attrs: _this.v3 ? undefined : {
            className: "k-form-field-wrap"
          }
        }, [h(EndTimezoneCheckedEditor, {
          id: 'k-scheduler-editor-set-end-timezone',
          attrs: _this.v3 ? undefined : {
            id: 'k-scheduler-editor-set-end-timezone',
            value: _this.endZoneChecked
          },
          onChange: _this.handleEndZoneCheckboxChange,
          on: _this.v3 ? undefined : {
            "change": _this.handleEndZoneCheckboxChange
          },
          value: _this.endZoneChecked
        })]), h(EndTimezoneCheckedLabel, {
          "class": 'k-checkbox-label',
          editorId: 'k-scheduler-editor-set-end-timezone',
          attrs: _this.v3 ? undefined : {
            editorId: 'k-scheduler-editor-set-end-timezone'
          },
          style: {
            display: 'inline-flex'
          }
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventSeparateTimeZones, main_1.messages[main_1.editorEventSeparateTimeZones])];
        } : [localization.toLanguageString(main_1.editorEventSeparateTimeZones, main_1.messages[main_1.editorEventSeparateTimeZones])])]), _this.endZoneChecked &&
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.endTimezone,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.endTimezone,
              component: endTimezoneLabel
            },
            component: endTimezoneLabel,
            "class": 'k-form-label'
          }, _this.v3 ? function () {
            return [localization.toLanguageString(main_1.editorEventEndTimeZone, main_1.messages[main_1.editorEventEndTimeZone])];
          } : [localization.toLanguageString(main_1.editorEventEndTimeZone, main_1.messages[main_1.editorEventEndTimeZone])]), h("div", {
            "class": "k-form-field-wrap"
          }, [h(kendo_vue_form_1.Field, {
            value: endTimezone,
            attrs: _this.v3 ? undefined : {
              value: endTimezone,
              dataItems: timezones,
              validator: _this.endTimezoneValidator,
              component: endTimezoneEditor,
              name: _this.ks.fields.endTimezone
            },
            dataItems: timezones,
            validator: _this.endTimezoneValidator,
            component: endTimezoneEditor,
            name: _this.ks.fields.endTimezone
          }), _this.kendoForm.errors[_this.ks.fields.endTimezone] &&
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.endTimezone,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.endTimezone,
              component: endTimezoneError
            },
            component: endTimezoneError
          }, _this.v3 ? function () {
            return [_this.kendoForm.errors[_this.ks.fields.endTimezone]];
          } : [_this.kendoForm.errors[_this.ks.fields.endTimezone]])])];
        } : [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.endTimezone,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.endTimezone,
            component: endTimezoneLabel
          },
          component: endTimezoneLabel,
          "class": 'k-form-label'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventEndTimeZone, main_1.messages[main_1.editorEventEndTimeZone])];
        } : [localization.toLanguageString(main_1.editorEventEndTimeZone, main_1.messages[main_1.editorEventEndTimeZone])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          value: endTimezone,
          attrs: _this.v3 ? undefined : {
            value: endTimezone,
            dataItems: timezones,
            validator: _this.endTimezoneValidator,
            component: endTimezoneEditor,
            name: _this.ks.fields.endTimezone
          },
          dataItems: timezones,
          validator: _this.endTimezoneValidator,
          component: endTimezoneEditor,
          name: _this.ks.fields.endTimezone
        }), _this.kendoForm.errors[_this.ks.fields.endTimezone] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.endTimezone,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.endTimezone,
            component: endTimezoneError
          },
          component: endTimezoneError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.endTimezone]];
        } : [_this.kendoForm.errors[_this.ks.fields.endTimezone]])])]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.isAllDay,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.isAllDay,
              component: kendo_vue_labels_1.Label
            },
            component: kendo_vue_labels_1.Label,
            "class": 'k-form-label'
          }), h("div", {
            "class": "k-form-field-wrap"
          }, [h(kendo_vue_form_1.Field, {
            id: 'k-is-allday-checkbox',
            attrs: _this.v3 ? undefined : {
              id: 'k-is-allday-checkbox',
              name: _this.ks.fields.isAllDay,
              component: allDayEditor
            },
            name: _this.ks.fields.isAllDay,
            component: allDayEditor
          }),
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.isAllDay,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.isAllDay,
              field: _this.ks.fields.isAllDay,
              editorId: 'k-is-allday-checkbox',
              component: allDayLabel
            },
            field: _this.ks.fields.isAllDay,
            editorId: 'k-is-allday-checkbox',
            "class": 'k-checkbox-label',
            component: allDayLabel
          }, _this.v3 ? function () {
            return [localization.toLanguageString(main_1.editorEventAllDay, main_1.messages[main_1.editorEventAllDay])];
          } : [localization.toLanguageString(main_1.editorEventAllDay, main_1.messages[main_1.editorEventAllDay])])])];
        } : [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.isAllDay,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.isAllDay,
            component: kendo_vue_labels_1.Label
          },
          component: kendo_vue_labels_1.Label,
          "class": 'k-form-label'
        }), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          id: 'k-is-allday-checkbox',
          attrs: _this.v3 ? undefined : {
            id: 'k-is-allday-checkbox',
            name: _this.ks.fields.isAllDay,
            component: allDayEditor
          },
          name: _this.ks.fields.isAllDay,
          component: allDayEditor
        }), h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.isAllDay,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.isAllDay,
            field: _this.ks.fields.isAllDay,
            editorId: 'k-is-allday-checkbox',
            component: allDayLabel
          },
          field: _this.ks.fields.isAllDay,
          editorId: 'k-is-allday-checkbox',
          "class": 'k-checkbox-label',
          component: allDayLabel
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventAllDay, main_1.messages[main_1.editorEventAllDay])];
        } : [localization.toLanguageString(main_1.editorEventAllDay, main_1.messages[main_1.editorEventAllDay])])])]), h("div", {
          "class": "k-recurrence-editor"
        }, [h(kendo_vue_form_1.Field, {
          component: recurrenceEditor,
          attrs: _this.v3 ? undefined : {
            component: recurrenceEditor,
            changeOnInput: false,
            field: _this.ks.fields.recurrenceRule,
            name: _this.ks.fields.recurrenceRule,
            start: start
          },
          changeOnInput: false,
          field: _this.ks.fields.recurrenceRule,
          name: _this.ks.fields.recurrenceRule,
          start: start
        })]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.description,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.description,
              component: descriptionLabel
            },
            component: descriptionLabel,
            "class": 'k-form-label'
          }, _this.v3 ? function () {
            return [localization.toLanguageString(main_1.editorEventDescription, main_1.messages[main_1.editorEventDescription])];
          } : [localization.toLanguageString(main_1.editorEventDescription, main_1.messages[main_1.editorEventDescription])]), h("div", {
            "class": "k-form-field-wrap"
          }, [h(kendo_vue_form_1.Field, {
            component: descriptionEditor,
            attrs: _this.v3 ? undefined : {
              component: descriptionEditor,
              name: _this.ks.fields.description,
              rows: 1,
              id: 'k-event-description'
            },
            name: _this.ks.fields.description,
            rows: 1,
            id: 'k-event-description'
          }), _this.kendoForm.errors[_this.ks.fields.description] &&
          // @ts-ignore function children
          h(kendo_vue_form_1.Field, {
            name: _this.ks.fields.description,
            attrs: _this.v3 ? undefined : {
              name: _this.ks.fields.description,
              component: descriptionError
            },
            component: descriptionError
          }, _this.v3 ? function () {
            return [_this.kendoForm.errors[_this.ks.fields.description]];
          } : [_this.kendoForm.errors[_this.ks.fields.description]])])];
        } : [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.description,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.description,
            component: descriptionLabel
          },
          component: descriptionLabel,
          "class": 'k-form-label'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventDescription, main_1.messages[main_1.editorEventDescription])];
        } : [localization.toLanguageString(main_1.editorEventDescription, main_1.messages[main_1.editorEventDescription])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          component: descriptionEditor,
          attrs: _this.v3 ? undefined : {
            component: descriptionEditor,
            name: _this.ks.fields.description,
            rows: 1,
            id: 'k-event-description'
          },
          name: _this.ks.fields.description,
          rows: 1,
          id: 'k-event-description'
        }), _this.kendoForm.errors[_this.ks.fields.description] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.description,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.description,
            component: descriptionError
          },
          component: descriptionError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.description]];
        } : [_this.kendoForm.errors[_this.ks.fields.description]])])]), (_this.ks.props.resources || []).map(function (resource) {
          var _this2 = this;
          return (
            // @ts-ignore function children
            h(kendo_vue_form_1.FieldWrapper, {
              key: resource.field
            }, this.v3 ? function () {
              return [h(kendo_vue_form_1.Field, {
                name: resource.field,
                attrs: _this2.v3 ? undefined : {
                  name: resource.field,
                  component: resourceLabel
                },
                component: resourceLabel,
                "class": 'k-form-label'
              }),
              // @ts-ignore function children
              h(kendo_vue_labels_1.Label, {
                "class": 'k-form-label'
              }, _this2.v3 ? function () {
                return [resource.name];
              } : [resource.name]), h(kendo_vue_form_1.Field, {
                name: resource.field,
                attrs: _this2.v3 ? undefined : {
                  name: resource.field,
                  component: resourceEditor,
                  resource: resource,
                  multiple: resource.multiple,
                  dataItems: resource.data,
                  textField: resource.textField,
                  valueField: resource.valueField,
                  colorField: resource.colorField
                },
                component: resourceEditor,
                resource: resource,
                multiple: resource.multiple,
                dataItems: resource.data,
                textField: resource.textField,
                valueField: resource.valueField,
                colorField: resource.colorField
              }), _this2.kendoForm.errors[resource.field] &&
              // @ts-ignore function children
              h(kendo_vue_form_1.Field, {
                name: resource.field,
                attrs: _this2.v3 ? undefined : {
                  name: resource.field,
                  component: kendo_vue_labels_1.Error
                },
                component: kendo_vue_labels_1.Error
              }, _this2.v3 ? function () {
                return [_this2.kendoForm.errors[resource.field]];
              } : [_this2.kendoForm.errors[resource.field]])];
            } : [h(kendo_vue_form_1.Field, {
              name: resource.field,
              attrs: _this2.v3 ? undefined : {
                name: resource.field,
                component: resourceLabel
              },
              component: resourceLabel,
              "class": 'k-form-label'
            }), h(kendo_vue_labels_1.Label, {
              "class": 'k-form-label'
            }, _this2.v3 ? function () {
              return [resource.name];
            } : [resource.name]), h(kendo_vue_form_1.Field, {
              name: resource.field,
              attrs: _this2.v3 ? undefined : {
                name: resource.field,
                component: resourceEditor,
                resource: resource,
                multiple: resource.multiple,
                dataItems: resource.data,
                textField: resource.textField,
                valueField: resource.valueField,
                colorField: resource.colorField
              },
              component: resourceEditor,
              resource: resource,
              multiple: resource.multiple,
              dataItems: resource.data,
              textField: resource.textField,
              valueField: resource.valueField,
              colorField: resource.colorField
            }), _this2.kendoForm.errors[resource.field] && h(kendo_vue_form_1.Field, {
              name: resource.field,
              attrs: _this2.v3 ? undefined : {
                name: resource.field,
                component: kendo_vue_labels_1.Error
              },
              component: kendo_vue_labels_1.Error
            }, _this2.v3 ? function () {
              return [_this2.kendoForm.errors[resource.field]];
            } : [_this2.kendoForm.errors[resource.field]])])
          );
        }, _this), defaultSlots];
      } : [h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h(kendo_vue_form_1.Field, {
          name: title,
          attrs: _this.v3 ? undefined : {
            name: title,
            component: titleLabel,
            editorId: 'k-scheduler-editor-title'
          },
          component: titleLabel,
          editorId: 'k-scheduler-editor-title'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventTitle, main_1.messages[main_1.editorEventTitle])];
        } : [localization.toLanguageString(main_1.editorEventTitle, main_1.messages[main_1.editorEventTitle])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          id: "k-scheduler-editor-title",
          attrs: _this.v3 ? undefined : {
            id: "k-scheduler-editor-title",
            name: title,
            field: title,
            component: titleEditor
          },
          name: title,
          field: title,
          component: titleEditor
        }), _this.kendoForm.errors[title] && h(kendo_vue_form_1.Field, {
          name: title,
          attrs: _this.v3 ? undefined : {
            name: title,
            component: titleError
          },
          component: titleError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[title]];
        } : [_this.kendoForm.errors[title]])])];
      } : [h(kendo_vue_form_1.Field, {
        name: title,
        attrs: _this.v3 ? undefined : {
          name: title,
          component: titleLabel,
          editorId: 'k-scheduler-editor-title'
        },
        component: titleLabel,
        editorId: 'k-scheduler-editor-title'
      }, _this.v3 ? function () {
        return [localization.toLanguageString(main_1.editorEventTitle, main_1.messages[main_1.editorEventTitle])];
      } : [localization.toLanguageString(main_1.editorEventTitle, main_1.messages[main_1.editorEventTitle])]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_form_1.Field, {
        id: "k-scheduler-editor-title",
        attrs: _this.v3 ? undefined : {
          id: "k-scheduler-editor-title",
          name: title,
          field: title,
          component: titleEditor
        },
        name: title,
        field: title,
        component: titleEditor
      }), _this.kendoForm.errors[title] && h(kendo_vue_form_1.Field, {
        name: title,
        attrs: _this.v3 ? undefined : {
          name: title,
          component: titleError
        },
        component: titleError
      }, _this.v3 ? function () {
        return [_this.kendoForm.errors[title]];
      } : [_this.kendoForm.errors[title]])])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.start,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.start,
            component: startLabel,
            editorId: "k-scheduler-editor-start"
          },
          component: startLabel,
          editorId: "k-scheduler-editor-start",
          "class": 'k-form-label'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventStart, main_1.messages[main_1.editorEventStart])];
        } : [localization.toLanguageString(main_1.editorEventStart, main_1.messages[main_1.editorEventStart])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          id: "k-scheduler-editor-start",
          attrs: _this.v3 ? undefined : {
            id: "k-scheduler-editor-start",
            name: _this.ks.fields.start,
            width: "auto",
            component: startEditor,
            isAllDay: !!_this.kendoForm.values.isAllDay,
            timezone: _this.ks.timezone
          },
          name: _this.ks.fields.start,
          width: "auto",
          component: startEditor,
          isAllDay: !!_this.kendoForm.values.isAllDay,
          timezone: _this.ks.timezone
        }), _this.kendoForm.errors[_this.ks.fields.start] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.start,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.start,
            component: startError
          },
          component: startError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.start]];
        } : [_this.kendoForm.errors[_this.ks.fields.start]])])];
      } : [h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.start,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.start,
          component: startLabel,
          editorId: "k-scheduler-editor-start"
        },
        component: startLabel,
        editorId: "k-scheduler-editor-start",
        "class": 'k-form-label'
      }, _this.v3 ? function () {
        return [localization.toLanguageString(main_1.editorEventStart, main_1.messages[main_1.editorEventStart])];
      } : [localization.toLanguageString(main_1.editorEventStart, main_1.messages[main_1.editorEventStart])]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_form_1.Field, {
        id: "k-scheduler-editor-start",
        attrs: _this.v3 ? undefined : {
          id: "k-scheduler-editor-start",
          name: _this.ks.fields.start,
          width: "auto",
          component: startEditor,
          isAllDay: !!_this.kendoForm.values.isAllDay,
          timezone: _this.ks.timezone
        },
        name: _this.ks.fields.start,
        width: "auto",
        component: startEditor,
        isAllDay: !!_this.kendoForm.values.isAllDay,
        timezone: _this.ks.timezone
      }), _this.kendoForm.errors[_this.ks.fields.start] && h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.start,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.start,
          component: startError
        },
        component: startError
      }, _this.v3 ? function () {
        return [_this.kendoForm.errors[_this.ks.fields.start]];
      } : [_this.kendoForm.errors[_this.ks.fields.start]])])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [timezones.length > 0 && h("div", [h(StartTimezoneCheckedEditor, {
          id: 'k-scheduler-editor-set-start-timezone',
          attrs: _this.v3 ? undefined : {
            id: 'k-scheduler-editor-set-start-timezone',
            value: _this.startZoneChecked
          },
          onChange: _this.handleStartZoneCheckboxChange,
          on: _this.v3 ? undefined : {
            "change": _this.handleStartZoneCheckboxChange
          },
          value: _this.startZoneChecked
        }), h(StartTimezoneCheckedLabel, {
          "class": 'k-checkbox-label',
          editorId: 'k-scheduler-editor-set-start-timezone',
          attrs: _this.v3 ? undefined : {
            editorId: 'k-scheduler-editor-set-start-timezone'
          },
          style: {
            display: 'inline-flex'
          }
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventTimeZone, main_1.messages[main_1.editorEventTimeZone])];
        } : [localization.toLanguageString(main_1.editorEventTimeZone, main_1.messages[main_1.editorEventTimeZone])])])];
      } : [timezones.length > 0 && h("div", [h(StartTimezoneCheckedEditor, {
        id: 'k-scheduler-editor-set-start-timezone',
        attrs: _this.v3 ? undefined : {
          id: 'k-scheduler-editor-set-start-timezone',
          value: _this.startZoneChecked
        },
        onChange: _this.handleStartZoneCheckboxChange,
        on: _this.v3 ? undefined : {
          "change": _this.handleStartZoneCheckboxChange
        },
        value: _this.startZoneChecked
      }), h(StartTimezoneCheckedLabel, {
        "class": 'k-checkbox-label',
        editorId: 'k-scheduler-editor-set-start-timezone',
        attrs: _this.v3 ? undefined : {
          editorId: 'k-scheduler-editor-set-start-timezone'
        },
        style: {
          display: 'inline-flex'
        }
      }, _this.v3 ? function () {
        return [localization.toLanguageString(main_1.editorEventTimeZone, main_1.messages[main_1.editorEventTimeZone])];
      } : [localization.toLanguageString(main_1.editorEventTimeZone, main_1.messages[main_1.editorEventTimeZone])])])]), _this.startZoneChecked && h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.start,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.start,
            component: startTimezoneLabel
          },
          component: startTimezoneLabel
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventStartTimeZone, main_1.messages[main_1.editorEventStartTimeZone])];
        } : [localization.toLanguageString(main_1.editorEventStartTimeZone, main_1.messages[main_1.editorEventStartTimeZone])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          component: startTimezoneEditor,
          attrs: _this.v3 ? undefined : {
            component: startTimezoneEditor,
            value: startTimezone,
            validator: _this.startTimezoneValidator,
            dataItems: timezones,
            name: _this.ks.fields.startTimezone
          },
          value: startTimezone,
          validator: _this.startTimezoneValidator,
          dataItems: timezones,
          name: _this.ks.fields.startTimezone
        }), _this.kendoForm.errors[_this.ks.fields.startTimezone] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.startTimezone,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.startTimezone,
            component: startTimezoneError
          },
          component: startTimezoneError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.startTimezone]];
        } : [_this.kendoForm.errors[_this.ks.fields.startTimezone]])])];
      } : [h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.start,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.start,
          component: startTimezoneLabel
        },
        component: startTimezoneLabel
      }, _this.v3 ? function () {
        return [localization.toLanguageString(main_1.editorEventStartTimeZone, main_1.messages[main_1.editorEventStartTimeZone])];
      } : [localization.toLanguageString(main_1.editorEventStartTimeZone, main_1.messages[main_1.editorEventStartTimeZone])]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_form_1.Field, {
        component: startTimezoneEditor,
        attrs: _this.v3 ? undefined : {
          component: startTimezoneEditor,
          value: startTimezone,
          validator: _this.startTimezoneValidator,
          dataItems: timezones,
          name: _this.ks.fields.startTimezone
        },
        value: startTimezone,
        validator: _this.startTimezoneValidator,
        dataItems: timezones,
        name: _this.ks.fields.startTimezone
      }), _this.kendoForm.errors[_this.ks.fields.startTimezone] && h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.startTimezone,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.startTimezone,
          component: startTimezoneError
        },
        component: startTimezoneError
      }, _this.v3 ? function () {
        return [_this.kendoForm.errors[_this.ks.fields.startTimezone]];
      } : [_this.kendoForm.errors[_this.ks.fields.startTimezone]])])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.end,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.end,
            component: endLabel,
            editorId: "k-scheduler-editor-end"
          },
          component: endLabel,
          editorId: "k-scheduler-editor-end",
          "class": 'k-form-label'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventEnd, main_1.messages[main_1.editorEventEnd])];
        } : [localization.toLanguageString(main_1.editorEventEnd, main_1.messages[main_1.editorEventEnd])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          id: "k-scheduler-editor-end",
          attrs: _this.v3 ? undefined : {
            id: "k-scheduler-editor-end",
            name: _this.ks.fields.end,
            width: "auto",
            component: endEditor,
            isAllDay: !!_this.kendoForm.values.isAllDay,
            timezone: _this.ks.timezone
          },
          name: _this.ks.fields.end,
          width: "auto",
          component: endEditor,
          isAllDay: !!_this.kendoForm.values.isAllDay,
          timezone: _this.ks.timezone
        }), _this.kendoForm.errors[_this.ks.fields.end] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.end,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.end,
            component: endError
          },
          component: endError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.end]];
        } : [_this.kendoForm.errors[_this.ks.fields.end]])])];
      } : [h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.end,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.end,
          component: endLabel,
          editorId: "k-scheduler-editor-end"
        },
        component: endLabel,
        editorId: "k-scheduler-editor-end",
        "class": 'k-form-label'
      }, _this.v3 ? function () {
        return [localization.toLanguageString(main_1.editorEventEnd, main_1.messages[main_1.editorEventEnd])];
      } : [localization.toLanguageString(main_1.editorEventEnd, main_1.messages[main_1.editorEventEnd])]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_form_1.Field, {
        id: "k-scheduler-editor-end",
        attrs: _this.v3 ? undefined : {
          id: "k-scheduler-editor-end",
          name: _this.ks.fields.end,
          width: "auto",
          component: endEditor,
          isAllDay: !!_this.kendoForm.values.isAllDay,
          timezone: _this.ks.timezone
        },
        name: _this.ks.fields.end,
        width: "auto",
        component: endEditor,
        isAllDay: !!_this.kendoForm.values.isAllDay,
        timezone: _this.ks.timezone
      }), _this.kendoForm.errors[_this.ks.fields.end] && h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.end,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.end,
          component: endError
        },
        component: endError
      }, _this.v3 ? function () {
        return [_this.kendoForm.errors[_this.ks.fields.end]];
      } : [_this.kendoForm.errors[_this.ks.fields.end]])])]), _this.startZoneChecked && h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("div", {
          className: "k-form-field-wrap",
          attrs: _this.v3 ? undefined : {
            className: "k-form-field-wrap"
          }
        }, [h(EndTimezoneCheckedEditor, {
          id: 'k-scheduler-editor-set-end-timezone',
          attrs: _this.v3 ? undefined : {
            id: 'k-scheduler-editor-set-end-timezone',
            value: _this.endZoneChecked
          },
          onChange: _this.handleEndZoneCheckboxChange,
          on: _this.v3 ? undefined : {
            "change": _this.handleEndZoneCheckboxChange
          },
          value: _this.endZoneChecked
        })]), h(EndTimezoneCheckedLabel, {
          "class": 'k-checkbox-label',
          editorId: 'k-scheduler-editor-set-end-timezone',
          attrs: _this.v3 ? undefined : {
            editorId: 'k-scheduler-editor-set-end-timezone'
          },
          style: {
            display: 'inline-flex'
          }
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventSeparateTimeZones, main_1.messages[main_1.editorEventSeparateTimeZones])];
        } : [localization.toLanguageString(main_1.editorEventSeparateTimeZones, main_1.messages[main_1.editorEventSeparateTimeZones])])];
      } : [h("div", {
        className: "k-form-field-wrap",
        attrs: _this.v3 ? undefined : {
          className: "k-form-field-wrap"
        }
      }, [h(EndTimezoneCheckedEditor, {
        id: 'k-scheduler-editor-set-end-timezone',
        attrs: _this.v3 ? undefined : {
          id: 'k-scheduler-editor-set-end-timezone',
          value: _this.endZoneChecked
        },
        onChange: _this.handleEndZoneCheckboxChange,
        on: _this.v3 ? undefined : {
          "change": _this.handleEndZoneCheckboxChange
        },
        value: _this.endZoneChecked
      })]), h(EndTimezoneCheckedLabel, {
        "class": 'k-checkbox-label',
        editorId: 'k-scheduler-editor-set-end-timezone',
        attrs: _this.v3 ? undefined : {
          editorId: 'k-scheduler-editor-set-end-timezone'
        },
        style: {
          display: 'inline-flex'
        }
      }, _this.v3 ? function () {
        return [localization.toLanguageString(main_1.editorEventSeparateTimeZones, main_1.messages[main_1.editorEventSeparateTimeZones])];
      } : [localization.toLanguageString(main_1.editorEventSeparateTimeZones, main_1.messages[main_1.editorEventSeparateTimeZones])])]), _this.endZoneChecked && h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.endTimezone,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.endTimezone,
            component: endTimezoneLabel
          },
          component: endTimezoneLabel,
          "class": 'k-form-label'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventEndTimeZone, main_1.messages[main_1.editorEventEndTimeZone])];
        } : [localization.toLanguageString(main_1.editorEventEndTimeZone, main_1.messages[main_1.editorEventEndTimeZone])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          value: endTimezone,
          attrs: _this.v3 ? undefined : {
            value: endTimezone,
            dataItems: timezones,
            validator: _this.endTimezoneValidator,
            component: endTimezoneEditor,
            name: _this.ks.fields.endTimezone
          },
          dataItems: timezones,
          validator: _this.endTimezoneValidator,
          component: endTimezoneEditor,
          name: _this.ks.fields.endTimezone
        }), _this.kendoForm.errors[_this.ks.fields.endTimezone] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.endTimezone,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.endTimezone,
            component: endTimezoneError
          },
          component: endTimezoneError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.endTimezone]];
        } : [_this.kendoForm.errors[_this.ks.fields.endTimezone]])])];
      } : [h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.endTimezone,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.endTimezone,
          component: endTimezoneLabel
        },
        component: endTimezoneLabel,
        "class": 'k-form-label'
      }, _this.v3 ? function () {
        return [localization.toLanguageString(main_1.editorEventEndTimeZone, main_1.messages[main_1.editorEventEndTimeZone])];
      } : [localization.toLanguageString(main_1.editorEventEndTimeZone, main_1.messages[main_1.editorEventEndTimeZone])]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_form_1.Field, {
        value: endTimezone,
        attrs: _this.v3 ? undefined : {
          value: endTimezone,
          dataItems: timezones,
          validator: _this.endTimezoneValidator,
          component: endTimezoneEditor,
          name: _this.ks.fields.endTimezone
        },
        dataItems: timezones,
        validator: _this.endTimezoneValidator,
        component: endTimezoneEditor,
        name: _this.ks.fields.endTimezone
      }), _this.kendoForm.errors[_this.ks.fields.endTimezone] && h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.endTimezone,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.endTimezone,
          component: endTimezoneError
        },
        component: endTimezoneError
      }, _this.v3 ? function () {
        return [_this.kendoForm.errors[_this.ks.fields.endTimezone]];
      } : [_this.kendoForm.errors[_this.ks.fields.endTimezone]])])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.isAllDay,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.isAllDay,
            component: kendo_vue_labels_1.Label
          },
          component: kendo_vue_labels_1.Label,
          "class": 'k-form-label'
        }), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          id: 'k-is-allday-checkbox',
          attrs: _this.v3 ? undefined : {
            id: 'k-is-allday-checkbox',
            name: _this.ks.fields.isAllDay,
            component: allDayEditor
          },
          name: _this.ks.fields.isAllDay,
          component: allDayEditor
        }), h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.isAllDay,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.isAllDay,
            field: _this.ks.fields.isAllDay,
            editorId: 'k-is-allday-checkbox',
            component: allDayLabel
          },
          field: _this.ks.fields.isAllDay,
          editorId: 'k-is-allday-checkbox',
          "class": 'k-checkbox-label',
          component: allDayLabel
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventAllDay, main_1.messages[main_1.editorEventAllDay])];
        } : [localization.toLanguageString(main_1.editorEventAllDay, main_1.messages[main_1.editorEventAllDay])])])];
      } : [h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.isAllDay,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.isAllDay,
          component: kendo_vue_labels_1.Label
        },
        component: kendo_vue_labels_1.Label,
        "class": 'k-form-label'
      }), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_form_1.Field, {
        id: 'k-is-allday-checkbox',
        attrs: _this.v3 ? undefined : {
          id: 'k-is-allday-checkbox',
          name: _this.ks.fields.isAllDay,
          component: allDayEditor
        },
        name: _this.ks.fields.isAllDay,
        component: allDayEditor
      }), h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.isAllDay,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.isAllDay,
          field: _this.ks.fields.isAllDay,
          editorId: 'k-is-allday-checkbox',
          component: allDayLabel
        },
        field: _this.ks.fields.isAllDay,
        editorId: 'k-is-allday-checkbox',
        "class": 'k-checkbox-label',
        component: allDayLabel
      }, _this.v3 ? function () {
        return [localization.toLanguageString(main_1.editorEventAllDay, main_1.messages[main_1.editorEventAllDay])];
      } : [localization.toLanguageString(main_1.editorEventAllDay, main_1.messages[main_1.editorEventAllDay])])])]), h("div", {
        "class": "k-recurrence-editor"
      }, [h(kendo_vue_form_1.Field, {
        component: recurrenceEditor,
        attrs: _this.v3 ? undefined : {
          component: recurrenceEditor,
          changeOnInput: false,
          field: _this.ks.fields.recurrenceRule,
          name: _this.ks.fields.recurrenceRule,
          start: start
        },
        changeOnInput: false,
        field: _this.ks.fields.recurrenceRule,
        name: _this.ks.fields.recurrenceRule,
        start: start
      })]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.description,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.description,
            component: descriptionLabel
          },
          component: descriptionLabel,
          "class": 'k-form-label'
        }, _this.v3 ? function () {
          return [localization.toLanguageString(main_1.editorEventDescription, main_1.messages[main_1.editorEventDescription])];
        } : [localization.toLanguageString(main_1.editorEventDescription, main_1.messages[main_1.editorEventDescription])]), h("div", {
          "class": "k-form-field-wrap"
        }, [h(kendo_vue_form_1.Field, {
          component: descriptionEditor,
          attrs: _this.v3 ? undefined : {
            component: descriptionEditor,
            name: _this.ks.fields.description,
            rows: 1,
            id: 'k-event-description'
          },
          name: _this.ks.fields.description,
          rows: 1,
          id: 'k-event-description'
        }), _this.kendoForm.errors[_this.ks.fields.description] && h(kendo_vue_form_1.Field, {
          name: _this.ks.fields.description,
          attrs: _this.v3 ? undefined : {
            name: _this.ks.fields.description,
            component: descriptionError
          },
          component: descriptionError
        }, _this.v3 ? function () {
          return [_this.kendoForm.errors[_this.ks.fields.description]];
        } : [_this.kendoForm.errors[_this.ks.fields.description]])])];
      } : [h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.description,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.description,
          component: descriptionLabel
        },
        component: descriptionLabel,
        "class": 'k-form-label'
      }, _this.v3 ? function () {
        return [localization.toLanguageString(main_1.editorEventDescription, main_1.messages[main_1.editorEventDescription])];
      } : [localization.toLanguageString(main_1.editorEventDescription, main_1.messages[main_1.editorEventDescription])]), h("div", {
        "class": "k-form-field-wrap"
      }, [h(kendo_vue_form_1.Field, {
        component: descriptionEditor,
        attrs: _this.v3 ? undefined : {
          component: descriptionEditor,
          name: _this.ks.fields.description,
          rows: 1,
          id: 'k-event-description'
        },
        name: _this.ks.fields.description,
        rows: 1,
        id: 'k-event-description'
      }), _this.kendoForm.errors[_this.ks.fields.description] && h(kendo_vue_form_1.Field, {
        name: _this.ks.fields.description,
        attrs: _this.v3 ? undefined : {
          name: _this.ks.fields.description,
          component: descriptionError
        },
        component: descriptionError
      }, _this.v3 ? function () {
        return [_this.kendoForm.errors[_this.ks.fields.description]];
      } : [_this.kendoForm.errors[_this.ks.fields.description]])])]), (_this.ks.props.resources || []).map(function (resource) {
        var _this2 = this;
        return h(kendo_vue_form_1.FieldWrapper, {
          key: resource.field
        }, this.v3 ? function () {
          return [h(kendo_vue_form_1.Field, {
            name: resource.field,
            attrs: _this2.v3 ? undefined : {
              name: resource.field,
              component: resourceLabel
            },
            component: resourceLabel,
            "class": 'k-form-label'
          }), h(kendo_vue_labels_1.Label, {
            "class": 'k-form-label'
          }, _this2.v3 ? function () {
            return [resource.name];
          } : [resource.name]), h(kendo_vue_form_1.Field, {
            name: resource.field,
            attrs: _this2.v3 ? undefined : {
              name: resource.field,
              component: resourceEditor,
              resource: resource,
              multiple: resource.multiple,
              dataItems: resource.data,
              textField: resource.textField,
              valueField: resource.valueField,
              colorField: resource.colorField
            },
            component: resourceEditor,
            resource: resource,
            multiple: resource.multiple,
            dataItems: resource.data,
            textField: resource.textField,
            valueField: resource.valueField,
            colorField: resource.colorField
          }), _this2.kendoForm.errors[resource.field] && h(kendo_vue_form_1.Field, {
            name: resource.field,
            attrs: _this2.v3 ? undefined : {
              name: resource.field,
              component: kendo_vue_labels_1.Error
            },
            component: kendo_vue_labels_1.Error
          }, _this2.v3 ? function () {
            return [_this2.kendoForm.errors[resource.field]];
          } : [_this2.kendoForm.errors[resource.field]])];
        } : [h(kendo_vue_form_1.Field, {
          name: resource.field,
          attrs: _this2.v3 ? undefined : {
            name: resource.field,
            component: resourceLabel
          },
          component: resourceLabel,
          "class": 'k-form-label'
        }), h(kendo_vue_labels_1.Label, {
          "class": 'k-form-label'
        }, _this2.v3 ? function () {
          return [resource.name];
        } : [resource.name]), h(kendo_vue_form_1.Field, {
          name: resource.field,
          attrs: _this2.v3 ? undefined : {
            name: resource.field,
            component: resourceEditor,
            resource: resource,
            multiple: resource.multiple,
            dataItems: resource.data,
            textField: resource.textField,
            valueField: resource.valueField,
            colorField: resource.colorField
          },
          component: resourceEditor,
          resource: resource,
          multiple: resource.multiple,
          dataItems: resource.data,
          textField: resource.textField,
          valueField: resource.valueField,
          colorField: resource.colorField
        }), _this2.kendoForm.errors[resource.field] && h(kendo_vue_form_1.Field, {
          name: resource.field,
          attrs: _this2.v3 ? undefined : {
            name: resource.field,
            component: kendo_vue_labels_1.Error
          },
          component: kendo_vue_labels_1.Error
        }, _this2.v3 ? function () {
          return [_this2.kendoForm.errors[resource.field]];
        } : [_this2.kendoForm.errors[resource.field]])]);
      }, _this), defaultSlots])
    );
  },
  methods: {
    handleStartZoneCheckboxChange: function handleStartZoneCheckboxChange(e) {
      if (!e.value) {
        this.$emit('change', this.ks.fields.startTimezone, {
          value: null
        });
        this.$emit('change', this.ks.fields.endTimezone, {
          value: null
        });
        this.endZoneChecked = e.value;
      }
      this.startZoneChecked = e.value;
    },
    handleEndZoneCheckboxChange: function handleEndZoneCheckboxChange(e) {
      if (!e.value) {
        this.$emit('change', this.ks.fields.endTimezone, {
          value: null
        });
      }
      this.endZoneChecked = e.value;
    },
    requiredValidator: function requiredValidator(value) {
      return value ? undefined : this.requiredValidationMessage;
    },
    startTimezoneValidator: function startTimezoneValidator(_dataItem, formValueGetter) {
      return this.startZoneChecked ? this.requiredValidator(formValueGetter(this.ks.fields.startTimezone)) : undefined;
    },
    endTimezoneValidator: function endTimezoneValidator(_dataItem, formValueGetter) {
      return this.startZoneChecked && this.endZoneChecked ? this.requiredValidator(formValueGetter(this.ks.fields.endTimezone)) || this.requiredValidator(formValueGetter(this.ks.fields.startTimezone)) : undefined;
    }
  }
};
exports.SchedulerFormEditorVue2 = SchedulerFormEditorVue2;
/**
 * @hidden
 */
var SchedulerFormEditor = SchedulerFormEditorVue2;
exports.SchedulerFormEditor = SchedulerFormEditor;