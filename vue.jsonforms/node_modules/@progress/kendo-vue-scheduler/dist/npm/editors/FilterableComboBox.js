"use strict";

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FilterableComboBoxVue2 = exports.FilterableComboBox = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var inject = allVue.inject;
var kendo_data_query_1 = require("@progress/kendo-data-query");
var kendo_vue_dropdowns_1 = require("@progress/kendo-vue-dropdowns");
/**
 * @hidden
 */
var FilterableComboBoxVue2 = {
  name: 'KendoFilterableComboBox',
  props: {
    value: [String, Number, Object],
    dataItems: Array,
    validationMessage: String,
    touched: Boolean,
    modified: Boolean,
    visited: Boolean,
    valid: Boolean,
    name: String
  },
  data: function data() {
    return {
      filteredData: this.$props.dataItems
    };
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    var kendoLocalizationService = inject('kendoLocalizationService', {});
    return {
      v3: v3,
      kendoLocalizationService: kendoLocalizationService
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
      data = _a.data,
      validationMessage = _a.validationMessage,
      visited = _a.visited,
      touched = _a.touched,
      modified = _a.modified,
      others = __rest(_a, ["data", "validationMessage", "visited", "touched", "modified"]);
    return h(kendo_vue_dropdowns_1.ComboBox, {
      dataItems: this.filteredData,
      attrs: this.v3 ? undefined : {
        dataItems: this.filteredData,
        filterable: true
      },
      filterable: true,
      onFilterChange: this.onFilterChange,
      on: this.v3 ? undefined : {
        "filterChange": this.onFilterChange,
        "change": this.onValueChange
      },
      onChange: this.onValueChange
    });
  },
  methods: {
    onValueChange: function onValueChange(e) {
      this.$emit('change', e);
    },
    onFilterChange: function onFilterChange(event) {
      var newData = (0, kendo_data_query_1.filterBy)(this.$props.dataItems || [], event.filter);
      this.filteredData = newData;
    }
  }
};
exports.FilterableComboBoxVue2 = FilterableComboBoxVue2;
/**
 * @hidden
 */
var FilterableComboBox = FilterableComboBoxVue2;
exports.FilterableComboBox = FilterableComboBox;