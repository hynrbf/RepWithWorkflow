"use strict";

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AgendaViewVue2 = exports.AgendaView = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var BaseView_1 = require("../../components/BaseView");
var VerticalResourceIterator_1 = require("../common/VerticalResourceIterator");
var main_1 = require("../../hooks/main");
var main_2 = require("../../constants/main");
var kendo_date_math_1 = require("@progress/kendo-date-math");
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var rangeService_1 = require("../../services/rangeService");
var occurrenceService_1 = require("../../services/occurrenceService");
var itemsService_1 = require("../../services/itemsService");
var main_3 = require("../../utils/main");
var main_4 = require("../../services/main");
var AgendaViewHead_1 = require("./AgendaViewHead");
var AgendaViewBody_1 = require("./AgendaViewBody");
var SchedulerEditTask_1 = require("../../tasks/SchedulerEditTask");
var SchedulerEditSlot_1 = require("../../slots/SchedulerEditSlot");
/**
 * @hidden
 */
var AgendaViewVue2 = {
  name: 'KendoAgendaView',
  props: {
    name: {
      type: String,
      default: 'agenda'
    },
    // title: (localization: LocalizationService): string =>
    // localization.toLanguageString(agendaViewTitle, messages[agendaViewTitle]),
    dateRange: {
      type: [Function, Object],
      default: function _default() {
        return agendaViewDateRange;
      }
    },
    selectedDateFormat: {
      type: String,
      default: '{0:D} - {1:D}'
    },
    selectedShortDateFormat: {
      type: String,
      default: '{0:d} - {1:d}'
    },
    slotDuration: {
      type: Number,
      default: 60 * 24
    },
    slotDivisions: {
      type: Number,
      default: 1
    },
    step: {
      type: Number,
      default: main_2.DAYS_IN_WEEK_COUNT
    },
    numberOfDays: {
      type: Number,
      default: main_2.DAYS_IN_WEEK_COUNT
    },
    task: [String, Function, Object],
    editable: {
      type: [Boolean, Object],
      default: false
    }
  },
  inject: {
    ks: {
      default: null
    },
    kendoLocalizationService: {
      default: null
    },
    kendoIntlService: {
      default: null
    }
  },
  created: function created() {
    this.intl = (0, kendo_vue_intl_1.provideIntlService)(this);
  },
  mounted: function mounted() {
    (0, main_1.useCellSync)({
      element: this.$el,
      selector: '.k-scheduler-datecolumn',
      explicitDepth: false
    });
    (0, main_1.useCellSync)({
      element: this.$el,
      selector: '.k-scheduler-timecolumn',
      explicitDepth: false
    });
  },
  updated: function updated() {
    (0, main_1.useCellSync)({
      element: this.$el,
      selector: '.k-scheduler-datecolumn',
      explicitDepth: false
    });
    (0, main_1.useCellSync)({
      element: this.$el,
      selector: '.k-scheduler-timecolumn',
      explicitDepth: false
    });
  },
  computed: {
    ranges: function ranges() {
      return (0, rangeService_1.toRanges)(this.ks.dateRange, {
        step: kendo_date_math_1.MS_PER_DAY,
        timezone: this.ks.timezone
      });
    },
    agendaSlots: function agendaSlots() {
      return (0, main_4.toSlots)(this.ks.dateRange, {
        step: kendo_date_math_1.MS_PER_DAY
      }, {
        groups: this.ks.groups,
        ranges: this.ranges
      });
    },
    occurrences: function occurrences() {
      return (0, occurrenceService_1.toOccurrences)(this.ks.dataItems, {
        dateRange: this.ks.dateRange,
        fields: this.ks.fields,
        timezone: this.ks.timezone
      });
    },
    items: function items() {
      var items = (0, itemsService_1.toItems)(this.occurrences, {
        timezone: this.ks.timezone
      }, {
        groups: this.ks.groups,
        ranges: this.ranges
      });
      (0, main_3.mapItemsToSlots)(items, this.agendaSlots, true);
      (0, main_3.mapSlotsToItems)(items, this.agendaSlots, true);
      return items;
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;
    var h = gh || createElement;
    var EditTask = this.$props.editTask || SchedulerEditTask_1.SchedulerEditTask;
    var EditSlot = this.$props.editSlot || SchedulerEditSlot_1.SchedulerEditSlot;
    var intl = (0, kendo_vue_intl_1.provideIntlService)(this);
    var localization = (0, kendo_vue_intl_1.provideLocalizationService)(this);
    var agendaSlots = this.agendaSlots;
    return (
      // @ts-ignore  function children
      h(BaseView_1.BaseView, {
        id: this.$props.id,
        attrs: this.v3 ? undefined : {
          id: this.$props.id,
          viewProps: __assign({}, this.$props),
          baseSlots: this.items,
          ranges: this.ranges,
          isAgendaView: true
        },
        "class": 'k-scheduler-agendaview',
        viewProps: __assign({}, this.$props),
        baseSlots: this.items,
        ranges: this.ranges,
        isAgendaView: true
      }, this.v3 ? function () {
        return [h("div", {
          "class": "k-scheduler-head"
        }, [
        // @ts-ignore  function children
        h(VerticalResourceIterator_1.VerticalResourceIterator, {
          resources: _this.ks.props.resources,
          attrs: _this.v3 ? undefined : {
            resources: _this.ks.props.resources,
            group: _this.ks.props.group
          },
          group: _this.ks.props.group
        }, _this.v3 ? function () {
          return [
          // @ts-ignore
          h(AgendaViewHead_1.AgendaViewHead)];
        } : [h(AgendaViewHead_1.AgendaViewHead)])]),
        // @ts-ignore  function children
        h(VerticalResourceIterator_1.VerticalResourceIterator, {
          resources: _this.ks.props.resources,
          attrs: _this.v3 ? undefined : {
            resources: _this.ks.props.resources,
            group: _this.ks.props.group,
            nested: true
          },
          group: _this.ks.props.group,
          nested: true
        }, _this.v3 ? function () {
          return [h(AgendaViewBody_1.AgendaViewBody, {
            items: _this.items,
            attrs: _this.v3 ? undefined : {
              items: _this.items,
              agendaSlots: agendaSlots,
              task: _this.$props.task,
              editable: _this.$props.editable
            },
            agendaSlots: agendaSlots,
            task: _this.$props.task,
            editable: _this.$props.editable,
            onDataaction: _this.handleDataAction,
            on: _this.v3 ? undefined : {
              "dataaction": _this.handleDataAction
            }
          })];
        } : [h(AgendaViewBody_1.AgendaViewBody, {
          items: _this.items,
          attrs: _this.v3 ? undefined : {
            items: _this.items,
            agendaSlots: agendaSlots,
            task: _this.$props.task,
            editable: _this.$props.editable
          },
          agendaSlots: agendaSlots,
          task: _this.$props.task,
          editable: _this.$props.editable,
          onDataaction: _this.handleDataAction,
          on: _this.v3 ? undefined : {
            "dataaction": _this.handleDataAction
          }
        })])];
      } : [h("div", {
        "class": "k-scheduler-head"
      }, [h(VerticalResourceIterator_1.VerticalResourceIterator, {
        resources: _this.ks.props.resources,
        attrs: _this.v3 ? undefined : {
          resources: _this.ks.props.resources,
          group: _this.ks.props.group
        },
        group: _this.ks.props.group
      }, _this.v3 ? function () {
        return [h(AgendaViewHead_1.AgendaViewHead)];
      } : [h(AgendaViewHead_1.AgendaViewHead)])]), h(VerticalResourceIterator_1.VerticalResourceIterator, {
        resources: _this.ks.props.resources,
        attrs: _this.v3 ? undefined : {
          resources: _this.ks.props.resources,
          group: _this.ks.props.group,
          nested: true
        },
        group: _this.ks.props.group,
        nested: true
      }, _this.v3 ? function () {
        return [h(AgendaViewBody_1.AgendaViewBody, {
          items: _this.items,
          attrs: _this.v3 ? undefined : {
            items: _this.items,
            agendaSlots: agendaSlots,
            task: _this.$props.task,
            editable: _this.$props.editable
          },
          agendaSlots: agendaSlots,
          task: _this.$props.task,
          editable: _this.$props.editable,
          onDataaction: _this.handleDataAction,
          on: _this.v3 ? undefined : {
            "dataaction": _this.handleDataAction
          }
        })];
      } : [h(AgendaViewBody_1.AgendaViewBody, {
        items: _this.items,
        attrs: _this.v3 ? undefined : {
          items: _this.items,
          agendaSlots: agendaSlots,
          task: _this.$props.task,
          editable: _this.$props.editable
        },
        agendaSlots: agendaSlots,
        task: _this.$props.task,
        editable: _this.$props.editable,
        onDataaction: _this.handleDataAction,
        on: _this.v3 ? undefined : {
          "dataaction": _this.handleDataAction
        }
      })])])
    );
  },
  methods: {
    handleDataAction: function handleDataAction(action) {
      this.$emit('dataaction', action);
    }
  }
};
exports.AgendaViewVue2 = AgendaViewVue2;
var GET_START_DATE = function GET_START_DATE(date) {
  return (0, kendo_date_math_1.getDate)(date);
};
var GET_END_DATE = function GET_END_DATE(start, numberOfDays) {
  return (0, kendo_date_math_1.getDate)((0, kendo_date_math_1.addDays)(start, numberOfDays || 1));
};
var agendaViewDateRange = function agendaViewDateRange(_a) {
  var intl = _a.intl,
    date = _a.date,
    _b = _a.numberOfDays,
    numberOfDays = _b === void 0 ? 1 : _b,
    timezone = _a.timezone;
  var normalized = kendo_date_math_1.ZonedDate.fromLocalDate(date, timezone);
  var firstDate = numberOfDays === main_2.DAYS_IN_WEEK_COUNT ? GET_START_DATE((0, kendo_date_math_1.firstDayInWeek)(normalized, intl.firstDay())) : GET_START_DATE(normalized);
  var lastDate = GET_END_DATE(firstDate, numberOfDays);
  var zonedStart = kendo_date_math_1.ZonedDate.fromUTCDate((0, main_3.toUTCDateTime)(firstDate), timezone);
  var zonedEnd = kendo_date_math_1.ZonedDate.fromUTCDate((0, main_3.toUTCDateTime)(lastDate), timezone);
  var start = new Date(zonedStart.getTime());
  var end = new Date(zonedEnd.getTime());
  return {
    start: start,
    end: end,
    zonedStart: zonedStart,
    zonedEnd: zonedEnd
  };
};
/**
 * @hidden
 */
var AgendaView = AgendaViewVue2;
exports.AgendaView = AgendaView;