"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VerticalResourceIteratorVue2 = exports.VerticalResourceIterator = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var inject = allVue.inject;
var utils_1 = require("./utils");
var SchedulerResourceIteratorContext_1 = require("../../context/SchedulerResourceIteratorContext");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var DayViewVerticalSlotsRow_1 = require("../day/DayViewVerticalSlotsRow");
var MonthViewBody_1 = require("../month/MonthViewBody");
var TimelineViewBody_1 = require("../time/TimelineViewBody");
var FIRST_INDEX = 0;
/** @hidden */
var VerticalResourceIteratorVue2 = {
  name: 'KendoVerticalResourceIterator',
  props: {
    more: Object,
    group: Object,
    resources: Array,
    nested: Boolean,
    wrapGroup: Boolean,
    cellContent: Object,
    emptyCell: Boolean
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var that = this;
    var defaultSlot = (0, kendo_vue_common_1.getDefaultSlots)(this);
    var _a = this.$props,
      nested = _a.nested,
      wrapGroup = _a.wrapGroup,
      more = _a.more;
    var cellContent = this.$props.cellContent || DefaultCellContent;
    var resources = (0, utils_1.toGroupResources)(this.$props.group, this.$props.resources);
    var depth = 0;
    var groupIndex = 0;
    var renderMore = function renderMore(_resource, currentGroupIndex) {
      return more ? more.timelineSlots ? h(TimelineViewBody_1.TimelineViewBody, {
        slotRender: more.slotRender,
        attrs: this.v3 ? undefined : {
          slotRender: more.slotRender,
          viewSlot: more.viewSlot,
          groupIndex: currentGroupIndex,
          ranges: more.ranges,
          workDayStart: more.workDayStart,
          workDayEnd: more.workDayEnd,
          timelineSlots: more.timelineSlots,
          editable: more.editable
        },
        viewSlot: more.viewSlot,
        groupIndex: currentGroupIndex,
        ranges: more.ranges,
        workDayStart: more.workDayStart,
        workDayEnd: more.workDayEnd,
        timelineSlots: more.timelineSlots,
        onDataaction: this.handleDataAction,
        on: this.v3 ? undefined : {
          "dataaction": this.handleDataAction
        },
        editable: more.editable
      }) : more.monthSlots ? more.ranges.map(function (_, rangeIndex) {
        return h(MonthViewBody_1.MonthViewBody, {
          slotRender: more.slotRender,
          attrs: this.v3 ? undefined : {
            slotRender: more.slotRender,
            viewSlot: more.viewSlot,
            ranges: more.ranges,
            groupIndex: currentGroupIndex,
            monthSlots: more.monthSlots,
            rangeIndex: rangeIndex,
            itemsPerSlot: more.itemsPerSlot,
            editable: more.editable
          },
          viewSlot: more.viewSlot,
          ranges: more.ranges,
          groupIndex: currentGroupIndex,
          monthSlots: more.monthSlots,
          rangeIndex: rangeIndex,
          itemsPerSlot: more.itemsPerSlot,
          onDataaction: this.handleDataAction,
          on: this.v3 ? undefined : {
            "dataaction": this.handleDataAction
          },
          editable: more.editable
        });
      }, this) : more.timeSlots.filter(function (s) {
        return s.group.index === currentGroupIndex && s.range.index === FIRST_INDEX;
      }).map(function (root, rootIndex, filtered) {
        return h(DayViewVerticalSlotsRow_1.DayViewVerticalSlotsRow, {
          slotRender: more.slotRender,
          attrs: this.v3 ? undefined : {
            slotRender: more.slotRender,
            viewSlot: more.viewSlot,
            groupIndex: currentGroupIndex,
            root: root,
            rootIndex: rootIndex,
            filtered: filtered,
            timeRanges: more.timeRanges,
            timeSlots: more.timeSlots,
            workDayStart: more.workDayStart,
            workDayEnd: more.workDayEnd,
            numberOfDays: more.numberOfDays,
            workWeekStart: more.workWeekStart,
            workWeekEnd: more.workWeekEnd,
            editable: more.editable,
            currentTimeMarker: more.currentTimeMarker
          },
          viewSlot: more.viewSlot,
          groupIndex: currentGroupIndex,
          onDataaction: this.handleDataAction,
          on: this.v3 ? undefined : {
            "dataaction": this.handleDataAction
          },
          root: root,
          rootIndex: rootIndex,
          filtered: filtered,
          timeRanges: more.timeRanges,
          timeSlots: more.timeSlots,
          workDayStart: more.workDayStart,
          workDayEnd: more.workDayEnd,
          numberOfDays: more.numberOfDays,
          workWeekStart: more.workWeekStart,
          workWeekEnd: more.workWeekEnd,
          editable: more.editable,
          currentTimeMarker: more.currentTimeMarker
        });
      }, this) : null;
    };
    var renderResourcesWrapped = function renderResourcesWrapped(args) {
      return h("div", {
        "class": "k-scheduler-row"
      }, [h("div", {
        "class": "k-scheduler-row"
      }, [args.resources.map(function (_, index) {
        return h("div", {
          key: index,
          "class": "k-scheduler-cell k-resource-cell k-heading-cell",
          "data-depth-index": index,
          attrs: this.v3 ? undefined : {
            "data-depth-index": index
          }
        });
      }, this)])]);
    };
    var renderResourcesRecursively = function renderResourcesRecursively(args, headers) {
      if (headers === void 0) {
        headers = true;
      }
      var children = args.children;
      var hasGroups = args.resources.length > 0;
      if (args.depth === args.resources.length || !hasGroups) {
        return [
        // @ts-ignore  function children
        h(SchedulerResourceIteratorContext_1.SchedulerResourceIteratorContext, {
          noWrap: true,
          attrs: this.v3 ? undefined : {
            noWrap: true,
            resource: args.resources[args.depth],
            groupIndex: hasGroups ? args.groupIndex : 0
          },
          resource: args.resources[args.depth],
          groupIndex: hasGroups ? args.groupIndex : 0
        }, this.v3 ? function () {
          return [(0, kendo_vue_common_1.getDefaultSlots)(that)];
        } : [(0, kendo_vue_common_1.getDefaultSlots)(that)]), renderMore.call(this, args.resources[args.depth], hasGroups ? args.groupIndex : 0)];
      }
      var dataLength = args.resources[args.depth].data.length;
      return args.resources[args.depth].data.map(function (dataItem, dataIndex) {
        return h("div", {
          key: dataIndex,
          "class": "k-scheduler-row"
        }, [headers && h("div", {
          "class": "k-scheduler-cell k-group-cell k-heading-cell",
          "data-depth-index": args.depth,
          attrs: this.v3 ? undefined : {
            "data-depth-index": args.depth
          }
        }, [dataItem.text]), h("div", {
          "class": "k-scheduler-cell k-group-content k-resource-row",
          "data-depth-index": args.depth,
          attrs: this.v3 ? undefined : {
            "data-depth-index": args.depth,
            "data-resource-index": dataLength * args.groupIndex + dataIndex
          },
          "data-resource-index": dataLength * args.groupIndex + dataIndex
        }, [renderResourcesRecursively.call(this, {
          resources: args.resources,
          children: children,
          cellContent: args.cellContent,
          groupIndex: dataLength * args.groupIndex + dataIndex,
          depth: args.depth + 1
        }, headers)])]);
      }, this);
    };
    var renderResourcesRecursivelyWrapped = function renderResourcesRecursivelyWrapped(args) {
      var children = args.children;
      var dataLength = args.resources.length ? args.resources[args.depth].data.length : 0;
      if (!args.resources[args.depth]) {
        return null;
      }
      return args.resources[args.depth].data.map(function (dataItem, dataIndex) {
        return h("div", {
          key: dataIndex,
          "class": "k-scheduler-row"
        }, [h("div", {
          "class": "k-scheduler-cell k-resource-cell k-resource-row k-heading-cell",
          "data-depth-index": args.depth,
          attrs: this.v3 ? undefined : {
            "data-depth-index": args.depth,
            "data-resource-index": dataLength * args.groupIndex + dataIndex
          },
          "data-resource-index": dataLength * args.groupIndex + dataIndex
        }, [dataItem.text]), args.depth + 1 !== resources.length && h("div", {
          "class": "k-scheduler-cell k-resource-content"
        }, [renderResourcesRecursivelyWrapped.call(this, {
          resources: resources,
          children: children,
          cellContent: args.cellContent,
          groupIndex: dataLength * args.groupIndex + dataIndex,
          depth: args.depth + 1
        })])]);
      }, this);
    };
    var renderGroupContentRecursively = function renderGroupContentRecursively(args) {
      var children = args.children;
      var hasGroups = args.resources.length > 0;
      if (args.depth === args.resources.length || !hasGroups) {
        return (
          // @ts-ignore  function children
          h(SchedulerResourceIteratorContext_1.SchedulerResourceIteratorContext, {
            noWrap: true,
            attrs: this.v3 ? undefined : {
              noWrap: true,
              resource: args.resources[args.depth],
              groupIndex: hasGroups ? args.groupIndex : undefined
            },
            resource: args.resources[args.depth],
            groupIndex: hasGroups ? args.groupIndex : undefined
          }, this.v3 ? function () {
            return [children];
          } : [children])
        );
      }
      var dataLength = args.resources[args.depth].data.length;
      return args.resources[args.depth].data.map(function (_dataItem, dataIndex) {
        return h("div", {
          key: dataIndex,
          "class": "k-scheduler-row"
        }, [h("div", {
          "class": "k-scheduler-cell k-group-content"
        }, [renderGroupContentRecursively.call(this, {
          resources: args.resources,
          children: children,
          cellContent: args.cellContent,
          groupIndex: dataLength * args.groupIndex + dataIndex,
          depth: args.depth + 1
        })])]);
      }, this);
    };
    var renderResources = function renderResources(args) {
      var children = args.children;
      return h("div", {
        "class": "k-scheduler-row"
      }, [cellPrefix.call(this, args.resources), this.emptyCell && h("div", {
        "class": "k-scheduler-cell k-side-cell"
      }), cellChildren.call(this, children, args.resources, args.groupIndex)]);
    };
    var cellChildren = function cellChildren(children, currentResources, currentGroupIndex) {
      var hasGroups = currentResources.length > 0;
      return (
        // @ts-ignore  function children
        h(SchedulerResourceIteratorContext_1.SchedulerResourceIteratorContext, {
          noWrap: true,
          attrs: this.v3 ? undefined : {
            noWrap: true,
            resource: currentResources[currentGroupIndex],
            groupIndex: hasGroups ? currentGroupIndex : undefined
          },
          resource: currentResources[currentGroupIndex],
          groupIndex: hasGroups ? currentGroupIndex : undefined
        }, this.v3 ? function () {
          return [h("div", {
            "class": "k-scheduler-cell k-group-content"
          }, [children])];
        } : [h("div", {
          "class": "k-scheduler-cell k-group-content"
        }, [children])])
      );
    };
    var cellPrefix = function cellPrefix(currentResources) {
      return currentResources.map(function (_, index) {
        return h("div", {
          key: index,
          "class": "k-scheduler-cell k-group-cell k-heading-cell",
          "data-depth-index": index,
          attrs: this.v3 ? undefined : {
            "data-depth-index": index
          }
        });
      }, this);
    };
    return h("div", {
      "class": "k-scheduler-group"
    }, [nested ? wrapGroup ? h("div", {
      "class": "k-scheduler-row"
    }, [h("div", {
      "class": "k-sticky-cell"
    }, [renderResourcesRecursivelyWrapped.call(this, {
      resources: resources,
      children: defaultSlot,
      cellContent: cellContent,
      depth: depth,
      groupIndex: groupIndex
    })]), h("div", {
      "class": "k-scheduler-cell k-group-content"
    }, [renderResourcesRecursively.call(this, {
      resources: resources,
      children: defaultSlot,
      cellContent: cellContent,
      depth: depth,
      groupIndex: groupIndex
    }, false)])]) : renderResourcesRecursively.call(this, {
      resources: resources,
      children: defaultSlot,
      cellContent: cellContent,
      depth: depth,
      groupIndex: groupIndex
    }, true) : wrapGroup ? h("div", {
      "class": "k-scheduler-row"
    }, [h("div", {
      "class": "k-sticky-cell"
    }, [renderResourcesWrapped.call(this, {
      resources: resources,
      children: defaultSlot,
      cellContent: cellContent,
      depth: depth,
      groupIndex: groupIndex
    })]), h("div", {
      "class": "k-scheduler-cell k-group-content"
    }, [defaultSlot])]) : renderResources.call(this, {
      resources: resources,
      children: defaultSlot,
      cellContent: cellContent,
      depth: depth,
      groupIndex: groupIndex
    })]);
  },
  methods: {
    handleDataAction: function handleDataAction(action) {
      this.$emit('dataaction', action);
    }
  }
};
exports.VerticalResourceIteratorVue2 = VerticalResourceIteratorVue2;
/** @hidden */
var DefaultCellContent = null;
/** @hidden */
var VerticalResourceIterator = VerticalResourceIteratorVue2;
exports.VerticalResourceIterator = VerticalResourceIterator;