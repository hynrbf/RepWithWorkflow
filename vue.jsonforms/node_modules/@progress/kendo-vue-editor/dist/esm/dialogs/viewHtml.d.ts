import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { EditorToolsSettings } from '../config/toolsSettings';
import { EditorDialogProps } from './EditorDialogProps';
export interface ViewHtmlDialogProps extends EditorDialogProps {
    /**
     * The `ViewHtmlSettings` object.
     */
    settings: EditorToolsSettings.ViewHtmlSettings;
}
/**
 * @hidden
 */
export interface ViewHtmlDialogState {
    htmlArea: HTMLTextAreaElement | null;
}
/**
 * @hidden
 */
export interface ViewHtmlDialogComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ViewHtmlDialogMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ViewHtmlDialogData {
    currentActive: boolean;
}
/**
 * @hidden
 */
export interface ViewHtmlDialogAll extends Vue2type, ViewHtmlDialogMethods, ViewHtmlDialogData, ViewHtmlDialogComputed, ViewHtmlDialogState {
}
/**
 * @hidden
 */
declare let ViewHtmlDialogVue2: ComponentOptions<ViewHtmlDialogAll, DefaultData<ViewHtmlDialogData>, DefaultMethods<ViewHtmlDialogAll>, ViewHtmlDialogComputed, RecordPropsDefinition<ViewHtmlDialogProps>>;
/**
 * @hidden
 */
declare const ViewHtmlDialog: DefineComponent<ViewHtmlDialogProps, any, ViewHtmlDialogData, ViewHtmlDialogComputed, ViewHtmlDialogMethods, {}, {}, {}, string, ViewHtmlDialogProps, ViewHtmlDialogProps, {}>;
export { ViewHtmlDialog, ViewHtmlDialogVue2 };
