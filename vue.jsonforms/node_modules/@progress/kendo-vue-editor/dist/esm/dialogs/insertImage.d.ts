import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { EditorToolsSettings } from '../config/toolsSettings';
import { EditorDialogProps } from './EditorDialogProps';
export interface InsertImageDialogProps extends EditorDialogProps {
    /**
     * The `ImageSettings` object.
     */
    settings: EditorToolsSettings.ImageSettings;
}
/**
 * @hidden
 */
export interface InsertImageDialogState {
    src: HTMLInputElement | null;
    altText: HTMLInputElement | null;
    title: HTMLInputElement | null;
    width: HTMLInputElement | null;
    height: HTMLInputElement | null;
}
/**
 * @hidden
 */
export interface InsertImageDialogComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface InsertImageDialogMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface InsertImageDialogData {
}
/**
 * @hidden
 */
export interface InsertImageDialogAll extends Vue2type, InsertImageDialogMethods, InsertImageDialogData, InsertImageDialogComputed, InsertImageDialogState {
}
/**
 * @hidden
 */
declare let InsertImageDialogVue2: ComponentOptions<InsertImageDialogAll, DefaultData<InsertImageDialogData>, DefaultMethods<InsertImageDialogAll>, InsertImageDialogComputed, RecordPropsDefinition<InsertImageDialogProps>>;
/**
 * @hidden
 */
declare const InsertImageDialog: DefineComponent<InsertImageDialogProps, any, InsertImageDialogData, InsertImageDialogComputed, InsertImageDialogMethods, {}, {}, {}, string, InsertImageDialogProps, InsertImageDialogProps, {}>;
export { InsertImageDialog, InsertImageDialogVue2 };
