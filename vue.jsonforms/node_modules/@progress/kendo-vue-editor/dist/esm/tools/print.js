var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __rest = this && this.__rest || function (s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { Button as kbutton } from '@progress/kendo-vue-buttons';
import { provideLocalizationService } from '@progress/kendo-vue-intl';
import { messages } from '../messages/main.js';
import { EditorToolsSettings } from './../config/toolsSettings.js';
var print = EditorToolsSettings.print;
/**
 * @hidden
 */
var PrintVue2 = {
  name: 'KendoPrint',
  props: __assign({
    view: Object,
    settings: Object
  }, kbutton.props),
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
      view = _a.view,
      render = _a.render,
      _b = _a.settings,
      settings = _b === void 0 ? print : _b,
      other = __rest(_a, ["view", "render", "settings"]);
    var dom = view && view.dom;
    var doc = dom && dom.ownerDocument;
    var editorWindow = doc && doc.defaultView;
    var titleKey = settings.messages.title;
    var localization = provideLocalizationService(this);
    var buttonProps = __assign(__assign(__assign({}, other), {
      disabled: !editorWindow || editorWindow === window,
      title: localization.toLanguageString(titleKey, messages[titleKey])
    }), settings.props);
    var button = h(kbutton, __assign({
      onClick: this.handleClick,
      onMousedown: this.preventDefault,
      onPointerdown: this.preventDefault,
      on: this.v3 ? undefined : {
        'click': this.handleClick,
        'mousedown': this.preventDefault,
        'pointerdown': this.preventDefault
      },
      attrs: this.v3 ? undefined : buttonProps
    }, buttonProps));
    return button;
  },
  methods: {
    handleClick: function handleClick() {
      var dom = this.view && this.view.dom;
      var doc = dom && dom.ownerDocument;
      var editorWindow = doc && doc.defaultView;
      if (editorWindow) {
        editorWindow.print();
      }
    },
    preventDefault: function preventDefault(e) {
      e.preventDefault();
    }
  }
};
/**
 * @hidden
 */
var Print = PrintVue2;
export { Print, PrintVue2 };