import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { DropDownListProps } from '@progress/kendo-vue-dropdowns';
import { BasicToolProps, ToolRenderProp } from './ToolProps';
export interface DropDownListToolProps extends BasicToolProps, ToolRenderProp, DropDownListProps {
}
/**
 * @hidden
 */
export interface FontSizeProps extends DropDownListToolProps {
}
/**
 * @hidden
 */
export interface FontNameProps extends DropDownListToolProps {
}
/**
 * @hidden
 */
export interface FontNameState {
}
/**
 * @hidden
 */
export interface FontNameComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FontNameMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FontNameData {
}
/**
 * @hidden
 */
export interface FontNameAll extends Vue2type, FontNameMethods, FontNameData, FontNameComputed, FontNameState {
}
/**
 * @hidden
 */
declare let FontNameVue2: ComponentOptions<FontNameAll, DefaultData<FontNameData>, DefaultMethods<FontNameAll>, FontNameComputed, RecordPropsDefinition<FontNameProps>>;
/**
 * @hidden
 */
declare const FontName: DefineComponent<FontNameProps, any, FontNameData, FontNameComputed, FontNameMethods, {}, {}, {}, string, FontNameProps, FontNameProps, {}>;
export { FontName, FontNameVue2 };
