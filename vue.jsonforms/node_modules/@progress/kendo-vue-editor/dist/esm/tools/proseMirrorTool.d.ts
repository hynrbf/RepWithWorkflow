import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { EditorState, Transaction } from '@progress/kendo-editor-common';
import { ToolProps } from './ToolProps';
/**
 * @hidden
 */
export declare type ProseMirrorCommand = (state: EditorState, dispatch?: (tr: Transaction) => void) => boolean;
/**
 * @hidden
 */
export interface ProseMirrorState {
}
/**
 * @hidden
 */
export interface ProseMirrorComputed {
    [key: string]: any;
    command: any;
}
/**
 * @hidden
 */
export interface ProseMirrorMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ProseMirrorData {
}
/**
 * @hidden
 */
export interface ProseMirrorAll extends Vue2type, ProseMirrorMethods, ProseMirrorData, ProseMirrorComputed, ProseMirrorState {
}
/**
 * @hidden
 */
declare let ProseMirrorVue2: ComponentOptions<ProseMirrorAll, DefaultData<ProseMirrorData>, DefaultMethods<ProseMirrorAll>, ProseMirrorComputed, RecordPropsDefinition<ToolProps>>;
/**
 * @hidden
 */
declare const ProseMirror: DefineComponent<ToolProps, any, ProseMirrorData, ProseMirrorComputed, ProseMirrorMethods, {}, {}, {}, string, ToolProps, ToolProps, {}>;
export { ProseMirror, ProseMirrorVue2 };
