import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ToolProps } from './ToolProps';
export interface InlineFormatToolProps extends ToolProps {
}
/**
 * @hidden
 */
export interface BoldProps extends InlineFormatToolProps {
}
/**
 * @hidden
 */
export interface ItalicProps extends InlineFormatToolProps {
}
/**
 * @hidden
 */
export interface UnderlineProps extends InlineFormatToolProps {
}
/**
 * @hidden
 */
export interface StrikethroughProps extends InlineFormatToolProps {
}
/**
 * @hidden
 */
export interface SubscriptProps extends InlineFormatToolProps {
}
/**
 * @hidden
 */
export interface SuperscriptProps extends InlineFormatToolProps {
}
/**
 * @hidden
 */
export interface InlineFormatState {
}
/**
 * @hidden
 */
export interface InlineFormatComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface InlineFormatMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface InlineFormatData {
}
/**
 * @hidden
 */
export interface InlineFormatAll extends Vue2type, InlineFormatMethods, InlineFormatData, InlineFormatComputed, InlineFormatState {
}
/**
 * @hidden
 */
declare let InlineFormatVue2: ComponentOptions<InlineFormatAll, DefaultData<InlineFormatData>, DefaultMethods<InlineFormatAll>, InlineFormatComputed, RecordPropsDefinition<InlineFormatToolProps>>;
/**
 * @hidden
 */
declare const InlineFormat: DefineComponent<InlineFormatToolProps, any, InlineFormatData, InlineFormatComputed, InlineFormatMethods, {}, {}, {}, string, InlineFormatToolProps, InlineFormatToolProps, {}>;
export { InlineFormat, InlineFormatVue2 };
