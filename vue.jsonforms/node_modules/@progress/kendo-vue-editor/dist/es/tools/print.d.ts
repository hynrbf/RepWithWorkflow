import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ToolProps } from './ToolProps';
import { EditorToolsSettings } from './../config/toolsSettings';
export interface PrintProps extends ToolProps {
    /**
     * The settings of the tool. Use it to modify the tool appearance.
     */
    settings?: EditorToolsSettings.PrintSettings;
}
/**
 * @hidden
 */
export interface PrintState {
}
/**
 * @hidden
 */
export interface PrintComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface PrintMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface PrintData {
}
/**
 * @hidden
 */
export interface PrintAll extends Vue2type, PrintMethods, PrintData, PrintComputed, PrintState {
}
/**
 * @hidden
 */
declare let PrintVue2: ComponentOptions<PrintAll, DefaultData<PrintData>, DefaultMethods<PrintAll>, PrintComputed, RecordPropsDefinition<PrintProps>>;
/**
 * @hidden
 */
declare const Print: DefineComponent<PrintProps, any, PrintData, PrintComputed, PrintMethods, {}, {}, {}, string, PrintProps, PrintProps, {}>;
export { Print, PrintVue2 };
