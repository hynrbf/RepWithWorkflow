import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { DropDownListProps } from '@progress/kendo-vue-dropdowns';
import { BasicToolProps, ToolRenderProp } from './ToolProps';
export interface FormatBlockProps extends BasicToolProps, ToolRenderProp, DropDownListProps {
}
/**
 * @hidden
 */
export interface FormatBlockState {
}
/**
 * @hidden
 */
export interface FormatBlockComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FormatBlockMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FormatBlockData {
}
/**
 * @hidden
 */
export interface FormatBlockAll extends Vue2type, FormatBlockMethods, FormatBlockData, FormatBlockComputed, FormatBlockState {
}
/**
 * @hidden
 */
declare let FormatBlockVue2: ComponentOptions<FormatBlockAll, DefaultData<FormatBlockData>, DefaultMethods<FormatBlockAll>, FormatBlockComputed, RecordPropsDefinition<FormatBlockProps>>;
/**
 * @hidden
 */
declare const FormatBlock: DefineComponent<FormatBlockProps, any, FormatBlockData, FormatBlockComputed, FormatBlockMethods, {}, {}, {}, string, FormatBlockProps, FormatBlockProps, {}>;
export { FormatBlock, FormatBlockVue2 };
