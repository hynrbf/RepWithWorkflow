import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ToolProps } from './ToolProps';
export interface ListToolProps extends ToolProps {
}
export interface OrderedListProps extends ListToolProps {
}
export interface UnorderedListProps extends ListToolProps {
}
/**
 * @hidden
 */
export interface ListState {
}
/**
 * @hidden
 */
export interface ListComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ListMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ListData {
}
/**
 * @hidden
 */
export interface ListAll extends Vue2type, ListMethods, ListData, ListComputed, ListState {
}
/**
 * @hidden
 */
declare let ListVue2: ComponentOptions<ListAll, DefaultData<ListData>, DefaultMethods<ListAll>, ListComputed, RecordPropsDefinition<ListToolProps>>;
/**
 * @hidden
 */
declare const List: DefineComponent<ListToolProps, any, ListData, ListComputed, ListMethods, {}, {}, {}, string, ListToolProps, ListToolProps, {}>;
export { List, ListVue2 };
