import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ToolProps } from './ToolProps';
import { EditorToolsSettings } from './../config/toolsSettings';
export interface SelectAllProps extends ToolProps {
    /**
     * The settings of the tool. Use it to modify the tool appearance.
     */
    settings?: EditorToolsSettings.SelectAllSettings;
}
/**
 * @hidden
 */
export interface SelectAllState {
}
/**
 * @hidden
 */
export interface SelectAllComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface SelectAllMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface SelectAllData {
}
/**
 * @hidden
 */
export interface SelectAllAll extends Vue2type, SelectAllMethods, SelectAllData, SelectAllComputed, SelectAllState {
}
/**
 * @hidden
 */
declare let SelectAllVue2: ComponentOptions<SelectAllAll, DefaultData<SelectAllData>, DefaultMethods<SelectAllAll>, SelectAllComputed, RecordPropsDefinition<SelectAllProps>>;
/**
 * @hidden
 */
declare const SelectAll: DefineComponent<SelectAllProps, any, SelectAllData, SelectAllComputed, SelectAllMethods, {}, {}, {}, string, SelectAllProps, SelectAllProps, {}>;
export { SelectAll, SelectAllVue2 };
