import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ButtonProps } from '@progress/kendo-vue-buttons';
import { BasicToolProps, ToolRenderProp } from './ToolProps';
export interface FindAndReplaceProps extends BasicToolProps, ToolRenderProp, ButtonProps {
}
interface FindAndReplaceState {
    showDialog: boolean;
}
/**
 * @hidden
 */
export interface FindAndReplaceComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FindAndReplaceMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FindAndReplaceData {
}
/**
 * @hidden
 */
export interface FindAndReplaceAll extends Vue2type, FindAndReplaceMethods, FindAndReplaceData, FindAndReplaceComputed, FindAndReplaceState {
}
/**
 * @hidden
 */
declare let FindAndReplaceVue2: ComponentOptions<FindAndReplaceAll, DefaultData<FindAndReplaceData>, DefaultMethods<FindAndReplaceAll>, FindAndReplaceComputed, RecordPropsDefinition<FindAndReplaceProps>>;
/**
 * @hidden
 */
declare const FindAndReplace: DefineComponent<FindAndReplaceProps, any, FindAndReplaceData, FindAndReplaceComputed, FindAndReplaceMethods, {}, {}, {}, string, FindAndReplaceProps, FindAndReplaceProps, {}>;
export { FindAndReplace, FindAndReplaceVue2 };
