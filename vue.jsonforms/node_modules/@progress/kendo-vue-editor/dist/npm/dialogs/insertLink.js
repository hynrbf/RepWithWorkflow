"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InsertLinkDialogVue2 = exports.InsertLinkDialog = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_dialogs_1 = require("@progress/kendo-vue-dialogs");
var kendo_vue_buttons_1 = require("@progress/kendo-vue-buttons");
var kendo_editor_common_1 = require("@progress/kendo-editor-common");
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var main_1 = require("../messages/main");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var kendo_vue_form_1 = require("@progress/kendo-vue-form");
var kendo_vue_inputs_1 = require("@progress/kendo-vue-inputs");
/**
 * @hidden
 */
var InsertLinkDialogVue2 = {
  name: 'KendoInsertLinkDialog',
  // @ts-ignore
  emits: {
    close: null
  },
  props: {
    view: Object,
    settings: Object,
    dir: String
  },
  data: function data() {
    var _a = this.$props,
      view = _a.view,
      settings = _a.settings;
    var linkMark = view ? (0, kendo_editor_common_1.getMark)(view.state, view.state.schema.marks[settings.mark]) : false;
    return {
      hrefValue: linkMark && linkMark.attrs.href || undefined,
      titleValue: linkMark && linkMark.attrs.title || undefined,
      targetValue: linkMark && !!linkMark.attrs.target || undefined
    };
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  mounted: function mounted() {
    this.href = (0, kendo_vue_common_1.getRef)(this, 'href');
    this.title = (0, kendo_vue_common_1.getRef)(this, 'title');
    this.target = (0, kendo_vue_common_1.getRef)(this, 'target');
    if (this.href) {
      this.href.focus();
    }
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;
    var h = gh || createElement;
    var _a = this.$props,
      settings = _a.settings,
      dir = _a.dir;
    var localization = (0, kendo_vue_intl_1.provideLocalizationService)(this);
    var _b = settings.messages,
      insertHyperlinkDialogTitle = _b.insertHyperlinkDialogTitle,
      insertHyperlinkAddress = _b.insertHyperlinkAddress,
      insertHyperlinkTitle = _b.insertHyperlinkTitle,
      insertHyperlinkNewWindow = _b.insertHyperlinkNewWindow,
      insertHyperlinkCancel = _b.insertHyperlinkCancel,
      insertHyperlinkInsert = _b.insertHyperlinkInsert;
    var checkboxLabel = localization.toLanguageString(insertHyperlinkNewWindow, main_1.messages[insertHyperlinkNewWindow]);
    var content =
    // @ts-ignore function children
    h(kendo_vue_form_1.Form, this.v3 ? function () {
      return [
      // @ts-ignore function children
      h(kendo_vue_form_1.FormElement, {
        horizontal: true,
        attrs: _this.v3 ? undefined : {
          horizontal: true
        }
      }, _this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h("label", {
            "for": 'k-editor-link-url',
            attrs: _this.v3 ? undefined : {
              "for": 'k-editor-link-url'
            },
            "class": 'k-form-label'
          }, [localization.toLanguageString(insertHyperlinkAddress, main_1.messages[insertHyperlinkAddress])]), h("div", {
            "class": 'k-form-field-wrap'
          }, [h(kendo_vue_inputs_1.Input, {
            type: "text",
            attrs: _this.v3 ? undefined : {
              type: "text",
              id: 'k-editor-link-url',
              value: _this.hrefValue
            },
            id: 'k-editor-link-url',
            ref: (0, kendo_vue_common_1.setRef)(_this, 'href'),
            onInput: _this.hrefChange,
            on: _this.v3 ? undefined : {
              "input": _this.hrefChange
            },
            value: _this.hrefValue
          })])];
        } : [h("label", {
          "for": 'k-editor-link-url',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-link-url'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertHyperlinkAddress, main_1.messages[insertHyperlinkAddress])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: "text",
          attrs: _this.v3 ? undefined : {
            type: "text",
            id: 'k-editor-link-url',
            value: _this.hrefValue
          },
          id: 'k-editor-link-url',
          ref: (0, kendo_vue_common_1.setRef)(_this, 'href'),
          onInput: _this.hrefChange,
          on: _this.v3 ? undefined : {
            "input": _this.hrefChange
          },
          value: _this.hrefValue
        })])]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h("label", {
            "for": 'k-editor-link-text',
            attrs: _this.v3 ? undefined : {
              "for": 'k-editor-link-text'
            },
            "class": 'k-form-label'
          }, [localization.toLanguageString(insertHyperlinkTitle, main_1.messages[insertHyperlinkTitle])]), h("div", {
            "class": 'k-form-field-wrap'
          }, [h(kendo_vue_inputs_1.Input, {
            type: "text",
            attrs: _this.v3 ? undefined : {
              type: "text",
              id: 'k-editor-link-text',
              value: _this.titleValue
            },
            id: 'k-editor-link-text',
            ref: (0, kendo_vue_common_1.setRef)(_this, 'title'),
            onInput: _this.titleChange,
            on: _this.v3 ? undefined : {
              "input": _this.titleChange
            },
            value: _this.titleValue
          })])];
        } : [h("label", {
          "for": 'k-editor-link-text',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-link-text'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertHyperlinkTitle, main_1.messages[insertHyperlinkTitle])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: "text",
          attrs: _this.v3 ? undefined : {
            type: "text",
            id: 'k-editor-link-text',
            value: _this.titleValue
          },
          id: 'k-editor-link-text',
          ref: (0, kendo_vue_common_1.setRef)(_this, 'title'),
          onInput: _this.titleChange,
          on: _this.v3 ? undefined : {
            "input": _this.titleChange
          },
          value: _this.titleValue
        })])]), settings.linkTarget !== false &&
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h("div", {
            "class": 'k-form-label'
          }), h("div", {
            "class": 'k-form-field-wrap'
          }, [h(kendo_vue_inputs_1.Checkbox, {
            "class": 'k-checkbox-wrap',
            id: 'k-editor-link-target',
            attrs: _this.v3 ? undefined : {
              id: 'k-editor-link-target',
              label: checkboxLabel,
              checked: _this.targetValue
            },
            ref: (0, kendo_vue_common_1.setRef)(_this, 'target'),
            label: checkboxLabel,
            onChange: _this.targetChange,
            on: _this.v3 ? undefined : {
              "change": _this.targetChange
            },
            checked: _this.targetValue
          })])];
        } : [h("div", {
          "class": 'k-form-label'
        }), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Checkbox, {
          "class": 'k-checkbox-wrap',
          id: 'k-editor-link-target',
          attrs: _this.v3 ? undefined : {
            id: 'k-editor-link-target',
            label: checkboxLabel,
            checked: _this.targetValue
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'target'),
          label: checkboxLabel,
          onChange: _this.targetChange,
          on: _this.v3 ? undefined : {
            "change": _this.targetChange
          },
          checked: _this.targetValue
        })])])];
      } : [h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-link-url',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-link-url'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertHyperlinkAddress, main_1.messages[insertHyperlinkAddress])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: "text",
          attrs: _this.v3 ? undefined : {
            type: "text",
            id: 'k-editor-link-url',
            value: _this.hrefValue
          },
          id: 'k-editor-link-url',
          ref: (0, kendo_vue_common_1.setRef)(_this, 'href'),
          onInput: _this.hrefChange,
          on: _this.v3 ? undefined : {
            "input": _this.hrefChange
          },
          value: _this.hrefValue
        })])];
      } : [h("label", {
        "for": 'k-editor-link-url',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-link-url'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertHyperlinkAddress, main_1.messages[insertHyperlinkAddress])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: "text",
        attrs: _this.v3 ? undefined : {
          type: "text",
          id: 'k-editor-link-url',
          value: _this.hrefValue
        },
        id: 'k-editor-link-url',
        ref: (0, kendo_vue_common_1.setRef)(_this, 'href'),
        onInput: _this.hrefChange,
        on: _this.v3 ? undefined : {
          "input": _this.hrefChange
        },
        value: _this.hrefValue
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-link-text',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-link-text'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertHyperlinkTitle, main_1.messages[insertHyperlinkTitle])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: "text",
          attrs: _this.v3 ? undefined : {
            type: "text",
            id: 'k-editor-link-text',
            value: _this.titleValue
          },
          id: 'k-editor-link-text',
          ref: (0, kendo_vue_common_1.setRef)(_this, 'title'),
          onInput: _this.titleChange,
          on: _this.v3 ? undefined : {
            "input": _this.titleChange
          },
          value: _this.titleValue
        })])];
      } : [h("label", {
        "for": 'k-editor-link-text',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-link-text'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertHyperlinkTitle, main_1.messages[insertHyperlinkTitle])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: "text",
        attrs: _this.v3 ? undefined : {
          type: "text",
          id: 'k-editor-link-text',
          value: _this.titleValue
        },
        id: 'k-editor-link-text',
        ref: (0, kendo_vue_common_1.setRef)(_this, 'title'),
        onInput: _this.titleChange,
        on: _this.v3 ? undefined : {
          "input": _this.titleChange
        },
        value: _this.titleValue
      })])]), settings.linkTarget !== false && h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("div", {
          "class": 'k-form-label'
        }), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Checkbox, {
          "class": 'k-checkbox-wrap',
          id: 'k-editor-link-target',
          attrs: _this.v3 ? undefined : {
            id: 'k-editor-link-target',
            label: checkboxLabel,
            checked: _this.targetValue
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'target'),
          label: checkboxLabel,
          onChange: _this.targetChange,
          on: _this.v3 ? undefined : {
            "change": _this.targetChange
          },
          checked: _this.targetValue
        })])];
      } : [h("div", {
        "class": 'k-form-label'
      }), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Checkbox, {
        "class": 'k-checkbox-wrap',
        id: 'k-editor-link-target',
        attrs: _this.v3 ? undefined : {
          id: 'k-editor-link-target',
          label: checkboxLabel,
          checked: _this.targetValue
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'target'),
        label: checkboxLabel,
        onChange: _this.targetChange,
        on: _this.v3 ? undefined : {
          "change": _this.targetChange
        },
        checked: _this.targetValue
      })])])])];
    } : [h(kendo_vue_form_1.FormElement, {
      horizontal: true,
      attrs: _this.v3 ? undefined : {
        horizontal: true
      }
    }, _this.v3 ? function () {
      return [h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-link-url',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-link-url'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertHyperlinkAddress, main_1.messages[insertHyperlinkAddress])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: "text",
          attrs: _this.v3 ? undefined : {
            type: "text",
            id: 'k-editor-link-url',
            value: _this.hrefValue
          },
          id: 'k-editor-link-url',
          ref: (0, kendo_vue_common_1.setRef)(_this, 'href'),
          onInput: _this.hrefChange,
          on: _this.v3 ? undefined : {
            "input": _this.hrefChange
          },
          value: _this.hrefValue
        })])];
      } : [h("label", {
        "for": 'k-editor-link-url',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-link-url'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertHyperlinkAddress, main_1.messages[insertHyperlinkAddress])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: "text",
        attrs: _this.v3 ? undefined : {
          type: "text",
          id: 'k-editor-link-url',
          value: _this.hrefValue
        },
        id: 'k-editor-link-url',
        ref: (0, kendo_vue_common_1.setRef)(_this, 'href'),
        onInput: _this.hrefChange,
        on: _this.v3 ? undefined : {
          "input": _this.hrefChange
        },
        value: _this.hrefValue
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-link-text',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-link-text'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertHyperlinkTitle, main_1.messages[insertHyperlinkTitle])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: "text",
          attrs: _this.v3 ? undefined : {
            type: "text",
            id: 'k-editor-link-text',
            value: _this.titleValue
          },
          id: 'k-editor-link-text',
          ref: (0, kendo_vue_common_1.setRef)(_this, 'title'),
          onInput: _this.titleChange,
          on: _this.v3 ? undefined : {
            "input": _this.titleChange
          },
          value: _this.titleValue
        })])];
      } : [h("label", {
        "for": 'k-editor-link-text',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-link-text'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertHyperlinkTitle, main_1.messages[insertHyperlinkTitle])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: "text",
        attrs: _this.v3 ? undefined : {
          type: "text",
          id: 'k-editor-link-text',
          value: _this.titleValue
        },
        id: 'k-editor-link-text',
        ref: (0, kendo_vue_common_1.setRef)(_this, 'title'),
        onInput: _this.titleChange,
        on: _this.v3 ? undefined : {
          "input": _this.titleChange
        },
        value: _this.titleValue
      })])]), settings.linkTarget !== false && h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("div", {
          "class": 'k-form-label'
        }), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Checkbox, {
          "class": 'k-checkbox-wrap',
          id: 'k-editor-link-target',
          attrs: _this.v3 ? undefined : {
            id: 'k-editor-link-target',
            label: checkboxLabel,
            checked: _this.targetValue
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'target'),
          label: checkboxLabel,
          onChange: _this.targetChange,
          on: _this.v3 ? undefined : {
            "change": _this.targetChange
          },
          checked: _this.targetValue
        })])];
      } : [h("div", {
        "class": 'k-form-label'
      }), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Checkbox, {
        "class": 'k-checkbox-wrap',
        id: 'k-editor-link-target',
        attrs: _this.v3 ? undefined : {
          id: 'k-editor-link-target',
          label: checkboxLabel,
          checked: _this.targetValue
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'target'),
        label: checkboxLabel,
        onChange: _this.targetChange,
        on: _this.v3 ? undefined : {
          "change": _this.targetChange
        },
        checked: _this.targetValue
      })])])];
    } : [h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
      return [h("label", {
        "for": 'k-editor-link-url',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-link-url'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertHyperlinkAddress, main_1.messages[insertHyperlinkAddress])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: "text",
        attrs: _this.v3 ? undefined : {
          type: "text",
          id: 'k-editor-link-url',
          value: _this.hrefValue
        },
        id: 'k-editor-link-url',
        ref: (0, kendo_vue_common_1.setRef)(_this, 'href'),
        onInput: _this.hrefChange,
        on: _this.v3 ? undefined : {
          "input": _this.hrefChange
        },
        value: _this.hrefValue
      })])];
    } : [h("label", {
      "for": 'k-editor-link-url',
      attrs: _this.v3 ? undefined : {
        "for": 'k-editor-link-url'
      },
      "class": 'k-form-label'
    }, [localization.toLanguageString(insertHyperlinkAddress, main_1.messages[insertHyperlinkAddress])]), h("div", {
      "class": 'k-form-field-wrap'
    }, [h(kendo_vue_inputs_1.Input, {
      type: "text",
      attrs: _this.v3 ? undefined : {
        type: "text",
        id: 'k-editor-link-url',
        value: _this.hrefValue
      },
      id: 'k-editor-link-url',
      ref: (0, kendo_vue_common_1.setRef)(_this, 'href'),
      onInput: _this.hrefChange,
      on: _this.v3 ? undefined : {
        "input": _this.hrefChange
      },
      value: _this.hrefValue
    })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
      return [h("label", {
        "for": 'k-editor-link-text',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-link-text'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertHyperlinkTitle, main_1.messages[insertHyperlinkTitle])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: "text",
        attrs: _this.v3 ? undefined : {
          type: "text",
          id: 'k-editor-link-text',
          value: _this.titleValue
        },
        id: 'k-editor-link-text',
        ref: (0, kendo_vue_common_1.setRef)(_this, 'title'),
        onInput: _this.titleChange,
        on: _this.v3 ? undefined : {
          "input": _this.titleChange
        },
        value: _this.titleValue
      })])];
    } : [h("label", {
      "for": 'k-editor-link-text',
      attrs: _this.v3 ? undefined : {
        "for": 'k-editor-link-text'
      },
      "class": 'k-form-label'
    }, [localization.toLanguageString(insertHyperlinkTitle, main_1.messages[insertHyperlinkTitle])]), h("div", {
      "class": 'k-form-field-wrap'
    }, [h(kendo_vue_inputs_1.Input, {
      type: "text",
      attrs: _this.v3 ? undefined : {
        type: "text",
        id: 'k-editor-link-text',
        value: _this.titleValue
      },
      id: 'k-editor-link-text',
      ref: (0, kendo_vue_common_1.setRef)(_this, 'title'),
      onInput: _this.titleChange,
      on: _this.v3 ? undefined : {
        "input": _this.titleChange
      },
      value: _this.titleValue
    })])]), settings.linkTarget !== false && h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
      return [h("div", {
        "class": 'k-form-label'
      }), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Checkbox, {
        "class": 'k-checkbox-wrap',
        id: 'k-editor-link-target',
        attrs: _this.v3 ? undefined : {
          id: 'k-editor-link-target',
          label: checkboxLabel,
          checked: _this.targetValue
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'target'),
        label: checkboxLabel,
        onChange: _this.targetChange,
        on: _this.v3 ? undefined : {
          "change": _this.targetChange
        },
        checked: _this.targetValue
      })])];
    } : [h("div", {
      "class": 'k-form-label'
    }), h("div", {
      "class": 'k-form-field-wrap'
    }, [h(kendo_vue_inputs_1.Checkbox, {
      "class": 'k-checkbox-wrap',
      id: 'k-editor-link-target',
      attrs: _this.v3 ? undefined : {
        id: 'k-editor-link-target',
        label: checkboxLabel,
        checked: _this.targetValue
      },
      ref: (0, kendo_vue_common_1.setRef)(_this, 'target'),
      label: checkboxLabel,
      onChange: _this.targetChange,
      on: _this.v3 ? undefined : {
        "change": _this.targetChange
      },
      checked: _this.targetValue
    })])])])]);
    var dialog =
    // @ts-ignore function children
    h(kendo_vue_dialogs_1.Window, {
      initialWidth: 450,
      attrs: this.v3 ? undefined : {
        initialWidth: 450,
        initialHeight: 250,
        windowClass: 'k-editor-window',
        title: localization.toLanguageString(insertHyperlinkDialogTitle, main_1.messages[insertHyperlinkDialogTitle]),
        dir: dir,
        modal: true,
        minimizeButton: function minimizeButton() {
          return null;
        },
        maximizeButton: function maximizeButton() {
          return null;
        },
        resizable: false
      },
      initialHeight: 250,
      windowClass: 'k-editor-window',
      title: localization.toLanguageString(insertHyperlinkDialogTitle, main_1.messages[insertHyperlinkDialogTitle]),
      onClose: this.onClose,
      on: this.v3 ? undefined : {
        "close": this.onClose
      },
      dir: dir,
      modal: true,
      minimizeButton: function minimizeButton() {
        return null;
      },
      maximizeButton: function maximizeButton() {
        return null;
      },
      resizable: false
    }, this.v3 ? function () {
      return [content,
      // @ts-ignore function children
      h(kendo_vue_dialogs_1.DialogActionsBar, _this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_buttons_1.Button, {
          type: "button",
          attrs: _this.v3 ? undefined : {
            type: "button",
            dir: dir
          },
          onClick: _this.onClose,
          on: _this.v3 ? undefined : {
            "click": _this.onClose
          },
          dir: dir,
          key: "cancel"
        }, _this.v3 ? function () {
          return [localization.toLanguageString(insertHyperlinkCancel, main_1.messages[insertHyperlinkCancel])];
        } : [localization.toLanguageString(insertHyperlinkCancel, main_1.messages[insertHyperlinkCancel])]),
        // @ts-ignore function children
        h(kendo_vue_buttons_1.Button, {
          type: "button",
          attrs: _this.v3 ? undefined : {
            type: "button",
            themeColor: 'primary',
            dir: dir
          },
          onClick: _this.onInsert,
          on: _this.v3 ? undefined : {
            "click": _this.onInsert
          },
          themeColor: 'primary',
          dir: dir,
          key: "insert"
        }, _this.v3 ? function () {
          return [localization.toLanguageString(insertHyperlinkInsert, main_1.messages[insertHyperlinkInsert])];
        } : [localization.toLanguageString(insertHyperlinkInsert, main_1.messages[insertHyperlinkInsert])])];
      } : [h(kendo_vue_buttons_1.Button, {
        type: "button",
        attrs: _this.v3 ? undefined : {
          type: "button",
          dir: dir
        },
        onClick: _this.onClose,
        on: _this.v3 ? undefined : {
          "click": _this.onClose
        },
        dir: dir,
        key: "cancel"
      }, _this.v3 ? function () {
        return [localization.toLanguageString(insertHyperlinkCancel, main_1.messages[insertHyperlinkCancel])];
      } : [localization.toLanguageString(insertHyperlinkCancel, main_1.messages[insertHyperlinkCancel])]), h(kendo_vue_buttons_1.Button, {
        type: "button",
        attrs: _this.v3 ? undefined : {
          type: "button",
          themeColor: 'primary',
          dir: dir
        },
        onClick: _this.onInsert,
        on: _this.v3 ? undefined : {
          "click": _this.onInsert
        },
        themeColor: 'primary',
        dir: dir,
        key: "insert"
      }, _this.v3 ? function () {
        return [localization.toLanguageString(insertHyperlinkInsert, main_1.messages[insertHyperlinkInsert])];
      } : [localization.toLanguageString(insertHyperlinkInsert, main_1.messages[insertHyperlinkInsert])])])];
    } : [content, h(kendo_vue_dialogs_1.DialogActionsBar, _this.v3 ? function () {
      return [h(kendo_vue_buttons_1.Button, {
        type: "button",
        attrs: _this.v3 ? undefined : {
          type: "button",
          dir: dir
        },
        onClick: _this.onClose,
        on: _this.v3 ? undefined : {
          "click": _this.onClose
        },
        dir: dir,
        key: "cancel"
      }, _this.v3 ? function () {
        return [localization.toLanguageString(insertHyperlinkCancel, main_1.messages[insertHyperlinkCancel])];
      } : [localization.toLanguageString(insertHyperlinkCancel, main_1.messages[insertHyperlinkCancel])]), h(kendo_vue_buttons_1.Button, {
        type: "button",
        attrs: _this.v3 ? undefined : {
          type: "button",
          themeColor: 'primary',
          dir: dir
        },
        onClick: _this.onInsert,
        on: _this.v3 ? undefined : {
          "click": _this.onInsert
        },
        themeColor: 'primary',
        dir: dir,
        key: "insert"
      }, _this.v3 ? function () {
        return [localization.toLanguageString(insertHyperlinkInsert, main_1.messages[insertHyperlinkInsert])];
      } : [localization.toLanguageString(insertHyperlinkInsert, main_1.messages[insertHyperlinkInsert])])];
    } : [h(kendo_vue_buttons_1.Button, {
      type: "button",
      attrs: _this.v3 ? undefined : {
        type: "button",
        dir: dir
      },
      onClick: _this.onClose,
      on: _this.v3 ? undefined : {
        "click": _this.onClose
      },
      dir: dir,
      key: "cancel"
    }, _this.v3 ? function () {
      return [localization.toLanguageString(insertHyperlinkCancel, main_1.messages[insertHyperlinkCancel])];
    } : [localization.toLanguageString(insertHyperlinkCancel, main_1.messages[insertHyperlinkCancel])]), h(kendo_vue_buttons_1.Button, {
      type: "button",
      attrs: _this.v3 ? undefined : {
        type: "button",
        themeColor: 'primary',
        dir: dir
      },
      onClick: _this.onInsert,
      on: _this.v3 ? undefined : {
        "click": _this.onInsert
      },
      themeColor: 'primary',
      dir: dir,
      key: "insert"
    }, _this.v3 ? function () {
      return [localization.toLanguageString(insertHyperlinkInsert, main_1.messages[insertHyperlinkInsert])];
    } : [localization.toLanguageString(insertHyperlinkInsert, main_1.messages[insertHyperlinkInsert])])])]);
    return dialog;
  },
  methods: {
    hrefChange: function hrefChange(e) {
      this.hrefValue = e.value;
    },
    titleChange: function titleChange(e) {
      this.titleValue = e.value;
    },
    targetChange: function targetChange(e) {
      this.targetValue = e.value;
    },
    onClose: function onClose() {
      this.$props.view.focus();
      this.$emit('close');
    },
    onInsert: function onInsert() {
      var view = this.$props.view;
      var mark = this.$props.settings.mark;
      var attrs = {
        href: this.href ? this.hrefValue : undefined,
        title: this.title ? this.titleValue : undefined,
        target: this.target && this.targetValue ? '_blank' : undefined
      };
      (0, kendo_editor_common_1.applyLink)({
        mark: mark,
        attrs: attrs
      }, this.$props.settings.commandName)(view.state, view.dispatch);
      this.onClose();
    }
  }
};
exports.InsertLinkDialogVue2 = InsertLinkDialogVue2;
/**
 * @hidden
 */
var InsertLinkDialog = InsertLinkDialogVue2;
exports.InsertLinkDialog = InsertLinkDialog;