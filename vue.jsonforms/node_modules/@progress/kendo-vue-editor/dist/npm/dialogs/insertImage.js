"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InsertImageDialogVue2 = exports.InsertImageDialog = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_dialogs_1 = require("@progress/kendo-vue-dialogs");
var kendo_vue_buttons_1 = require("@progress/kendo-vue-buttons");
var kendo_editor_common_1 = require("@progress/kendo-editor-common");
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var main_1 = require("../messages/main");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var kendo_vue_form_1 = require("@progress/kendo-vue-form");
var kendo_vue_inputs_1 = require("@progress/kendo-vue-inputs");
/**
 * @hidden
 */
var InsertImageDialogVue2 = {
  name: 'KendoInsertImageDialog',
  // @ts-ignore
  emits: {
    close: null
  },
  props: {
    view: Object,
    settings: Object,
    dir: String
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  data: function data() {
    var _a = this.$props,
      view = _a.view,
      settings = _a.settings;
    var state = view && view.state;
    var attrs = {};
    if (state && state.selection instanceof kendo_editor_common_1.NodeSelection && state.selection.node.type === state.schema.nodes[settings.node]) {
      attrs = state.selection.node.attrs;
    }
    return {
      srcValue: attrs.src,
      altValue: attrs.alt,
      titleValue: attrs.title,
      widthValue: attrs.width,
      heightValue: attrs.height
    };
  },
  mounted: function mounted() {
    this.src = (0, kendo_vue_common_1.getRef)(this, 'src');
    this.altText = (0, kendo_vue_common_1.getRef)(this, 'altText');
    this.title = (0, kendo_vue_common_1.getRef)(this, 'title');
    this.width = (0, kendo_vue_common_1.getRef)(this, 'width');
    this.height = (0, kendo_vue_common_1.getRef)(this, 'height');
    if (this.src) {
      this.src.focus();
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;
    var h = gh || createElement;
    var _a = this.$props,
      view = _a.view,
      settings = _a.settings,
      dir = _a.dir;
    var _b = settings.messages,
      insertImageDialogTitle = _b.insertImageDialogTitle,
      insertImageAddress = _b.insertImageAddress,
      insertImageTitle = _b.insertImageTitle,
      insertImageAltText = _b.insertImageAltText,
      insertImageWidth = _b.insertImageWidth,
      insertImageHeight = _b.insertImageHeight,
      insertImageCancel = _b.insertImageCancel,
      insertImageInsert = _b.insertImageInsert;
    var localization = (0, kendo_vue_intl_1.provideLocalizationService)(this);
    var state = view && view.state;
    var attrs = {};
    if (state && state.selection instanceof kendo_editor_common_1.NodeSelection && state.selection.node.type === state.schema.nodes[settings.node]) {
      attrs = state.selection.node.attrs;
    }
    var content =
    // @ts-ignore function children
    h(kendo_vue_form_1.Form, this.v3 ? function () {
      return [
      // @ts-ignore function children
      h(kendo_vue_form_1.FormElement, {
        horizontal: true,
        attrs: _this.v3 ? undefined : {
          horizontal: true
        }
      }, _this.v3 ? function () {
        return [
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h("label", {
            "for": 'k-editor-image-url',
            attrs: _this.v3 ? undefined : {
              "for": 'k-editor-image-url'
            },
            "class": 'k-form-label'
          }, [localization.toLanguageString(insertImageAddress, main_1.messages[insertImageAddress])]), h("div", {
            "class": 'k-form-field-wrap'
          }, [h(kendo_vue_inputs_1.Input, {
            type: "text",
            attrs: _this.v3 ? undefined : {
              type: "text",
              id: 'k-editor-image-url',
              value: _this.srcValue
            },
            id: 'k-editor-image-url',
            value: _this.srcValue,
            onInput: _this.handleSrcInput,
            on: _this.v3 ? undefined : {
              "input": _this.handleSrcInput
            },
            ref: (0, kendo_vue_common_1.setRef)(_this, 'src')
          })])];
        } : [h("label", {
          "for": 'k-editor-image-url',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-image-url'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageAddress, main_1.messages[insertImageAddress])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: "text",
          attrs: _this.v3 ? undefined : {
            type: "text",
            id: 'k-editor-image-url',
            value: _this.srcValue
          },
          id: 'k-editor-image-url',
          value: _this.srcValue,
          onInput: _this.handleSrcInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleSrcInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'src')
        })])]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h("label", {
            "for": 'k-editor-image-url',
            attrs: _this.v3 ? undefined : {
              "for": 'k-editor-image-url'
            },
            "class": 'k-form-label'
          }, [localization.toLanguageString(insertImageAltText, main_1.messages[insertImageAltText])]), h("div", {
            "class": 'k-form-field-wrap'
          }, [h(kendo_vue_inputs_1.Input, {
            type: 'text',
            attrs: _this.v3 ? undefined : {
              type: 'text',
              id: "k-editor-image-alt",
              value: _this.altValue
            },
            id: "k-editor-image-alt",
            value: _this.altValue,
            onInput: _this.handleAltInput,
            on: _this.v3 ? undefined : {
              "input": _this.handleAltInput
            },
            ref: (0, kendo_vue_common_1.setRef)(_this, 'altText')
          })])];
        } : [h("label", {
          "for": 'k-editor-image-url',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-image-url'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageAltText, main_1.messages[insertImageAltText])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: 'text',
          attrs: _this.v3 ? undefined : {
            type: 'text',
            id: "k-editor-image-alt",
            value: _this.altValue
          },
          id: "k-editor-image-alt",
          value: _this.altValue,
          onInput: _this.handleAltInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleAltInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'altText')
        })])]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h("label", {
            htmlFor: 'k-editor-image-title',
            attrs: _this.v3 ? undefined : {
              htmlFor: 'k-editor-image-title'
            },
            "class": 'k-form-label'
          }, [localization.toLanguageString(insertImageTitle, main_1.messages[insertImageTitle])]), h("div", {
            "class": 'k-form-field-wrap'
          }, [h(kendo_vue_inputs_1.Input, {
            type: 'text',
            attrs: _this.v3 ? undefined : {
              type: 'text',
              id: "k-editor-image-title",
              value: _this.titleValue
            },
            id: "k-editor-image-title",
            value: _this.titleValue,
            onInput: _this.handleTitleInput,
            on: _this.v3 ? undefined : {
              "input": _this.handleTitleInput
            },
            ref: (0, kendo_vue_common_1.setRef)(_this, 'title')
          })])];
        } : [h("label", {
          htmlFor: 'k-editor-image-title',
          attrs: _this.v3 ? undefined : {
            htmlFor: 'k-editor-image-title'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageTitle, main_1.messages[insertImageTitle])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: 'text',
          attrs: _this.v3 ? undefined : {
            type: 'text',
            id: "k-editor-image-title",
            value: _this.titleValue
          },
          id: "k-editor-image-title",
          value: _this.titleValue,
          onInput: _this.handleTitleInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleTitleInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'title')
        })])]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h("label", {
            "for": 'k-editor-image-width',
            attrs: _this.v3 ? undefined : {
              "for": 'k-editor-image-width'
            },
            "class": 'k-form-label'
          }, [localization.toLanguageString(insertImageWidth, main_1.messages[insertImageWidth])]), h("div", {
            "class": 'k-form-field-wrap'
          }, [h(kendo_vue_inputs_1.Input, {
            type: 'text',
            attrs: _this.v3 ? undefined : {
              type: 'text',
              id: "k-editor-image-width",
              value: _this.widthValue
            },
            id: "k-editor-image-width",
            value: _this.widthValue,
            onInput: _this.handleWidthInput,
            on: _this.v3 ? undefined : {
              "input": _this.handleWidthInput
            },
            ref: (0, kendo_vue_common_1.setRef)(_this, 'width')
          })])];
        } : [h("label", {
          "for": 'k-editor-image-width',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-image-width'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageWidth, main_1.messages[insertImageWidth])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: 'text',
          attrs: _this.v3 ? undefined : {
            type: 'text',
            id: "k-editor-image-width",
            value: _this.widthValue
          },
          id: "k-editor-image-width",
          value: _this.widthValue,
          onInput: _this.handleWidthInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleWidthInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'width')
        })])]),
        // @ts-ignore function children
        h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
          return [h("label", {
            htmlFor: 'k-editor-image-height',
            attrs: _this.v3 ? undefined : {
              htmlFor: 'k-editor-image-height'
            },
            "class": 'k-form-label'
          }, [localization.toLanguageString(insertImageHeight, main_1.messages[insertImageHeight])]), h("div", {
            "class": 'k-form-field-wrap'
          }, [h(kendo_vue_inputs_1.Input, {
            id: "k-editor-image-height",
            attrs: _this.v3 ? undefined : {
              id: "k-editor-image-height",
              value: _this.heightValue
            },
            value: _this.heightValue,
            onInput: _this.handleHeightInput,
            on: _this.v3 ? undefined : {
              "input": _this.handleHeightInput
            },
            ref: (0, kendo_vue_common_1.setRef)(_this, 'height')
          })])];
        } : [h("label", {
          htmlFor: 'k-editor-image-height',
          attrs: _this.v3 ? undefined : {
            htmlFor: 'k-editor-image-height'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageHeight, main_1.messages[insertImageHeight])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          id: "k-editor-image-height",
          attrs: _this.v3 ? undefined : {
            id: "k-editor-image-height",
            value: _this.heightValue
          },
          value: _this.heightValue,
          onInput: _this.handleHeightInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleHeightInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'height')
        })])])];
      } : [h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-image-url',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-image-url'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageAddress, main_1.messages[insertImageAddress])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: "text",
          attrs: _this.v3 ? undefined : {
            type: "text",
            id: 'k-editor-image-url',
            value: _this.srcValue
          },
          id: 'k-editor-image-url',
          value: _this.srcValue,
          onInput: _this.handleSrcInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleSrcInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'src')
        })])];
      } : [h("label", {
        "for": 'k-editor-image-url',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-image-url'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageAddress, main_1.messages[insertImageAddress])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: "text",
        attrs: _this.v3 ? undefined : {
          type: "text",
          id: 'k-editor-image-url',
          value: _this.srcValue
        },
        id: 'k-editor-image-url',
        value: _this.srcValue,
        onInput: _this.handleSrcInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleSrcInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'src')
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-image-url',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-image-url'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageAltText, main_1.messages[insertImageAltText])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: 'text',
          attrs: _this.v3 ? undefined : {
            type: 'text',
            id: "k-editor-image-alt",
            value: _this.altValue
          },
          id: "k-editor-image-alt",
          value: _this.altValue,
          onInput: _this.handleAltInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleAltInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'altText')
        })])];
      } : [h("label", {
        "for": 'k-editor-image-url',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-image-url'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageAltText, main_1.messages[insertImageAltText])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: 'text',
        attrs: _this.v3 ? undefined : {
          type: 'text',
          id: "k-editor-image-alt",
          value: _this.altValue
        },
        id: "k-editor-image-alt",
        value: _this.altValue,
        onInput: _this.handleAltInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleAltInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'altText')
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          htmlFor: 'k-editor-image-title',
          attrs: _this.v3 ? undefined : {
            htmlFor: 'k-editor-image-title'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageTitle, main_1.messages[insertImageTitle])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: 'text',
          attrs: _this.v3 ? undefined : {
            type: 'text',
            id: "k-editor-image-title",
            value: _this.titleValue
          },
          id: "k-editor-image-title",
          value: _this.titleValue,
          onInput: _this.handleTitleInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleTitleInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'title')
        })])];
      } : [h("label", {
        htmlFor: 'k-editor-image-title',
        attrs: _this.v3 ? undefined : {
          htmlFor: 'k-editor-image-title'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageTitle, main_1.messages[insertImageTitle])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: 'text',
        attrs: _this.v3 ? undefined : {
          type: 'text',
          id: "k-editor-image-title",
          value: _this.titleValue
        },
        id: "k-editor-image-title",
        value: _this.titleValue,
        onInput: _this.handleTitleInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleTitleInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'title')
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-image-width',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-image-width'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageWidth, main_1.messages[insertImageWidth])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: 'text',
          attrs: _this.v3 ? undefined : {
            type: 'text',
            id: "k-editor-image-width",
            value: _this.widthValue
          },
          id: "k-editor-image-width",
          value: _this.widthValue,
          onInput: _this.handleWidthInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleWidthInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'width')
        })])];
      } : [h("label", {
        "for": 'k-editor-image-width',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-image-width'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageWidth, main_1.messages[insertImageWidth])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: 'text',
        attrs: _this.v3 ? undefined : {
          type: 'text',
          id: "k-editor-image-width",
          value: _this.widthValue
        },
        id: "k-editor-image-width",
        value: _this.widthValue,
        onInput: _this.handleWidthInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleWidthInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'width')
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          htmlFor: 'k-editor-image-height',
          attrs: _this.v3 ? undefined : {
            htmlFor: 'k-editor-image-height'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageHeight, main_1.messages[insertImageHeight])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          id: "k-editor-image-height",
          attrs: _this.v3 ? undefined : {
            id: "k-editor-image-height",
            value: _this.heightValue
          },
          value: _this.heightValue,
          onInput: _this.handleHeightInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleHeightInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'height')
        })])];
      } : [h("label", {
        htmlFor: 'k-editor-image-height',
        attrs: _this.v3 ? undefined : {
          htmlFor: 'k-editor-image-height'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageHeight, main_1.messages[insertImageHeight])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        id: "k-editor-image-height",
        attrs: _this.v3 ? undefined : {
          id: "k-editor-image-height",
          value: _this.heightValue
        },
        value: _this.heightValue,
        onInput: _this.handleHeightInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleHeightInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'height')
      })])])])];
    } : [h(kendo_vue_form_1.FormElement, {
      horizontal: true,
      attrs: _this.v3 ? undefined : {
        horizontal: true
      }
    }, _this.v3 ? function () {
      return [h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-image-url',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-image-url'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageAddress, main_1.messages[insertImageAddress])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: "text",
          attrs: _this.v3 ? undefined : {
            type: "text",
            id: 'k-editor-image-url',
            value: _this.srcValue
          },
          id: 'k-editor-image-url',
          value: _this.srcValue,
          onInput: _this.handleSrcInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleSrcInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'src')
        })])];
      } : [h("label", {
        "for": 'k-editor-image-url',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-image-url'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageAddress, main_1.messages[insertImageAddress])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: "text",
        attrs: _this.v3 ? undefined : {
          type: "text",
          id: 'k-editor-image-url',
          value: _this.srcValue
        },
        id: 'k-editor-image-url',
        value: _this.srcValue,
        onInput: _this.handleSrcInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleSrcInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'src')
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-image-url',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-image-url'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageAltText, main_1.messages[insertImageAltText])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: 'text',
          attrs: _this.v3 ? undefined : {
            type: 'text',
            id: "k-editor-image-alt",
            value: _this.altValue
          },
          id: "k-editor-image-alt",
          value: _this.altValue,
          onInput: _this.handleAltInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleAltInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'altText')
        })])];
      } : [h("label", {
        "for": 'k-editor-image-url',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-image-url'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageAltText, main_1.messages[insertImageAltText])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: 'text',
        attrs: _this.v3 ? undefined : {
          type: 'text',
          id: "k-editor-image-alt",
          value: _this.altValue
        },
        id: "k-editor-image-alt",
        value: _this.altValue,
        onInput: _this.handleAltInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleAltInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'altText')
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          htmlFor: 'k-editor-image-title',
          attrs: _this.v3 ? undefined : {
            htmlFor: 'k-editor-image-title'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageTitle, main_1.messages[insertImageTitle])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: 'text',
          attrs: _this.v3 ? undefined : {
            type: 'text',
            id: "k-editor-image-title",
            value: _this.titleValue
          },
          id: "k-editor-image-title",
          value: _this.titleValue,
          onInput: _this.handleTitleInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleTitleInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'title')
        })])];
      } : [h("label", {
        htmlFor: 'k-editor-image-title',
        attrs: _this.v3 ? undefined : {
          htmlFor: 'k-editor-image-title'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageTitle, main_1.messages[insertImageTitle])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: 'text',
        attrs: _this.v3 ? undefined : {
          type: 'text',
          id: "k-editor-image-title",
          value: _this.titleValue
        },
        id: "k-editor-image-title",
        value: _this.titleValue,
        onInput: _this.handleTitleInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleTitleInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'title')
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          "for": 'k-editor-image-width',
          attrs: _this.v3 ? undefined : {
            "for": 'k-editor-image-width'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageWidth, main_1.messages[insertImageWidth])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          type: 'text',
          attrs: _this.v3 ? undefined : {
            type: 'text',
            id: "k-editor-image-width",
            value: _this.widthValue
          },
          id: "k-editor-image-width",
          value: _this.widthValue,
          onInput: _this.handleWidthInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleWidthInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'width')
        })])];
      } : [h("label", {
        "for": 'k-editor-image-width',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-image-width'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageWidth, main_1.messages[insertImageWidth])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: 'text',
        attrs: _this.v3 ? undefined : {
          type: 'text',
          id: "k-editor-image-width",
          value: _this.widthValue
        },
        id: "k-editor-image-width",
        value: _this.widthValue,
        onInput: _this.handleWidthInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleWidthInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'width')
      })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
        return [h("label", {
          htmlFor: 'k-editor-image-height',
          attrs: _this.v3 ? undefined : {
            htmlFor: 'k-editor-image-height'
          },
          "class": 'k-form-label'
        }, [localization.toLanguageString(insertImageHeight, main_1.messages[insertImageHeight])]), h("div", {
          "class": 'k-form-field-wrap'
        }, [h(kendo_vue_inputs_1.Input, {
          id: "k-editor-image-height",
          attrs: _this.v3 ? undefined : {
            id: "k-editor-image-height",
            value: _this.heightValue
          },
          value: _this.heightValue,
          onInput: _this.handleHeightInput,
          on: _this.v3 ? undefined : {
            "input": _this.handleHeightInput
          },
          ref: (0, kendo_vue_common_1.setRef)(_this, 'height')
        })])];
      } : [h("label", {
        htmlFor: 'k-editor-image-height',
        attrs: _this.v3 ? undefined : {
          htmlFor: 'k-editor-image-height'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageHeight, main_1.messages[insertImageHeight])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        id: "k-editor-image-height",
        attrs: _this.v3 ? undefined : {
          id: "k-editor-image-height",
          value: _this.heightValue
        },
        value: _this.heightValue,
        onInput: _this.handleHeightInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleHeightInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'height')
      })])])];
    } : [h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
      return [h("label", {
        "for": 'k-editor-image-url',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-image-url'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageAddress, main_1.messages[insertImageAddress])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: "text",
        attrs: _this.v3 ? undefined : {
          type: "text",
          id: 'k-editor-image-url',
          value: _this.srcValue
        },
        id: 'k-editor-image-url',
        value: _this.srcValue,
        onInput: _this.handleSrcInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleSrcInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'src')
      })])];
    } : [h("label", {
      "for": 'k-editor-image-url',
      attrs: _this.v3 ? undefined : {
        "for": 'k-editor-image-url'
      },
      "class": 'k-form-label'
    }, [localization.toLanguageString(insertImageAddress, main_1.messages[insertImageAddress])]), h("div", {
      "class": 'k-form-field-wrap'
    }, [h(kendo_vue_inputs_1.Input, {
      type: "text",
      attrs: _this.v3 ? undefined : {
        type: "text",
        id: 'k-editor-image-url',
        value: _this.srcValue
      },
      id: 'k-editor-image-url',
      value: _this.srcValue,
      onInput: _this.handleSrcInput,
      on: _this.v3 ? undefined : {
        "input": _this.handleSrcInput
      },
      ref: (0, kendo_vue_common_1.setRef)(_this, 'src')
    })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
      return [h("label", {
        "for": 'k-editor-image-url',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-image-url'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageAltText, main_1.messages[insertImageAltText])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: 'text',
        attrs: _this.v3 ? undefined : {
          type: 'text',
          id: "k-editor-image-alt",
          value: _this.altValue
        },
        id: "k-editor-image-alt",
        value: _this.altValue,
        onInput: _this.handleAltInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleAltInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'altText')
      })])];
    } : [h("label", {
      "for": 'k-editor-image-url',
      attrs: _this.v3 ? undefined : {
        "for": 'k-editor-image-url'
      },
      "class": 'k-form-label'
    }, [localization.toLanguageString(insertImageAltText, main_1.messages[insertImageAltText])]), h("div", {
      "class": 'k-form-field-wrap'
    }, [h(kendo_vue_inputs_1.Input, {
      type: 'text',
      attrs: _this.v3 ? undefined : {
        type: 'text',
        id: "k-editor-image-alt",
        value: _this.altValue
      },
      id: "k-editor-image-alt",
      value: _this.altValue,
      onInput: _this.handleAltInput,
      on: _this.v3 ? undefined : {
        "input": _this.handleAltInput
      },
      ref: (0, kendo_vue_common_1.setRef)(_this, 'altText')
    })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
      return [h("label", {
        htmlFor: 'k-editor-image-title',
        attrs: _this.v3 ? undefined : {
          htmlFor: 'k-editor-image-title'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageTitle, main_1.messages[insertImageTitle])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: 'text',
        attrs: _this.v3 ? undefined : {
          type: 'text',
          id: "k-editor-image-title",
          value: _this.titleValue
        },
        id: "k-editor-image-title",
        value: _this.titleValue,
        onInput: _this.handleTitleInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleTitleInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'title')
      })])];
    } : [h("label", {
      htmlFor: 'k-editor-image-title',
      attrs: _this.v3 ? undefined : {
        htmlFor: 'k-editor-image-title'
      },
      "class": 'k-form-label'
    }, [localization.toLanguageString(insertImageTitle, main_1.messages[insertImageTitle])]), h("div", {
      "class": 'k-form-field-wrap'
    }, [h(kendo_vue_inputs_1.Input, {
      type: 'text',
      attrs: _this.v3 ? undefined : {
        type: 'text',
        id: "k-editor-image-title",
        value: _this.titleValue
      },
      id: "k-editor-image-title",
      value: _this.titleValue,
      onInput: _this.handleTitleInput,
      on: _this.v3 ? undefined : {
        "input": _this.handleTitleInput
      },
      ref: (0, kendo_vue_common_1.setRef)(_this, 'title')
    })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
      return [h("label", {
        "for": 'k-editor-image-width',
        attrs: _this.v3 ? undefined : {
          "for": 'k-editor-image-width'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageWidth, main_1.messages[insertImageWidth])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        type: 'text',
        attrs: _this.v3 ? undefined : {
          type: 'text',
          id: "k-editor-image-width",
          value: _this.widthValue
        },
        id: "k-editor-image-width",
        value: _this.widthValue,
        onInput: _this.handleWidthInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleWidthInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'width')
      })])];
    } : [h("label", {
      "for": 'k-editor-image-width',
      attrs: _this.v3 ? undefined : {
        "for": 'k-editor-image-width'
      },
      "class": 'k-form-label'
    }, [localization.toLanguageString(insertImageWidth, main_1.messages[insertImageWidth])]), h("div", {
      "class": 'k-form-field-wrap'
    }, [h(kendo_vue_inputs_1.Input, {
      type: 'text',
      attrs: _this.v3 ? undefined : {
        type: 'text',
        id: "k-editor-image-width",
        value: _this.widthValue
      },
      id: "k-editor-image-width",
      value: _this.widthValue,
      onInput: _this.handleWidthInput,
      on: _this.v3 ? undefined : {
        "input": _this.handleWidthInput
      },
      ref: (0, kendo_vue_common_1.setRef)(_this, 'width')
    })])]), h(kendo_vue_form_1.FieldWrapper, _this.v3 ? function () {
      return [h("label", {
        htmlFor: 'k-editor-image-height',
        attrs: _this.v3 ? undefined : {
          htmlFor: 'k-editor-image-height'
        },
        "class": 'k-form-label'
      }, [localization.toLanguageString(insertImageHeight, main_1.messages[insertImageHeight])]), h("div", {
        "class": 'k-form-field-wrap'
      }, [h(kendo_vue_inputs_1.Input, {
        id: "k-editor-image-height",
        attrs: _this.v3 ? undefined : {
          id: "k-editor-image-height",
          value: _this.heightValue
        },
        value: _this.heightValue,
        onInput: _this.handleHeightInput,
        on: _this.v3 ? undefined : {
          "input": _this.handleHeightInput
        },
        ref: (0, kendo_vue_common_1.setRef)(_this, 'height')
      })])];
    } : [h("label", {
      htmlFor: 'k-editor-image-height',
      attrs: _this.v3 ? undefined : {
        htmlFor: 'k-editor-image-height'
      },
      "class": 'k-form-label'
    }, [localization.toLanguageString(insertImageHeight, main_1.messages[insertImageHeight])]), h("div", {
      "class": 'k-form-field-wrap'
    }, [h(kendo_vue_inputs_1.Input, {
      id: "k-editor-image-height",
      attrs: _this.v3 ? undefined : {
        id: "k-editor-image-height",
        value: _this.heightValue
      },
      value: _this.heightValue,
      onInput: _this.handleHeightInput,
      on: _this.v3 ? undefined : {
        "input": _this.handleHeightInput
      },
      ref: (0, kendo_vue_common_1.setRef)(_this, 'height')
    })])])])]);
    var actionButtons = [
    // @ts-ignore function children
    h(kendo_vue_buttons_1.Button, {
      type: "button",
      attrs: this.v3 ? undefined : {
        type: "button",
        dir: dir
      },
      onClick: this.onClose,
      on: this.v3 ? undefined : {
        "click": this.onClose
      },
      dir: dir,
      key: "cancel"
    }, this.v3 ? function () {
      return [localization.toLanguageString(insertImageCancel, main_1.messages[insertImageCancel])];
    } : [localization.toLanguageString(insertImageCancel, main_1.messages[insertImageCancel])]),
    // @ts-ignore function children
    h(kendo_vue_buttons_1.Button, {
      type: "button",
      attrs: this.v3 ? undefined : {
        type: "button",
        disabled: !this.srcValue,
        themeColor: 'primary',
        dir: dir
      },
      disabled: !this.srcValue,
      onClick: this.onInsert,
      on: this.v3 ? undefined : {
        "click": this.onInsert
      },
      themeColor: 'primary',
      dir: dir,
      key: "insert"
    }, this.v3 ? function () {
      return [localization.toLanguageString(insertImageInsert, main_1.messages[insertImageInsert])];
    } : [localization.toLanguageString(insertImageInsert, main_1.messages[insertImageInsert])])];
    var dialog =
    // @ts-ignore function children
    h(kendo_vue_dialogs_1.Window, {
      initialWidth: 500,
      attrs: this.v3 ? undefined : {
        initialWidth: 500,
        initialHeight: 360,
        windowClass: 'k-editor-window',
        title: localization.toLanguageString(insertImageDialogTitle, main_1.messages[insertImageDialogTitle]),
        dir: dir,
        modal: true,
        minimizeButton: function minimizeButton() {
          return null;
        },
        maximizeButton: function maximizeButton() {
          return null;
        },
        resizable: false
      },
      initialHeight: 360,
      windowClass: 'k-editor-window',
      title: localization.toLanguageString(insertImageDialogTitle, main_1.messages[insertImageDialogTitle]),
      onClose: this.onClose,
      on: this.v3 ? undefined : {
        "close": this.onClose
      },
      key: "dialog",
      dir: dir,
      style: dir === 'rtl' ? {
        textAlign: 'right'
      } : undefined,
      modal: true,
      minimizeButton: function minimizeButton() {
        return null;
      },
      maximizeButton: function maximizeButton() {
        return null;
      },
      resizable: false
    }, this.v3 ? function () {
      return [content,
      // @ts-ignore function children
      h(kendo_vue_dialogs_1.DialogActionsBar, _this.v3 ? function () {
        return [actionButtons];
      } : [actionButtons])];
    } : [content, h(kendo_vue_dialogs_1.DialogActionsBar, _this.v3 ? function () {
      return [actionButtons];
    } : [actionButtons])]);
    return dialog;
  },
  methods: {
    handleSrcInput: function handleSrcInput(e) {
      this.srcValue = e.value;
    },
    handleAltInput: function handleAltInput(e) {
      this.altValue = e.value;
    },
    handleTitleInput: function handleTitleInput(e) {
      this.titleValue = e.value;
    },
    handleWidthInput: function handleWidthInput(e) {
      this.widthValue = e.value;
    },
    handleHeightInput: function handleHeightInput(e) {
      this.heightValue = e.value;
    },
    onClose: function onClose() {
      this.$props.view.focus();
      this.$emit('close');
    },
    onInsert: function onInsert() {
      var _a = this.$props,
        view = _a.view,
        settings = _a.settings;
      var nodes = view.state.schema.nodes;
      var nodeType = nodes[settings.node];
      var data = {
        src: this.src ? this.srcValue : null,
        title: this.title ? this.titleValue : null,
        alt: this.altText ? this.altValue : null,
        width: this.width ? this.widthValue : null,
        height: this.height ? this.heightValue : null
      };
      var attrs = Object.keys(data).filter(function (key) {
        return data[key] !== null && data[key] !== '';
      }).reduce(function (acc, curr) {
        var _a;
        return Object.assign(acc, (_a = {}, _a[curr] = data[curr], _a));
      }, {});
      var newImage = nodeType.createAndFill(attrs);
      var insertImageCmd = (0, kendo_editor_common_1.insertNode)(newImage, true);
      insertImageCmd(view.state, function (tr) {
        return view.dispatch(tr.setMeta('commandName', settings.commandName).setMeta('args', attrs));
      });
      this.onClose();
    }
  }
};
exports.InsertImageDialogVue2 = InsertImageDialogVue2;
/**
 * @hidden
 */
var InsertImageDialog = InsertImageDialogVue2;
exports.InsertImageDialog = InsertImageDialog;