import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { EditorTools } from '../main';
/**
 * @hidden
 */
export interface AlignState {
}
/**
 * @hidden
 */
export interface AlignComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface AlignMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface AlignData {
}
/**
 * @hidden
 */
export interface AlignAll extends Vue2type, AlignMethods, AlignData, AlignComputed, AlignState {
}
/**
 * @hidden
 */
declare let AlignVue2: ComponentOptions<AlignAll, DefaultData<AlignData>, DefaultMethods<AlignAll>, AlignComputed, RecordPropsDefinition<EditorTools.AlignToolProps>>;
/**
 * @hidden
 */
declare const Align: DefineComponent<EditorTools.AlignToolProps, any, AlignData, AlignComputed, AlignMethods, {}, {}, {}, string, EditorTools.AlignToolProps, EditorTools.AlignToolProps, {}>;
export { Align, AlignVue2 };
