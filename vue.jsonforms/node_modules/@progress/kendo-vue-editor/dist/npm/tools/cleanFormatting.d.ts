import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ToolProps } from './ToolProps';
import { EditorToolsSettings } from './../config/toolsSettings';
export interface CleanFormattingProps extends ToolProps {
    /**
     * The settings of the tool. Use it to modify the tool appearance.
     */
    settings?: EditorToolsSettings.CleanFormattingSettings;
}
/**
 * @hidden
 */
export interface CleanFormattingState {
}
/**
 * @hidden
 */
export interface CleanFormattingComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CleanFormattingMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CleanFormattingData {
}
/**
 * @hidden
 */
export interface CleanFormattingAll extends Vue2type, CleanFormattingMethods, CleanFormattingData, CleanFormattingComputed, CleanFormattingState {
}
/**
 * @hidden
 */
declare let CleanFormattingVue2: ComponentOptions<CleanFormattingAll, DefaultData<CleanFormattingData>, DefaultMethods<CleanFormattingAll>, CleanFormattingComputed, RecordPropsDefinition<CleanFormattingProps>>;
/**
 * @hidden
 */
declare const CleanFormatting: DefineComponent<CleanFormattingProps, any, CleanFormattingData, CleanFormattingComputed, CleanFormattingMethods, {}, {}, {}, string, CleanFormattingProps, CleanFormattingProps, {}>;
export { CleanFormatting, CleanFormattingVue2 };
