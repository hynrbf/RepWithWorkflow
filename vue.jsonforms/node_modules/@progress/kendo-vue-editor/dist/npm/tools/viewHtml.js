"use strict";

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ViewHtmlVue2 = exports.ViewHtml = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_buttons_1 = require("@progress/kendo-vue-buttons");
var viewHtml_1 = require("../dialogs/viewHtml");
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var main_1 = require("../messages/main");
/**
 * @hidden
 */
var ViewHtmlVue2 = {
  name: 'KendoViewHtml',
  props: __assign({
    view: Object,
    settings: {
      type: Object,
      default: function _default() {
        return {
          messages: {}
        };
      }
    }
  }, kendo_vue_buttons_1.Button.props),
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  data: function data() {
    return {
      openedDialog: false
    };
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
      view = _a.view,
      settings = _a.settings,
      other = __rest(_a, ["view", "settings"]);
    var localization = (0, kendo_vue_intl_1.provideLocalizationService)(this);
    var titleKey = settings.messages.viewHtml;
    var buttonProps = __assign(__assign(__assign({}, other), {
      key: 'viewHtml',
      title: localization.toLanguageString(titleKey, main_1.messages[titleKey])
    }), settings.props);
    var button = h(kendo_vue_buttons_1.Button, __assign({
      onClick: this.toggleDialog,
      onMousedown: this.preventDefault,
      onPointerdown: this.preventDefault,
      on: this.v3 ? undefined : {
        'click': this.toggleDialog,
        'mousedown': this.preventDefault,
        'pointerdown': this.preventDefault
      },
      attrs: this.v3 ? undefined : buttonProps
    }, buttonProps));
    var rendering = [button, this.openedDialog && view &&
    // @ts-ignore function children
    h(viewHtml_1.ViewHtmlDialog, {
      key: "viewHtmlDialog",
      view: view,
      attrs: this.v3 ? undefined : {
        view: view,
        settings: settings,
        dir: buttonProps.dir
      },
      settings: settings,
      dir: buttonProps.dir,
      onClose: this.toggleDialog,
      on: this.v3 ? undefined : {
        "close": this.toggleDialog
      }
    }) || null];
    return h("span", [rendering]);
  },
  methods: {
    toggleDialog: function toggleDialog() {
      this.openedDialog = !this.openedDialog;
    },
    preventDefault: function preventDefault(e) {
      e.preventDefault();
    }
  }
};
exports.ViewHtmlVue2 = ViewHtmlVue2;
/**
 * @hidden
 */
var ViewHtml = ViewHtmlVue2;
exports.ViewHtml = ViewHtml;