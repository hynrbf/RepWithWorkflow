import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * Represents the props of the Kendo U for Vue FieldWrapper component.
 */
export interface FieldWrapperProps {
    /**
     * If set to `true` enable the horizontal layout of the form editors.
     */
    horizontal?: boolean;
    /**
     * @hidden
     */
    [customProp: string]: any;
}
/**
 * Represent the `ref` of the FieldWrapper component.
 */
export interface FieldWrapperHandle {
    props: FieldWrapperProps;
}
/**
 * @hidden
 */
interface FieldWrapperState {
}
/**
 * @hidden
 */
interface FieldWrapperData {
}
/**
 * @hidden
 */
export interface FieldWrapperMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FieldWrapperComputed {
    [key: string]: any;
    fieldClassName: object;
}
/**
 * @hidden
 */
export interface FieldWrapperAll extends FieldWrapperMethods, FieldWrapperState, FieldWrapperData, FieldWrapperComputed, Vue2type {
}
/**
 * @hidden
 */
declare const FieldWrapperVue2: ComponentOptions<Vue2type, DefaultData<FieldWrapperData>, DefaultMethods<FieldWrapperAll>, FieldWrapperComputed, RecordPropsDefinition<FieldWrapperProps>>;
/**
 * @hidden
 */
declare let FieldWrapper: DefineComponent<FieldWrapperProps, any, FieldWrapperData, FieldWrapperComputed, FieldWrapperMethods, {}, {}, {}, string, FieldWrapperProps, FieldWrapperProps, {}>;
export { FieldWrapper, FieldWrapperVue2 };
