"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScrollViewVue2 = exports.ScrollView = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var package_metadata_1 = require("./package-metadata");
var kendo_svg_icons_1 = require("@progress/kendo-svg-icons");
/**
 * @hidden
 */
var ScrollViewVue2 = {
  name: 'KendoScrollView',
  props: {
    activeView: {
      type: Number,
      default: 1
    },
    dataItems: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    arrows: {
      type: Boolean,
      default: true
    },
    automaticViewChange: {
      type: Boolean,
      default: true
    },
    automaticViewChangeInterval: {
      type: Number,
      default: 5000
    },
    content: [Object, String, Function],
    dir: String,
    endless: Boolean,
    pageable: {
      type: Boolean,
      default: true
    },
    pagerOverlay: {
      type: String,
      default: 'none'
    }
  },
  created: function created() {
    (0, kendo_vue_common_1.validatePackage)(package_metadata_1.packageMetadata);
    this.timeoutRef = null;
  },
  mounted: function mounted() {
    this.wrapElement = (0, kendo_vue_common_1.getRef)(this, 'wrapElement');
    this.currentDir = this.$props.dir !== undefined ? this.$props.dir : (0, kendo_vue_common_1.isRtl)(this.$el) ? 'rtl' : 'ltr';
    this.runAutomaticChange();
  },
  updated: function updated() {
    var viewsCount = this.dataItems.length;
    if (this.wrapElement) {
      this.wrapElement.style.setProperty('--kendo-scrollview-views', "".concat(viewsCount));
      this.wrapElement.style.setProperty('--kendo-scrollview-current', "".concat(this.active));
    }
    this.runAutomaticChange();
  },
  data: function data() {
    return {
      active: this.activeView || 1,
      currentDir: undefined
    };
  },
  computed: {
    scrollViewClasses: function scrollViewClasses() {
      return {
        'k-scrollview': true,
        'k-scrollview-light': this.pagerOverlay === 'light',
        'k-scrollview-dark': this.pagerOverlay === 'dark'
      };
    },
    displayLeftArrow: function displayLeftArrow() {
      var isNotBorderItem;
      if (this.isRtl) {
        isNotBorderItem = this.active < this.dataItems.length;
      } else {
        isNotBorderItem = this.active > 1;
      }
      return (this.endless || isNotBorderItem) && this.dataItems.length > 0;
    },
    displayRightArrow: function displayRightArrow() {
      var isNotBorderItem;
      if (this.isRtl) {
        isNotBorderItem = this.active > 1;
      } else {
        isNotBorderItem = this.active < this.dataItems.length;
      }
      return (this.endless || isNotBorderItem) && this.dataItems.length > 0;
    },
    isRtl: function isRtl() {
      return this.currentDir === 'rtl';
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
      pageable = _a.pageable,
      arrows = _a.arrows,
      content = _a.content;
    var viewsCount = this.dataItems.length;
    var allContent = this.dataItems.map(function (item, index) {
      var contentTemplate = kendo_vue_common_1.templateRendering.call(this, item.content || content, kendo_vue_common_1.getListeners.call(this));
      var contentRender = kendo_vue_common_1.getTemplate.call(this, {
        h: h,
        template: contentTemplate,
        defaultRendering: null,
        additionalProps: {
          item: item,
          items: this.dataItems
        }
      });
      return h("div", {
        "class": "k-scrollview-view",
        "aria-hidden": this.active === index + 1 ? false : true,
        attrs: this.v3 ? undefined : {
          "aria-hidden": this.active === index + 1 ? false : true
        }
      }, [contentRender]);
    }, this);
    return h("div", {
      "class": this.scrollViewClasses,
      tabindex: 0,
      attrs: this.v3 ? undefined : {
        tabindex: 0,
        dir: this.currentDir
      },
      dir: this.currentDir,
      onKeydown: this.handleKeyDown,
      on: this.v3 ? undefined : {
        "keydown": this.handleKeyDown
      }
    }, [h("div", {
      "class": "k-scrollview-wrap k-scrollview-animate",
      style: "--kendo-scrollview-views:".concat(viewsCount, "; --kendo-scrollview-current:").concat(this.active, ";"),
      ref: (0, kendo_vue_common_1.setRef)(this, 'wrapElement')
    }, [allContent]), h("div", {
      "class": "k-scrollview-elements"
    }, [arrows && [this.displayLeftArrow && h("span", {
      "class": "k-scrollview-prev",
      "aria-label": "previous",
      attrs: this.v3 ? undefined : {
        "aria-label": "previous"
      },
      onClick: this.handlePrevClick,
      on: this.v3 ? undefined : {
        "click": this.handlePrevClick
      }
    }, [h(kendo_vue_common_1.Icon, {
      name: this.isRtl ? 'chevron-right' : 'chevron-left',
      attrs: this.v3 ? undefined : {
        name: this.isRtl ? 'chevron-right' : 'chevron-left',
        icon: this.isRtl ? kendo_svg_icons_1.chevronRightIcon : kendo_svg_icons_1.chevronLeftIcon,
        size: 'xxxlarge'
      },
      icon: this.isRtl ? kendo_svg_icons_1.chevronRightIcon : kendo_svg_icons_1.chevronLeftIcon,
      size: 'xxxlarge'
    })]), this.displayRightArrow && h("span", {
      "class": "k-scrollview-next",
      "aria-label": "next",
      attrs: this.v3 ? undefined : {
        "aria-label": "next"
      },
      onClick: this.handleNextClick,
      on: this.v3 ? undefined : {
        "click": this.handleNextClick
      }
    }, [h(kendo_vue_common_1.Icon, {
      name: this.isRtl ? 'chevron-left' : 'chevron-right',
      attrs: this.v3 ? undefined : {
        name: this.isRtl ? 'chevron-left' : 'chevron-right',
        icon: this.isRtl ? kendo_svg_icons_1.chevronLeftIcon : kendo_svg_icons_1.chevronRightIcon,
        size: 'xxxlarge'
      },
      icon: this.isRtl ? kendo_svg_icons_1.chevronLeftIcon : kendo_svg_icons_1.chevronRightIcon,
      size: 'xxxlarge'
    })])], pageable && h("div", {
      "class": "k-scrollview-nav-wrap"
    }, [h("ul", {
      "class": "k-scrollview-nav"
    }, [this.dataItems.map(function (_, index) {
      var _this = this;
      return h("li", {
        "class": (0, kendo_vue_common_1.classNames)('k-link', {
          'k-primary': this.active === index + 1
        }),
        key: index + 1,
        onClick: function onClick() {
          return _this.setActive(index + 1);
        },
        on: this.v3 ? undefined : {
          "click": function onClick() {
            return _this.setActive(index + 1);
          }
        }
      });
    }, this)])])])]);
  },
  methods: {
    runAutomaticChange: function runAutomaticChange() {
      if (this.automaticViewChange) {
        this.resetTimeout();
        var that_1 = this;
        var prevIndex_1 = this.active;
        this.timeoutRef = setTimeout(function () {
          that_1.setActive(prevIndex_1 === that_1.dataItems.length ? that_1.endless ? 1 : prevIndex_1 : prevIndex_1 + 1);
        }, this.automaticViewChangeInterval);
      }
    },
    resetTimeout: function resetTimeout() {
      if (this.timeoutRef) {
        clearTimeout(this.timeoutRef);
      }
    },
    setActive: function setActive(value) {
      this.active = value;
    },
    focusElement: function focusElement() {
      if (this.$el) {
        this.$el.focus();
      }
    },
    prev: function prev() {
      if (!this.endless) {
        if (this.active > 1) {
          this.setActive(this.active - 1);
        }
      } else {
        this.active > 1 ? this.setActive(this.active - 1) : this.setActive(this.dataItems.length);
      }
    },
    next: function next() {
      if (!this.endless) {
        if (this.active < this.dataItems.length) {
          this.setActive(this.active + 1);
        }
      } else {
        this.active < this.dataItems.length ? this.setActive(this.active + 1) : this.setActive(1);
      }
    },
    handlePrevClick: function handlePrevClick() {
      if (!this.isRtl) {
        this.prev();
      } else {
        this.next();
      }
    },
    handleNextClick: function handleNextClick() {
      if (!this.isRtl) {
        this.next();
      } else {
        this.prev();
      }
    },
    handleKeyDown: function handleKeyDown(event) {
      switch (event.keyCode) {
        case kendo_vue_common_1.Keys.left:
          event.preventDefault();
          if (!this.isRtl) {
            this.prev();
          } else {
            this.next();
          }
          break;
        case kendo_vue_common_1.Keys.right:
          event.preventDefault();
          if (!this.isRtl) {
            this.next();
          } else {
            this.prev();
          }
          break;
        default:
          break;
      }
    }
  }
};
exports.ScrollViewVue2 = ScrollViewVue2;
/**
 *
 * Represents the [Kendo UI for Vue Native ScrollView component]({% slug overview_scrollview %}).
 *
 *  ```jsx
 *  <template>
 *    <div>
 *      <ScrollView
 *        :style="{
 *          width: '512px',
 *          height: '384px',
 *        }"
 *        :data-items="items"
 *        :content="'content'"
 *      >
 *        <template v-slot:content="{ props }">
 *          <div class="image-with-text">
 *            <img
 *              :src="props.item.url"
 *              :alt="`Photo ${props.item.position}`"
 *              :style="{
 *                width: '512px',
 *                height: '384px',
 *              }"
 *              :draggable="false"
 *            />
 *          </div>
 *        </template>
 *      </ScrollView>
 *    </div>
 *  </template>
 *
 *  <script>
 *  import { ScrollView } from '@progress/kendo-vue-scrollview';
 *
 *  export default {
 *    components: {
 *      ScrollView,
 *    },
 *    data() {
 *      return {
 *        items: [
 *          {
 *            url: 'https://www.telerik.com/kendo-vue-ui/components/layout/assets/card/kukeri.jpg',
 *          },
 *          {
 *            url: 'https://www.telerik.com/kendo-vue-ui/components/layout/assets/card/martenitsa.jpg',
 *          },
 *          {
 *            url: 'https://www.telerik.com/kendo-vue-ui/components/layout/assets/card/rose_festival.jpg',
 *          },
 *        ],
 *      };
 *    },
 *  };
 *  </script>
 *  ```
 */
var ScrollView = ScrollViewVue2;
exports.ScrollView = ScrollView;