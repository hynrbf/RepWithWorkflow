{"version":3,"file":"jsonforms-vue.esm.js","sources":["../src/components/UnknownRenderer.vue","../src/components/UnknownRenderer.vue?vue&type=template&id=1df74034&lang.js","../src/jsonFormsCompositions.ts","../src/components/DispatchRenderer.vue","../src/components/DispatchRenderer.vue?vue&type=template&id=0e0a850f&lang.js","../src/components/DispatchCell.vue","../src/components/DispatchCell.vue?vue&type=template&id=d74ad3b8&lang.js","../src/components/JsonForms.vue","../src/components/JsonForms.vue?vue&type=template&id=23d6bab1&lang.js"],"sourcesContent":["<template>\n  <div>No applicable renderer found.</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'UnknownRenderer',\n});\n</script>\n","<template>\n  <div>No applicable renderer found.</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'UnknownRenderer',\n});\n</script>\n","import {\n  ControlElement,\n  Dispatch,\n  Layout,\n  mapDispatchToControlProps,\n  mapStateToControlProps,\n  mapStateToLayoutProps,\n  JsonFormsSubStates,\n  JsonSchema,\n  UISchemaElement,\n  CoreActions,\n  mapStateToEnumControlProps,\n  JsonFormsState,\n  mapStateToOneOfEnumControlProps,\n  OwnPropsOfMasterListItem,\n  mapStateToMasterListItemProps,\n  mapStateToControlWithDetailProps,\n  mapStateToArrayControlProps,\n  mapDispatchToArrayControlProps,\n  mapStateToAllOfProps,\n  mapStateToAnyOfProps,\n  mapStateToOneOfProps,\n  mapStateToJsonFormsRendererProps,\n  mapStateToArrayLayoutProps,\n  mapStateToCellProps,\n  JsonFormsRendererRegistryEntry,\n  JsonFormsCellRendererRegistryEntry,\n  defaultMapStateToEnumCellProps,\n  mapStateToDispatchCellProps,\n  mapStateToOneOfEnumCellProps,\n  StatePropsOfJsonFormsRenderer,\n  createId,\n  removeId,\n  mapStateToMultiEnumControlProps,\n  mapDispatchToMultiEnumProps,\n  mapStateToLabelProps,\n  LabelElement,\n} from '@jsonforms/core';\nimport {\n  PropType,\n  computed,\n  ComputedRef,\n  inject,\n  onBeforeMount,\n  onUnmounted,\n  ref,\n} from 'vue';\n\n/**\n * Constructs a props declaration for Vue components which can be used\n * for registered renderers and cells. These are typically used in combination\n * with one of the provided bindings, e.g. 'useJsonFormsControl'.\n *\n * Use the generic type parameter when using a specialized binding, e.g.\n * `rendererProps<Layout>()` in combination with `useJsonFormsLayout` or\n * `rendererProps<ControlElement>()` in combination with `useJsonFormsControl`.\n */\nexport const rendererProps = <U = UISchemaElement>() => ({\n  schema: {\n    required: true as const,\n    type: [Object, Boolean] as PropType<JsonSchema>,\n  },\n  uischema: {\n    required: true as const,\n    type: Object as PropType<U>,\n  },\n  path: {\n    required: true as const,\n    type: String,\n  },\n  enabled: {\n    required: false as const,\n    type: Boolean,\n    default: undefined,\n  },\n  renderers: {\n    required: false,\n    type: Array as PropType<JsonFormsRendererRegistryEntry[]>,\n    default: undefined,\n  },\n  cells: {\n    required: false,\n    type: Array as PropType<JsonFormsCellRendererRegistryEntry[]>,\n    default: undefined,\n  },\n  config: {\n    required: false,\n    type: Object,\n    default: undefined,\n  },\n});\n\n/**\n * Constructs a props declaration for Vue components which shall be used as\n * master list items.\n */\nexport const masterListItemProps = () => ({\n  index: {\n    required: true as const,\n    type: Number,\n  },\n  selected: {\n    required: true as const,\n    type: Boolean,\n  },\n  path: {\n    required: true as const,\n    type: String,\n  },\n  schema: {\n    required: true as const,\n    type: [Object, Boolean] as PropType<JsonSchema>,\n  },\n  handleSelect: {\n    required: false as const,\n    type: Function as PropType<(index: number) => void>,\n    default: undefined,\n  },\n  removeItem: {\n    required: false as const,\n    type: Function as PropType<(path: string, value: number) => void>,\n    default: undefined,\n  },\n});\n\nexport interface RendererProps<U = UISchemaElement> {\n  schema: JsonSchema;\n  uischema: U;\n  path: string;\n  enabled?: boolean;\n  renderers?: JsonFormsRendererRegistryEntry[];\n  cells?: JsonFormsCellRendererRegistryEntry[];\n  config?: any;\n}\n\nexport interface ControlProps extends RendererProps {\n  uischema: ControlElement;\n}\n\nexport type Required<T> = T extends object\n  ? { [P in keyof T]-?: NonNullable<T[P]> }\n  : T;\n\n// TODO fix @typescript-eslint/ban-types\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-unused-vars\nexport function useControl<R, D, P extends {}>(\n  props: P,\n  stateMap: (state: JsonFormsState, props: P) => R\n): { control: ComputedRef<Required<R>> };\n// TODO fix @typescript-eslint/ban-types\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function useControl<R, D, P extends {}>(\n  props: P,\n  stateMap: (state: JsonFormsState, props: P) => R,\n  dispatchMap: (dispatch: Dispatch<CoreActions>) => D\n): { control: ComputedRef<Required<R>> } & D;\n// TODO fix @typescript-eslint/ban-types\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function useControl<R, D, P extends {}>(\n  props: P,\n  stateMap: (state: JsonFormsState, props: P) => R,\n  dispatchMap?: (dispatch: Dispatch<CoreActions>) => D\n) {\n  const jsonforms = inject<JsonFormsSubStates>('jsonforms');\n  const dispatch = inject<Dispatch<CoreActions>>('dispatch');\n\n  if (!jsonforms || !dispatch) {\n    throw \"'jsonforms' or 'dispatch' couldn't be injected. Are you within JSON Forms?\";\n  }\n\n  const id = ref<string | undefined>(undefined);\n  const control = computed(() => ({\n    ...props,\n    ...stateMap({ jsonforms }, props),\n    id: id.value,\n  }));\n\n  const dispatchMethods = dispatchMap?.(dispatch);\n\n  onBeforeMount(() => {\n    if ((control.value as any).uischema.scope) {\n      id.value = createId((control.value as any).uischema.scope);\n    }\n  });\n\n  onUnmounted(() => {\n    if (id.value) {\n      removeId(id.value);\n      id.value = undefined;\n    }\n  });\n\n  return {\n    control: control as unknown as ComputedRef<R>,\n    ...dispatchMethods,\n  };\n}\n\n/**\n * Provides generic bindings for 'Control' elements.\n * Should be used when no specialized bindings are appropriate.\n *\n * Access bindings via the provided reactive `control` object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsControl = (props: ControlProps) => {\n  return useControl(props, mapStateToControlProps, mapDispatchToControlProps);\n};\n\n/**\n * Provides bindings for 'Control' elements which can provide a 'detail',\n * for example array and object renderers.\n *\n * Access bindings via the provided reactive `control` object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsControlWithDetail = (props: ControlProps) => {\n  return useControl(\n    props,\n    mapStateToControlWithDetailProps,\n    mapDispatchToControlProps\n  );\n};\n\n/**\n * Provides bindings for 'Control' elements which resolve to 'enum' schema elements.\n *\n * Access bindings via the provided reactive `control` object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsEnumControl = (props: ControlProps) => {\n  return useControl(\n    props,\n    mapStateToEnumControlProps,\n    mapDispatchToControlProps\n  );\n};\n\n/**\n * Provides bindings for 'Control' elements which resolve to manually constructed\n * 'oneOf' enums. These are used to enhance enums with label support.\n *\n * Access bindings via the provided reactive `control` object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsOneOfEnumControl = (props: ControlProps) => {\n  return useControl(\n    props,\n    mapStateToOneOfEnumControlProps,\n    mapDispatchToControlProps\n  );\n};\n\n/**\n * Provides bindings for 'Control' elements which resolve to 'array' schema elements.\n *\n * Access bindings via the provided reactive `control` object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsArrayControl = (props: ControlProps) => {\n  return useControl(\n    props,\n    mapStateToArrayControlProps,\n    mapDispatchToArrayControlProps\n  );\n};\n\n/**\n * Provides bindings for 'Control' elements which resolve to 'allOf' schema elements.\n *\n * Access bindings via the provided reactive `control` object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsAllOfControl = (props: ControlProps) => {\n  return useControl(props, mapStateToAllOfProps, mapDispatchToControlProps);\n};\n\n/**\n * Provides bindings for 'Control' elements which resolve to 'anyOf' schema elements.\n *\n * Access bindings via the provided reactive `control` object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsAnyOfControl = (props: ControlProps) => {\n  return useControl(props, mapStateToAnyOfProps, mapDispatchToControlProps);\n};\n\n/**\n * Provides bindings for 'Control' elements which resolve to 'oneOf' schema elements.\n *\n * Access bindings via the provided reactive `control` object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsOneOfControl = (props: ControlProps) => {\n  return useControl(props, mapStateToOneOfProps, mapDispatchToControlProps);\n};\n\n/**\n * Provides bindings for 'Control' elements which resolve to multiple choice enums.\n *\n * Access bindings via the provided reactive `control` object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsMultiEnumControl = (props: ControlProps) => {\n  return useControl(\n    props,\n    mapStateToMultiEnumControlProps,\n    mapDispatchToMultiEnumProps\n  );\n};\n\nexport interface LayoutProps extends RendererProps {\n  uischema: Layout;\n}\n\n/**\n * Provides bindings for 'Layout' elements, e.g. VerticalLayout, HorizontalLayout, Group.\n *\n * Access bindings via the provided reactive 'layout' object.\n */\nexport const useJsonFormsLayout = (props: LayoutProps) => {\n  const { control, ...other } = useControl(props, mapStateToLayoutProps);\n  return { layout: control, ...other };\n};\n\n/**\n * Provides bindings for 'Control' elements which resolve to 'array' elements which\n * shall be rendered as a layout instead of a control.\n *\n * Access bindings via the provided reactive 'layout' object.\n */\nexport const useJsonFormsArrayLayout = (props: ControlProps) => {\n  const { control, ...other } = useControl(props, mapStateToArrayLayoutProps);\n  return { layout: control, ...other };\n};\n\n/**\n * Provides bindings for list elements of a master-list-detail control setup.\n * The element using this binding is not supposed to be registered as an own renderer\n * but used in a more specialized control.\n *\n * Access bindings via the provided reactive 'item' object.\n */\nexport const useJsonFormsMasterListItem = (props: OwnPropsOfMasterListItem) => {\n  const { control, ...other } = useControl<\n    Omit<OwnPropsOfMasterListItem, 'handleSelect' | 'removeItem'>,\n    unknown,\n    OwnPropsOfMasterListItem\n  >(props, mapStateToMasterListItemProps);\n  return { item: control, ...other };\n};\n\n/**\n * Provides specialized bindings which can be used for any renderer.\n * Useful for meta elements like dispatchers.\n *\n * Access bindings via the provided reactive 'renderer' object.\n */\nexport const useJsonFormsRenderer = (props: RendererProps) => {\n  const jsonforms = inject<JsonFormsSubStates>('jsonforms');\n  const dispatch = inject<Dispatch<CoreActions>>('dispatch');\n\n  if (!jsonforms || !dispatch) {\n    throw \"'jsonforms' or 'dispatch' couldn't be injected. Are you within JSON Forms?\";\n  }\n\n  const rawProps = computed(\n    () =>\n      mapStateToJsonFormsRendererProps(\n        { jsonforms },\n        props\n      ) as Required<StatePropsOfJsonFormsRenderer>\n  );\n\n  const rootSchema = computed(() => rawProps.value.rootSchema);\n  const renderer = computed(() => {\n    const { rootSchema: _rootSchema, ...rest } = rawProps.value;\n    return rest;\n  });\n\n  return {\n    renderer,\n    rootSchema,\n  };\n};\n\n/**\n * Provides bindings for 'Label' elements.\n *\n * Access bindings via the provided reactive `label` object.\n */\nexport const useJsonFormsLabel = (props: RendererProps<LabelElement>) => {\n  const { control, ...other } = useControl(props, mapStateToLabelProps);\n  return { label: control, ...other };\n};\n\n/**\n * Provides bindings for cell elements. Cells are meant to show simple inputs,\n * for example without error validation, within a larger structure like tables.\n *\n * Access bindings via the provided reactive 'cell' object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsCell = (props: ControlProps) => {\n  const { control, ...other } = useControl(\n    props,\n    mapStateToCellProps,\n    mapDispatchToControlProps\n  );\n  return { cell: control, ...other };\n};\n\n/**\n * Provides bindings for enum cell elements. Cells are meant to show simple inputs,\n * for example without error validation, within a larger structure like tables.\n *\n * Access bindings via the provided reactive 'cell' object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsEnumCell = (props: ControlProps) => {\n  const { control, ...other } = useControl(\n    props,\n    defaultMapStateToEnumCellProps,\n    mapDispatchToControlProps\n  );\n  return { cell: control, ...other };\n};\n\n/**\n * Provides bindings for 'oneOf' enum cell elements. Cells are meant to show simple inputs,\n * for example without error validation, within a larger structure like tables.\n *\n * Access bindings via the provided reactive 'cell' object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsOneOfEnumCell = (props: ControlProps) => {\n  const { control, ...other } = useControl(\n    props,\n    mapStateToOneOfEnumCellProps,\n    mapDispatchToControlProps\n  );\n  return { cell: control, ...other };\n};\n\n/**\n * Provides bindings for a cell dispatcher. Cells are meant to show simple inputs,\n * for example without error validation, within a larger structure like tables.\n *\n * Access bindings via the provided reactive 'cell' object.\n * Dispatch changes via the provided `handleChange` method.\n */\nexport const useJsonFormsDispatchCell = (props: ControlProps) => {\n  const { control, ...other } = useControl(\n    props,\n    mapStateToDispatchCellProps,\n    mapDispatchToControlProps\n  );\n  return { cell: control, ...other };\n};\n","<template>\n  <component :is=\"determinedRenderer\" v-bind=\"renderer\"></component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport UnknownRenderer from './UnknownRenderer.vue';\nimport maxBy from 'lodash/maxBy';\nimport { rendererProps, useJsonFormsRenderer } from '../jsonFormsCompositions';\n\nexport default defineComponent({\n  name: 'DispatchRenderer',\n  props: {\n    ...rendererProps(),\n  },\n  setup(props) {\n    return useJsonFormsRenderer(props);\n  },\n  computed: {\n    determinedRenderer(): any {\n      const testerContext = {\n        rootSchema: this.rootSchema,\n        config: this.config,\n      };\n      const renderer = maxBy(this.renderer.renderers, (r) =>\n        r.tester(this.renderer.uischema, this.renderer.schema, testerContext)\n      );\n      if (\n        renderer === undefined ||\n        renderer.tester(\n          this.renderer.uischema,\n          this.renderer.schema,\n          testerContext\n        ) === -1\n      ) {\n        return UnknownRenderer;\n      } else {\n        return renderer.renderer;\n      }\n    },\n  },\n});\n</script>\n","<template>\n  <component :is=\"determinedRenderer\" v-bind=\"renderer\"></component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport UnknownRenderer from './UnknownRenderer.vue';\nimport maxBy from 'lodash/maxBy';\nimport { rendererProps, useJsonFormsRenderer } from '../jsonFormsCompositions';\n\nexport default defineComponent({\n  name: 'DispatchRenderer',\n  props: {\n    ...rendererProps(),\n  },\n  setup(props) {\n    return useJsonFormsRenderer(props);\n  },\n  computed: {\n    determinedRenderer(): any {\n      const testerContext = {\n        rootSchema: this.rootSchema,\n        config: this.config,\n      };\n      const renderer = maxBy(this.renderer.renderers, (r) =>\n        r.tester(this.renderer.uischema, this.renderer.schema, testerContext)\n      );\n      if (\n        renderer === undefined ||\n        renderer.tester(\n          this.renderer.uischema,\n          this.renderer.schema,\n          testerContext\n        ) === -1\n      ) {\n        return UnknownRenderer;\n      } else {\n        return renderer.renderer;\n      }\n    },\n  },\n});\n</script>\n","<template>\n  <component :is=\"determinedCell\" v-bind=\"cell\"></component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport UnknownRenderer from './UnknownRenderer.vue';\nimport maxBy from 'lodash/maxBy';\nimport {\n  rendererProps,\n  useJsonFormsDispatchCell,\n} from '../jsonFormsCompositions';\nimport { ControlElement } from '@jsonforms/core';\n\nexport default defineComponent({\n  name: 'DispatchCell',\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props) {\n    return useJsonFormsDispatchCell(props);\n  },\n  computed: {\n    determinedCell(): any {\n      const testerContext = {\n        rootSchema: this.cell.rootSchema,\n        config: this.config,\n      };\n      const cell = maxBy(this.cell.cells, (r) =>\n        r.tester(this.cell.uischema, this.cell.schema, testerContext)\n      );\n      if (\n        cell === undefined ||\n        cell.tester(this.cell.uischema, this.cell.schema, testerContext) === -1\n      ) {\n        return UnknownRenderer;\n      } else {\n        return cell.cell;\n      }\n    },\n  },\n});\n</script>\n","<template>\n  <component :is=\"determinedCell\" v-bind=\"cell\"></component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport UnknownRenderer from './UnknownRenderer.vue';\nimport maxBy from 'lodash/maxBy';\nimport {\n  rendererProps,\n  useJsonFormsDispatchCell,\n} from '../jsonFormsCompositions';\nimport { ControlElement } from '@jsonforms/core';\n\nexport default defineComponent({\n  name: 'DispatchCell',\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props) {\n    return useJsonFormsDispatchCell(props);\n  },\n  computed: {\n    determinedCell(): any {\n      const testerContext = {\n        rootSchema: this.cell.rootSchema,\n        config: this.config,\n      };\n      const cell = maxBy(this.cell.cells, (r) =>\n        r.tester(this.cell.uischema, this.cell.schema, testerContext)\n      );\n      if (\n        cell === undefined ||\n        cell.tester(this.cell.uischema, this.cell.schema, testerContext) === -1\n      ) {\n        return UnknownRenderer;\n      } else {\n        return cell.cell;\n      }\n    },\n  },\n});\n</script>\n","<template>\n  <dispatch-renderer\n    :schema=\"jsonforms.core.schema\"\n    :uischema=\"jsonforms.core.uischema\"\n    :path=\"''\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { PropType, reactive, defineComponent } from 'vue';\nimport {\n  coreReducer,\n  Actions,\n  Generate,\n  configReducer,\n  JsonSchema,\n  UISchemaElement,\n  ValidationMode,\n  JsonFormsCore,\n  JsonFormsUISchemaRegistryEntry,\n  JsonFormsRendererRegistryEntry,\n  JsonFormsCellRendererRegistryEntry,\n  CoreActions,\n  i18nReducer,\n  JsonFormsI18nState,\n} from '@jsonforms/core';\nimport { JsonFormsChangeEvent, MaybeReadonly } from '../types';\nimport DispatchRenderer from './DispatchRenderer.vue';\n\nimport Ajv, { ErrorObject } from 'ajv';\n\n// TODO fix @typescript-eslint/ban-types\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst isObject = (elem: any): elem is Object => {\n  return elem && typeof elem === 'object';\n};\n\nconst EMPTY: ErrorObject[] = reactive([]);\n\nexport default defineComponent({\n  name: 'JsonForms',\n  components: {\n    DispatchRenderer,\n  },\n  provide() {\n    return {\n      jsonforms: this.jsonforms,\n      dispatch: this.dispatch,\n    };\n  },\n  props: {\n    data: {\n      required: true,\n      type: [String, Number, Boolean, Array, Object] as PropType<any>,\n    },\n    schema: {\n      required: false,\n      type: [Object, Boolean] as PropType<JsonSchema>,\n      default: undefined,\n    },\n    uischema: {\n      required: false,\n      type: Object as PropType<UISchemaElement>,\n      default: undefined,\n    },\n    renderers: {\n      required: true,\n      type: Array as PropType<MaybeReadonly<JsonFormsRendererRegistryEntry[]>>,\n    },\n    cells: {\n      required: false,\n      type: Array as PropType<\n        MaybeReadonly<JsonFormsCellRendererRegistryEntry[]>\n      >,\n      default: () => [],\n    },\n    config: {\n      required: false,\n      type: Object as PropType<any>,\n      default: undefined,\n    },\n    readonly: {\n      required: false,\n      type: Boolean,\n      default: false,\n    },\n    uischemas: {\n      required: false,\n      type: Array as PropType<MaybeReadonly<JsonFormsUISchemaRegistryEntry[]>>,\n      default: () => [],\n    },\n    validationMode: {\n      required: false,\n      type: String as PropType<ValidationMode>,\n      default: 'ValidateAndShow',\n    },\n    ajv: {\n      required: false,\n      type: Object as PropType<Ajv>,\n      default: undefined,\n    },\n    i18n: {\n      required: false,\n      type: Object as PropType<JsonFormsI18nState>,\n      default: undefined,\n    },\n    additionalErrors: {\n      required: false,\n      type: Array as PropType<ErrorObject[]>,\n      default: () => EMPTY,\n    },\n  },\n  emits: ['change'],\n  data() {\n    const dataToUse = this.data;\n    const generatorData = isObject(dataToUse) ? dataToUse : {};\n    const schemaToUse = this.schema ?? Generate.jsonSchema(generatorData);\n    const uischemaToUse = this.uischema ?? Generate.uiSchema(schemaToUse);\n    const initCore = (): JsonFormsCore => {\n      const initialCore = {\n        data: dataToUse,\n        schema: schemaToUse,\n        uischema: uischemaToUse,\n      };\n      const core = coreReducer(\n        initialCore,\n        Actions.init(dataToUse, schemaToUse, uischemaToUse, {\n          validationMode: this.validationMode,\n          ajv: this.ajv,\n          additionalErrors: this.additionalErrors,\n        })\n      );\n      return core;\n    };\n    return {\n      schemaToUse,\n      dataToUse,\n      uischemaToUse,\n      jsonforms: {\n        core: initCore(),\n        config: configReducer(undefined, Actions.setConfig(this.config)),\n        i18n: i18nReducer(\n          this.i18n,\n          Actions.updateI18n(\n            this.i18n?.locale,\n            this.i18n?.translate,\n            this.i18n?.translateError\n          )\n        ),\n        renderers: this.renderers,\n        cells: this.cells,\n        uischemas: this.uischemas,\n        readonly: this.readonly,\n      },\n    };\n  },\n  computed: {\n    coreDataToUpdate(): any {\n      return [\n        this.dataToUse,\n        this.schemaToUse,\n        this.uischemaToUse,\n        this.validationMode,\n        this.ajv,\n        this.additionalErrors,\n      ];\n    },\n    eventToEmit(): JsonFormsChangeEvent {\n      return {\n        data: this.jsonforms.core.data,\n        errors: this.jsonforms.core.errors,\n      };\n    },\n  },\n  watch: {\n    schema(newSchema) {\n      const generatorData = isObject(this.data) ? this.data : {};\n      this.schemaToUse = newSchema ?? Generate.jsonSchema(generatorData);\n      if (!this.uischema) {\n        this.uischemaToUse = Generate.uiSchema(this.schemaToUse);\n      }\n    },\n    uischema(newUischema) {\n      this.uischemaToUse = newUischema ?? Generate.uiSchema(this.schemaToUse);\n    },\n    data(newData) {\n      this.dataToUse = newData;\n    },\n    renderers(newRenderers) {\n      this.jsonforms.renderers = newRenderers;\n    },\n    cells(newCells) {\n      this.jsonforms.cells = newCells;\n    },\n    uischemas(newUischemas) {\n      this.jsonforms.uischemas = newUischemas;\n    },\n    config: {\n      handler(newConfig) {\n        this.jsonforms.config = configReducer(\n          undefined,\n          Actions.setConfig(newConfig)\n        );\n      },\n      deep: true,\n    },\n    readonly(newReadonly) {\n      this.jsonforms.readonly = newReadonly;\n    },\n    coreDataToUpdate() {\n      this.jsonforms.core = coreReducer(\n        this.jsonforms.core as JsonFormsCore,\n        Actions.updateCore(\n          this.dataToUse,\n          this.schemaToUse,\n          this.uischemaToUse,\n          {\n            validationMode: this.validationMode,\n            ajv: this.ajv,\n            additionalErrors: this.additionalErrors,\n          }\n        )\n      );\n    },\n    eventToEmit(newEvent) {\n      this.$emit('change', newEvent);\n    },\n    i18n: {\n      handler(newI18n) {\n        this.jsonforms.i18n = i18nReducer(\n          this.jsonforms.i18n,\n          Actions.updateI18n(\n            newI18n?.locale,\n            newI18n?.translate,\n            newI18n?.translateError\n          )\n        );\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    // emit an inital change so clients can react to error validation and default data insertion\n    this.$emit('change', {\n      data: this.jsonforms.core.data,\n      errors: this.jsonforms.core.errors,\n    });\n  },\n  methods: {\n    dispatch(action: CoreActions) {\n      this.jsonforms.core = coreReducer(\n        this.jsonforms.core as JsonFormsCore,\n        action\n      );\n    },\n  },\n});\n</script>\n","<template>\n  <dispatch-renderer\n    :schema=\"jsonforms.core.schema\"\n    :uischema=\"jsonforms.core.uischema\"\n    :path=\"''\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { PropType, reactive, defineComponent } from 'vue';\nimport {\n  coreReducer,\n  Actions,\n  Generate,\n  configReducer,\n  JsonSchema,\n  UISchemaElement,\n  ValidationMode,\n  JsonFormsCore,\n  JsonFormsUISchemaRegistryEntry,\n  JsonFormsRendererRegistryEntry,\n  JsonFormsCellRendererRegistryEntry,\n  CoreActions,\n  i18nReducer,\n  JsonFormsI18nState,\n} from '@jsonforms/core';\nimport { JsonFormsChangeEvent, MaybeReadonly } from '../types';\nimport DispatchRenderer from './DispatchRenderer.vue';\n\nimport Ajv, { ErrorObject } from 'ajv';\n\n// TODO fix @typescript-eslint/ban-types\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst isObject = (elem: any): elem is Object => {\n  return elem && typeof elem === 'object';\n};\n\nconst EMPTY: ErrorObject[] = reactive([]);\n\nexport default defineComponent({\n  name: 'JsonForms',\n  components: {\n    DispatchRenderer,\n  },\n  provide() {\n    return {\n      jsonforms: this.jsonforms,\n      dispatch: this.dispatch,\n    };\n  },\n  props: {\n    data: {\n      required: true,\n      type: [String, Number, Boolean, Array, Object] as PropType<any>,\n    },\n    schema: {\n      required: false,\n      type: [Object, Boolean] as PropType<JsonSchema>,\n      default: undefined,\n    },\n    uischema: {\n      required: false,\n      type: Object as PropType<UISchemaElement>,\n      default: undefined,\n    },\n    renderers: {\n      required: true,\n      type: Array as PropType<MaybeReadonly<JsonFormsRendererRegistryEntry[]>>,\n    },\n    cells: {\n      required: false,\n      type: Array as PropType<\n        MaybeReadonly<JsonFormsCellRendererRegistryEntry[]>\n      >,\n      default: () => [],\n    },\n    config: {\n      required: false,\n      type: Object as PropType<any>,\n      default: undefined,\n    },\n    readonly: {\n      required: false,\n      type: Boolean,\n      default: false,\n    },\n    uischemas: {\n      required: false,\n      type: Array as PropType<MaybeReadonly<JsonFormsUISchemaRegistryEntry[]>>,\n      default: () => [],\n    },\n    validationMode: {\n      required: false,\n      type: String as PropType<ValidationMode>,\n      default: 'ValidateAndShow',\n    },\n    ajv: {\n      required: false,\n      type: Object as PropType<Ajv>,\n      default: undefined,\n    },\n    i18n: {\n      required: false,\n      type: Object as PropType<JsonFormsI18nState>,\n      default: undefined,\n    },\n    additionalErrors: {\n      required: false,\n      type: Array as PropType<ErrorObject[]>,\n      default: () => EMPTY,\n    },\n  },\n  emits: ['change'],\n  data() {\n    const dataToUse = this.data;\n    const generatorData = isObject(dataToUse) ? dataToUse : {};\n    const schemaToUse = this.schema ?? Generate.jsonSchema(generatorData);\n    const uischemaToUse = this.uischema ?? Generate.uiSchema(schemaToUse);\n    const initCore = (): JsonFormsCore => {\n      const initialCore = {\n        data: dataToUse,\n        schema: schemaToUse,\n        uischema: uischemaToUse,\n      };\n      const core = coreReducer(\n        initialCore,\n        Actions.init(dataToUse, schemaToUse, uischemaToUse, {\n          validationMode: this.validationMode,\n          ajv: this.ajv,\n          additionalErrors: this.additionalErrors,\n        })\n      );\n      return core;\n    };\n    return {\n      schemaToUse,\n      dataToUse,\n      uischemaToUse,\n      jsonforms: {\n        core: initCore(),\n        config: configReducer(undefined, Actions.setConfig(this.config)),\n        i18n: i18nReducer(\n          this.i18n,\n          Actions.updateI18n(\n            this.i18n?.locale,\n            this.i18n?.translate,\n            this.i18n?.translateError\n          )\n        ),\n        renderers: this.renderers,\n        cells: this.cells,\n        uischemas: this.uischemas,\n        readonly: this.readonly,\n      },\n    };\n  },\n  computed: {\n    coreDataToUpdate(): any {\n      return [\n        this.dataToUse,\n        this.schemaToUse,\n        this.uischemaToUse,\n        this.validationMode,\n        this.ajv,\n        this.additionalErrors,\n      ];\n    },\n    eventToEmit(): JsonFormsChangeEvent {\n      return {\n        data: this.jsonforms.core.data,\n        errors: this.jsonforms.core.errors,\n      };\n    },\n  },\n  watch: {\n    schema(newSchema) {\n      const generatorData = isObject(this.data) ? this.data : {};\n      this.schemaToUse = newSchema ?? Generate.jsonSchema(generatorData);\n      if (!this.uischema) {\n        this.uischemaToUse = Generate.uiSchema(this.schemaToUse);\n      }\n    },\n    uischema(newUischema) {\n      this.uischemaToUse = newUischema ?? Generate.uiSchema(this.schemaToUse);\n    },\n    data(newData) {\n      this.dataToUse = newData;\n    },\n    renderers(newRenderers) {\n      this.jsonforms.renderers = newRenderers;\n    },\n    cells(newCells) {\n      this.jsonforms.cells = newCells;\n    },\n    uischemas(newUischemas) {\n      this.jsonforms.uischemas = newUischemas;\n    },\n    config: {\n      handler(newConfig) {\n        this.jsonforms.config = configReducer(\n          undefined,\n          Actions.setConfig(newConfig)\n        );\n      },\n      deep: true,\n    },\n    readonly(newReadonly) {\n      this.jsonforms.readonly = newReadonly;\n    },\n    coreDataToUpdate() {\n      this.jsonforms.core = coreReducer(\n        this.jsonforms.core as JsonFormsCore,\n        Actions.updateCore(\n          this.dataToUse,\n          this.schemaToUse,\n          this.uischemaToUse,\n          {\n            validationMode: this.validationMode,\n            ajv: this.ajv,\n            additionalErrors: this.additionalErrors,\n          }\n        )\n      );\n    },\n    eventToEmit(newEvent) {\n      this.$emit('change', newEvent);\n    },\n    i18n: {\n      handler(newI18n) {\n        this.jsonforms.i18n = i18nReducer(\n          this.jsonforms.i18n,\n          Actions.updateI18n(\n            newI18n?.locale,\n            newI18n?.translate,\n            newI18n?.translateError\n          )\n        );\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    // emit an inital change so clients can react to error validation and default data insertion\n    this.$emit('change', {\n      data: this.jsonforms.core.data,\n      errors: this.jsonforms.core.errors,\n    });\n  },\n  methods: {\n    dispatch(action: CoreActions) {\n      this.jsonforms.core = coreReducer(\n        this.jsonforms.core as JsonFormsCore,\n        action\n      );\n    },\n  },\n});\n</script>\n"],"names":["defineComponent","name","_openBlock","_createElementBlock","rendererProps","schema","required","type","Object","Boolean","uischema","path","String","enabled","undefined","renderers","Array","cells","config","masterListItemProps","index","Number","selected","handleSelect","Function","removeItem","useControl","props","stateMap","dispatchMap","jsonforms","inject","dispatch","id","ref","control","computed","value","dispatchMethods","onBeforeMount","scope","createId","onUnmounted","removeId","_objectSpread","useJsonFormsControl","mapStateToControlProps","mapDispatchToControlProps","useJsonFormsControlWithDetail","mapStateToControlWithDetailProps","useJsonFormsEnumControl","mapStateToEnumControlProps","useJsonFormsOneOfEnumControl","mapStateToOneOfEnumControlProps","useJsonFormsArrayControl","mapStateToArrayControlProps","mapDispatchToArrayControlProps","useJsonFormsAllOfControl","mapStateToAllOfProps","useJsonFormsAnyOfControl","mapStateToAnyOfProps","useJsonFormsOneOfControl","mapStateToOneOfProps","useJsonFormsMultiEnumControl","mapStateToMultiEnumControlProps","mapDispatchToMultiEnumProps","useJsonFormsLayout","mapStateToLayoutProps","other","layout","useJsonFormsArrayLayout","mapStateToArrayLayoutProps","useJsonFormsMasterListItem","mapStateToMasterListItemProps","item","useJsonFormsRenderer","rawProps","mapStateToJsonFormsRendererProps","rootSchema","renderer","_rootSchema","rest","useJsonFormsLabel","mapStateToLabelProps","label","useJsonFormsCell","mapStateToCellProps","cell","useJsonFormsEnumCell","defaultMapStateToEnumCellProps","useJsonFormsOneOfEnumCell","mapStateToOneOfEnumCellProps","useJsonFormsDispatchCell","mapStateToDispatchCellProps","setup","determinedRenderer","testerContext","maxBy","r","tester","UnknownRenderer","_createBlock","_resolveDynamicComponent","_ctx","_normalizeProps","_guardReactiveProps","determinedCell","isObject","elem","EMPTY","reactive","components","DispatchRenderer","provide","data","readonly","uischemas","validationMode","ajv","i18n","additionalErrors","emits","dataToUse","generatorData","schemaToUse","Generate","jsonSchema","uischemaToUse","uiSchema","initCore","initialCore","core","coreReducer","Actions","init","configReducer","setConfig","i18nReducer","updateI18n","locale","translate","translateError","coreDataToUpdate","eventToEmit","errors","watch","newSchema","newUischema","newData","newRenderers","newCells","newUischemas","handler","newConfig","deep","newReadonly","updateCore","newEvent","$emit","newI18n","mounted","methods","action","_component_dispatch_renderer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,eAAeA,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAE,iBAAA;AACP,CAAA,CAAC;;;ECRA,OAAAC,SAAA,EAAA,EAAAC,kBAAA,CAAuC,aAAlC,+BAA6B,CAAA,CAAA;;;;;;;;;;;;;;ACwDvBC,IAAAA,aAAa,GAAG,SAAhBA,aAAa,GAAA;EAAA,OAA+B;AACvDC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE,IAAa;AACvBC,MAAAA,IAAI,EAAE,CAACC,MAAM,EAAEC,OAAO,CAAA;KACvB;AACDC,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,QAAQ,EAAE,IAAa;AACvBC,MAAAA,IAAI,EAAEC,MAAAA;KACP;AACDG,IAAAA,IAAI,EAAE;AACJL,MAAAA,QAAQ,EAAE,IAAa;AACvBC,MAAAA,IAAI,EAAEK,MAAAA;KACP;AACDC,IAAAA,OAAO,EAAE;AACPP,MAAAA,QAAQ,EAAE,KAAc;AACxBC,MAAAA,IAAI,EAAEE,OAAO;MACb,SAASK,EAAAA,SAAAA;KACV;AACDC,IAAAA,SAAS,EAAE;AACTT,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAES,KAAmD;MACzD,SAASF,EAAAA,SAAAA;KACV;AACDG,IAAAA,KAAK,EAAE;AACLX,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAES,KAAuD;MAC7D,SAASF,EAAAA,SAAAA;KACV;AACDI,IAAAA,MAAM,EAAE;AACNZ,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAEC,MAAM;MACZ,SAASM,EAAAA,SAAAA;AACV,KAAA;GACF,CAAA;AAAA,EAAC;AAMWK,IAAAA,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAA;EAAA,OAAU;AACxCC,IAAAA,KAAK,EAAE;AACLd,MAAAA,QAAQ,EAAE,IAAa;AACvBC,MAAAA,IAAI,EAAEc,MAAAA;KACP;AACDC,IAAAA,QAAQ,EAAE;AACRhB,MAAAA,QAAQ,EAAE,IAAa;AACvBC,MAAAA,IAAI,EAAEE,OAAAA;KACP;AACDE,IAAAA,IAAI,EAAE;AACJL,MAAAA,QAAQ,EAAE,IAAa;AACvBC,MAAAA,IAAI,EAAEK,MAAAA;KACP;AACDP,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE,IAAa;AACvBC,MAAAA,IAAI,EAAE,CAACC,MAAM,EAAEC,OAAO,CAAA;KACvB;AACDc,IAAAA,YAAY,EAAE;AACZjB,MAAAA,QAAQ,EAAE,KAAc;AACxBC,MAAAA,IAAI,EAAEiB,QAA6C;MACnD,SAASV,EAAAA,SAAAA;KACV;AACDW,IAAAA,UAAU,EAAE;AACVnB,MAAAA,QAAQ,EAAE,KAAc;AACxBC,MAAAA,IAAI,EAAEiB,QAA2D;MACjE,SAASV,EAAAA,SAAAA;AACV,KAAA;GACF,CAAA;AAAA,EAAC;SAmCcY,UAAU,CACxBC,KAAQ,EACRC,QAAgD,EAChDC,WAAoD,EAAA;AAEpD,EAAA,IAAMC,SAAS,GAAGC,MAAM,CAAqB,WAAW,CAAC,CAAA;AACzD,EAAA,IAAMC,QAAQ,GAAGD,MAAM,CAAwB,UAAU,CAAC,CAAA;AAE1D,EAAA,IAAI,CAACD,SAAS,IAAI,CAACE,QAAQ,EAAE;AAC3B,IAAA,MAAM,4EAA4E,CAAA;AACnF,GAAA;AAED,EAAA,IAAMC,EAAE,GAAGC,GAAG,CAAqBpB,SAAS,CAAC,CAAA;EAC7C,IAAMqB,OAAO,GAAGC,QAAQ,CAAC,YAAA;IAAA,OACpBT,cAAAA,CAAAA,cAAAA,CAAAA,cAAAA,CAAAA,EAAAA,EAAAA,KAAK,CACLC,EAAAA,QAAQ,CAAC;AAAEE,MAAAA,SAAS,EAATA,SAAAA;KAAW,EAAEH,KAAK,CAAC,CAAA,EAAA,EAAA,EAAA;MACjCM,EAAE,EAAEA,EAAE,CAACI,KAAAA;AAAK,KAAA,CAAA,CAAA;AAAA,GACZ,CAAC,CAAA;EAEH,IAAMC,eAAe,GAAGT,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAXA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,WAAW,CAAGG,QAAQ,CAAC,CAAA;AAE/CO,EAAAA,aAAa,CAAC,YAAK;AACjB,IAAA,IAAKJ,OAAO,CAACE,KAAa,CAAC3B,QAAQ,CAAC8B,KAAK,EAAE;AACzCP,MAAAA,EAAE,CAACI,KAAK,GAAGI,QAAQ,CAAEN,OAAO,CAACE,KAAa,CAAC3B,QAAQ,CAAC8B,KAAK,CAAC,CAAA;AAC3D,KAAA;AACH,GAAC,CAAC,CAAA;AAEFE,EAAAA,WAAW,CAAC,YAAK;IACf,IAAIT,EAAE,CAACI,KAAK,EAAE;AACZM,MAAAA,QAAQ,CAACV,EAAE,CAACI,KAAK,CAAC,CAAA;MAClBJ,EAAE,CAACI,KAAK,GAAGvB,SAAS,CAAA;AACrB,KAAA;AACH,GAAC,CAAC,CAAA;AAEF,EAAA,OAAA8B,cAAA,CAAA;AACET,IAAAA,OAAO,EAAEA,OAAAA;AAAoC,GAAA,EAC1CG,eAAe,CAAA,CAAA;AAEtB,CAAA;IASaO,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIlB,KAAmB,EAAI;AACzD,EAAA,OAAOD,UAAU,CAACC,KAAK,EAAEmB,sBAAsB,EAAEC,yBAAyB,CAAC,CAAA;AAC7E,EAAC;IASYC,6BAA6B,GAAG,SAAhCA,6BAA6B,CAAIrB,KAAmB,EAAI;AACnE,EAAA,OAAOD,UAAU,CACfC,KAAK,EACLsB,gCAAgC,EAChCF,yBAAyB,CAC1B,CAAA;AACH,EAAC;IAQYG,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAIvB,KAAmB,EAAI;AAC7D,EAAA,OAAOD,UAAU,CACfC,KAAK,EACLwB,0BAA0B,EAC1BJ,yBAAyB,CAC1B,CAAA;AACH,EAAC;IASYK,4BAA4B,GAAG,SAA/BA,4BAA4B,CAAIzB,KAAmB,EAAI;AAClE,EAAA,OAAOD,UAAU,CACfC,KAAK,EACL0B,+BAA+B,EAC/BN,yBAAyB,CAC1B,CAAA;AACH,EAAC;IAQYO,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAI3B,KAAmB,EAAI;AAC9D,EAAA,OAAOD,UAAU,CACfC,KAAK,EACL4B,2BAA2B,EAC3BC,8BAA8B,CAC/B,CAAA;AACH,EAAC;IAQYC,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAI9B,KAAmB,EAAI;AAC9D,EAAA,OAAOD,UAAU,CAACC,KAAK,EAAE+B,oBAAoB,EAAEX,yBAAyB,CAAC,CAAA;AAC3E,EAAC;IAQYY,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAIhC,KAAmB,EAAI;AAC9D,EAAA,OAAOD,UAAU,CAACC,KAAK,EAAEiC,oBAAoB,EAAEb,yBAAyB,CAAC,CAAA;AAC3E,EAAC;IAQYc,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAIlC,KAAmB,EAAI;AAC9D,EAAA,OAAOD,UAAU,CAACC,KAAK,EAAEmC,oBAAoB,EAAEf,yBAAyB,CAAC,CAAA;AAC3E,EAAC;IAQYgB,4BAA4B,GAAG,SAA/BA,4BAA4B,CAAIpC,KAAmB,EAAI;AAClE,EAAA,OAAOD,UAAU,CACfC,KAAK,EACLqC,+BAA+B,EAC/BC,2BAA2B,CAC5B,CAAA;AACH,EAAC;IAWYC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIvC,KAAkB,EAAI;AACvD,EAAA,IAAA,WAAA,GAA8BD,UAAU,CAACC,KAAK,EAAEwC,qBAAqB,CAAC;AAA9DhC,IAAAA,OAAO,eAAPA,OAAO;IAAKiC,KAAK,GAAA,wBAAA,CAAA,WAAA,EAAA,SAAA,CAAA,CAAA;AACzB,EAAA,OAAAxB,cAAA,CAAA;AAASyB,IAAAA,MAAM,EAAElC,OAAAA;AAAO,GAAA,EAAKiC,KAAK,CAAA,CAAA;AACpC,EAAC;IAQYE,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAI3C,KAAmB,EAAI;AAC7D,EAAA,IAAA,YAAA,GAA8BD,UAAU,CAACC,KAAK,EAAE4C,0BAA0B,CAAC;AAAnEpC,IAAAA,OAAO,gBAAPA,OAAO;IAAKiC,KAAK,GAAA,wBAAA,CAAA,YAAA,EAAA,UAAA,CAAA,CAAA;AACzB,EAAA,OAAAxB,cAAA,CAAA;AAASyB,IAAAA,MAAM,EAAElC,OAAAA;AAAO,GAAA,EAAKiC,KAAK,CAAA,CAAA;AACpC,EAAC;IASYI,0BAA0B,GAAG,SAA7BA,0BAA0B,CAAI7C,KAA+B,EAAI;AAC5E,EAAA,IAAA,YAAA,GAA8BD,UAAU,CAItCC,KAAK,EAAE8C,6BAA6B,CAAC;AAJ/BtC,IAAAA,OAAO,gBAAPA,OAAO;IAAKiC,KAAK,GAAA,wBAAA,CAAA,YAAA,EAAA,UAAA,CAAA,CAAA;AAKzB,EAAA,OAAAxB,cAAA,CAAA;AAAS8B,IAAAA,IAAI,EAAEvC,OAAAA;AAAO,GAAA,EAAKiC,KAAK,CAAA,CAAA;AAClC,EAAC;IAQYO,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIhD,KAAoB,EAAI;AAC3D,EAAA,IAAMG,SAAS,GAAGC,MAAM,CAAqB,WAAW,CAAC,CAAA;AACzD,EAAA,IAAMC,QAAQ,GAAGD,MAAM,CAAwB,UAAU,CAAC,CAAA;AAE1D,EAAA,IAAI,CAACD,SAAS,IAAI,CAACE,QAAQ,EAAE;AAC3B,IAAA,MAAM,4EAA4E,CAAA;AACnF,GAAA;EAED,IAAM4C,QAAQ,GAAGxC,QAAQ,CACvB,YAAA;AAAA,IAAA,OACEyC,gCAAgC,CAC9B;AAAE/C,MAAAA,SAAS,EAATA,SAAAA;KAAW,EACbH,KAAK,CACqC,CAAA;GAC/C,CAAA,CAAA;EAED,IAAMmD,UAAU,GAAG1C,QAAQ,CAAC,YAAA;AAAA,IAAA,OAAMwC,QAAQ,CAACvC,KAAK,CAACyC,UAAU,CAAA;GAAC,CAAA,CAAA;AAC5D,EAAA,IAAMC,QAAQ,GAAG3C,QAAQ,CAAC,YAAK;IACgBwC,IAAAA,eAAAA,GAAAA,QAAQ,CAACvC,KAAK,CAAA;AAAvC2C,sBAAZF,UAAU,CAAA;UAAkBG,IAAI,GAAA,wBAAA,CAAA,eAAA,EAAA,UAAA,EAAA;AACxC,IAAA,OAAOA,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;EAEF,OAAO;AACLF,IAAAA,QAAQ,EAARA,QAAQ;AACRD,IAAAA,UAAU,EAAVA,UAAAA;GACD,CAAA;AACH,EAAC;IAOYI,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIvD,KAAkC,EAAI;AACtE,EAAA,IAAA,YAAA,GAA8BD,UAAU,CAACC,KAAK,EAAEwD,oBAAoB,CAAC;AAA7DhD,IAAAA,OAAO,gBAAPA,OAAO;IAAKiC,KAAK,GAAA,wBAAA,CAAA,YAAA,EAAA,UAAA,CAAA,CAAA;AACzB,EAAA,OAAAxB,cAAA,CAAA;AAASwC,IAAAA,KAAK,EAAEjD,OAAAA;AAAO,GAAA,EAAKiC,KAAK,CAAA,CAAA;AACnC,EAAC;IASYiB,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAI1D,KAAmB,EAAI;AACtD,EAAA,IAAA,YAAA,GAA8BD,UAAU,CACtCC,KAAK,EACL2D,mBAAmB,EACnBvC,yBAAyB,CAC1B;AAJOZ,IAAAA,OAAO,gBAAPA,OAAO;IAAKiC,KAAK,GAAA,wBAAA,CAAA,YAAA,EAAA,UAAA,CAAA,CAAA;AAKzB,EAAA,OAAAxB,cAAA,CAAA;AAAS2C,IAAAA,IAAI,EAAEpD,OAAAA;AAAO,GAAA,EAAKiC,KAAK,CAAA,CAAA;AAClC,EAAC;IASYoB,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAI7D,KAAmB,EAAI;AAC1D,EAAA,IAAA,YAAA,GAA8BD,UAAU,CACtCC,KAAK,EACL8D,8BAA8B,EAC9B1C,yBAAyB,CAC1B;AAJOZ,IAAAA,OAAO,gBAAPA,OAAO;IAAKiC,KAAK,GAAA,wBAAA,CAAA,YAAA,EAAA,UAAA,CAAA,CAAA;AAKzB,EAAA,OAAAxB,cAAA,CAAA;AAAS2C,IAAAA,IAAI,EAAEpD,OAAAA;AAAO,GAAA,EAAKiC,KAAK,CAAA,CAAA;AAClC,EAAC;IASYsB,yBAAyB,GAAG,SAA5BA,yBAAyB,CAAI/D,KAAmB,EAAI;AAC/D,EAAA,IAAA,YAAA,GAA8BD,UAAU,CACtCC,KAAK,EACLgE,4BAA4B,EAC5B5C,yBAAyB,CAC1B;AAJOZ,IAAAA,OAAO,gBAAPA,OAAO;IAAKiC,KAAK,GAAA,wBAAA,CAAA,YAAA,EAAA,UAAA,CAAA,CAAA;AAKzB,EAAA,OAAAxB,cAAA,CAAA;AAAS2C,IAAAA,IAAI,EAAEpD,OAAAA;AAAO,GAAA,EAAKiC,KAAK,CAAA,CAAA;AAClC,EAAC;IASYwB,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAIjE,KAAmB,EAAI;AAC9D,EAAA,IAAA,YAAA,GAA8BD,UAAU,CACtCC,KAAK,EACLkE,2BAA2B,EAC3B9C,yBAAyB,CAC1B;AAJOZ,IAAAA,OAAO,gBAAPA,OAAO;IAAKiC,KAAK,GAAA,wBAAA,CAAA,YAAA,EAAA,UAAA,CAAA,CAAA;AAKzB,EAAA,OAAAxB,cAAA,CAAA;AAAS2C,IAAAA,IAAI,EAAEpD,OAAAA;AAAO,GAAA,EAAKiC,KAAK,CAAA,CAAA;AAClC;;AChcA,eAAepE,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAE,kBAAkB;EACxB0B,KAAK,EAAAiB,cAAA,CAAA,EAAA,EACAxC,aAAa,EAAE,CACnB;EACD0F,KAAK,EAAA,SAAA,KAAA,CAACnE,KAAK,EAAA;IACT,OAAOgD,oBAAoB,CAAChD,KAAK,CAAC,CAAA;GACnC;AACDS,EAAAA,QAAQ,EAAE;AACR2D,IAAAA,kBAAkB,EAAA,SAAA,kBAAA,GAAA;AAAA,MAAA,IAAA,KAAA,GAAA,IAAA,CAAA;AAChB,MAAA,IAAMC,gBAAgB;QACpBlB,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3B5D,MAAM,EAAE,IAAI,CAACA,MAAAA;OACd,CAAA;MACD,IAAM6D,QAAS,GAAEkB,KAAK,CAAC,IAAI,CAAClB,QAAQ,CAAChE,SAAS,EAAE,UAACmF,CAAC,EAAA;AAAA,QAAA,OAChDA,CAAC,CAACC,MAAM,CAAC,KAAI,CAACpB,QAAQ,CAACrE,QAAQ,EAAE,KAAI,CAACqE,QAAQ,CAAC1E,MAAM,EAAE2F,aAAa,CAAA,CAAA;OACrE,CAAA,CAAA;MACD,IACEjB,aAAajE,aACbiE,QAAQ,CAACoB,MAAM,CACb,IAAI,CAACpB,QAAQ,CAACrE,QAAQ,EACtB,IAAI,CAACqE,QAAQ,CAAC1E,MAAM,EACpB2F,aAAY,CACZ,KAAI,CAAC,CAAA,EACP;AACA,QAAA,OAAOI,QAAe,CAAA;AACtB,OAAA,MAAK;QACL,OAAOrB,QAAQ,CAACA,QAAQ,CAAA;AAC1B,OAAA;AACF,KAAA;AACD,GAAA;AACF,CAAA,CAAC;;;sBCxCAsB,WAAiE,CAAAC,uBAAA,CAAjDC,IAAkB,CAAAR,kBAAA,CAAA,EAAAS,cAAA,CAAAC,kBAAA,CAAUF,IAAQ,CAAAxB,QAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;;;;;ACatD,eAAe/E,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAE,cAAc;EACpB0B,KAAK,EAAAiB,cAAA,CAAA,EAAA,EACAxC,aAAa,EAAkB,CACnC;EACD0F,KAAK,EAAA,SAAA,KAAA,CAACnE,KAAK,EAAA;IACT,OAAOiE,wBAAwB,CAACjE,KAAK,CAAC,CAAA;GACvC;AACDS,EAAAA,QAAQ,EAAE;AACRsE,IAAAA,cAAc,EAAA,SAAA,cAAA,GAAA;AAAA,MAAA,IAAA,KAAA,GAAA,IAAA,CAAA;AACZ,MAAA,IAAMV,gBAAgB;AACpBlB,QAAAA,UAAU,EAAE,IAAI,CAACS,IAAI,CAACT,UAAU;QAChC5D,MAAM,EAAE,IAAI,CAACA,MAAAA;OACd,CAAA;MACD,IAAMqE,IAAK,GAAEU,KAAK,CAAC,IAAI,CAACV,IAAI,CAACtE,KAAK,EAAE,UAACiF,CAAC,EAAA;AAAA,QAAA,OACpCA,CAAC,CAACC,MAAM,CAAC,KAAI,CAACZ,IAAI,CAAC7E,QAAQ,EAAE,KAAI,CAAC6E,IAAI,CAAClF,MAAM,EAAE2F,aAAa,CAAA,CAAA;OAC7D,CAAA,CAAA;MACD,IACET,IAAK,KAAIzE,aACTyE,IAAI,CAACY,MAAM,CAAC,IAAI,CAACZ,IAAI,CAAC7E,QAAQ,EAAE,IAAI,CAAC6E,IAAI,CAAClF,MAAM,EAAE2F,aAAa,CAAA,KAAM,CAAC,CAAA,EACtE;AACA,QAAA,OAAOI,QAAe,CAAA;AACtB,OAAA,MAAK;QACL,OAAOb,IAAI,CAACA,IAAI,CAAA;AAClB,OAAA;AACF,KAAA;AACD,GAAA;AACF,CAAA,CAAC;;;sBCxCAc,WAAyD,CAAAC,uBAAA,CAAzCC,IAAc,CAAAG,cAAA,CAAA,EAAAF,cAAA,CAAAC,kBAAA,CAAUF,IAAI,CAAAhB,IAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;;;;;ACgC9C,IAAMoB,QAAS,GAAE,SAAXA,QAAS,CAAGC,IAAS,EAAqB;AAC9C,EAAA,OAAOA,IAAK,IAAG,OAAOA,CAAAA,IAAG,MAAM,QAAQ,CAAA;AACzC,CAAC,CAAA;AAED,IAAMC,KAAK,GAAkBC,QAAQ,CAAC,EAAE,CAAC,CAAA;AAEzC,aAAe9G,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAE,WAAW;AACjB8G,EAAAA,UAAU,EAAE;AACVC,IAAAA,gBAAgB,EAAhBA,QAAAA;GACD;AACDC,EAAAA,OAAO,EAAA,SAAA,OAAA,GAAA;IACL,OAAO;MACLnF,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBE,QAAQ,EAAE,IAAI,CAACA,QAAAA;KAChB,CAAA;GACF;AACDL,EAAAA,KAAK,EAAE;AACLuF,IAAAA,IAAI,EAAE;AACJ5G,MAAAA,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAE,CAACK,MAAM,EAAES,MAAM,EAAEZ,OAAO,EAAEO,KAAK,EAAER,MAAM,CAAA;KAC9C;AACDH,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAE,CAACC,MAAM,EAAEC,OAAO,CAAyB;MAC/C,SAASK,EAAAA,SAAAA;KACV;AACDJ,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAEC,MAAmC;MACzC,SAASM,EAAAA,SAAAA;KACV;AACDC,IAAAA,SAAS,EAAE;AACTT,MAAAA,QAAQ,EAAE,IAAI;AACdC,MAAAA,IAAI,EAAES,KAAAA;KACP;AACDC,IAAAA,KAAK,EAAE;AACLX,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAES,KAEL;MACD,SAAS,EAAA,SAAA,QAAA,GAAA;AAAA,QAAA,OAAM,EAAE,CAAA;AAAA,OAAA;KAClB;AACDE,IAAAA,MAAM,EAAE;AACNZ,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAEC,MAAuB;MAC7B,SAASM,EAAAA,SAAAA;KACV;AACDqG,IAAAA,QAAQ,EAAE;AACR7G,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAEE,OAAO;MACb,SAAS,EAAA,KAAA;KACV;AACD2G,IAAAA,SAAS,EAAE;AACT9G,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAES,KAAkE;MACxE,SAAS,EAAA,SAAA,QAAA,GAAA;AAAA,QAAA,OAAM,EAAE,CAAA;AAAA,OAAA;KAClB;AACDqG,IAAAA,cAAc,EAAE;AACd/G,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAEK,MAAkC;MACxC,SAAS,EAAA,iBAAA;KACV;AACD0G,IAAAA,GAAG,EAAE;AACHhH,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAEC,MAAuB;MAC7B,SAASM,EAAAA,SAAAA;KACV;AACDyG,IAAAA,IAAI,EAAE;AACJjH,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAEC,MAAsC;MAC5C,SAASM,EAAAA,SAAAA;KACV;AACD0G,IAAAA,gBAAgB,EAAE;AAChBlH,MAAAA,QAAQ,EAAE,KAAK;AACfC,MAAAA,IAAI,EAAES,KAAgC;MACtC,SAAS,EAAA,SAAA,QAAA,GAAA;AAAA,QAAA,OAAM6F,KAAK,CAAA;AAAA,OAAA;AACrB,KAAA;GACF;EACDY,KAAK,EAAE,CAAC,QAAQ,CAAC;AACjBP,EAAAA,IAAI,EAAA,SAAA,IAAA,GAAA;AAAA,IAAA,IAAA,YAAA;AAAA,MAAA,cAAA;AAAA,MAAA,KAAA,GAAA,IAAA;AAAA,MAAA,UAAA;AAAA,MAAA,WAAA;AAAA,MAAA,WAAA,CAAA;AACF,IAAA,IAAMQ,SAAU,GAAE,IAAI,CAACR,IAAI,CAAA;IAC3B,IAAMS,aAAY,GAAIhB,QAAQ,CAACe,SAAS,CAAA,GAAIA,SAAQ,GAAI,EAAE,CAAA;IAC1D,IAAME,WAAY,GAAE,CAAA,YAAA,GAAA,IAAI,CAACvH,MAAO,MAAGwH,IAAAA,IAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAAA,YAAAA,GAAAA,QAAQ,CAACC,UAAU,CAACH,aAAa,CAAC,CAAA;IACrE,IAAMI,aAAc,GAAE,CAAA,cAAA,GAAA,IAAI,CAACrH,QAAO,MAAKmH,IAAAA,IAAAA,cAAAA,KAAAA,KAAAA,CAAAA,GAAAA,cAAAA,GAAAA,QAAQ,CAACG,QAAQ,CAACJ,WAAW,CAAC,CAAA;AACrE,IAAA,IAAMK,QAAO,GAAI,SAAXA,QAAO,GAAyB;AACpC,MAAA,IAAMC,cAAc;AAClBhB,QAAAA,IAAI,EAAEQ,SAAS;AACfrH,QAAAA,MAAM,EAAEuH,WAAW;AACnBlH,QAAAA,QAAQ,EAAEqH,aAAAA;OACX,CAAA;AACD,MAAA,IAAMI,IAAK,GAAEC,WAAW,CACtBF,WAAW,EACXG,OAAO,CAACC,IAAI,CAACZ,SAAS,EAAEE,WAAW,EAAEG,aAAa,EAAE;QAClDV,cAAc,EAAE,KAAI,CAACA,cAAc;QACnCC,GAAG,EAAE,KAAI,CAACA,GAAG;QACbE,gBAAgB,EAAE,KAAI,CAACA,gBAAAA;AACxB,OAAA,CAAA,CACF,CAAA;AACD,MAAA,OAAOW,IAAI,CAAA;KACZ,CAAA;IACD,OAAO;AACLP,MAAAA,WAAW,EAAXA,WAAW;AACXF,MAAAA,SAAS,EAATA,SAAS;AACTK,MAAAA,aAAa,EAAbA,aAAa;AACbjG,MAAAA,SAAS,EAAE;QACTqG,IAAI,EAAEF,QAAQ,EAAE;AAChB/G,QAAAA,MAAM,EAAEqH,aAAa,CAACzH,SAAS,EAAEuH,OAAO,CAACG,SAAS,CAAC,IAAI,CAACtH,MAAM,CAAC,CAAC;AAChEqG,QAAAA,IAAI,EAAEkB,WAAW,CACf,IAAI,CAAClB,IAAI,EACTc,OAAO,CAACK,UAAU,CAAA,CAAA,UAAA,GAChB,IAAI,CAACnB,IAAI,MAAT,IAAA,IAAA,UAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,UAAA,CAAWoB,MAAM,EAAA,CAAA,WAAA,GACjB,IAAI,CAACpB,IAAI,MAAA,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,YAAWqB,SAAS,EAAA,CAAA,WAAA,GACpB,IAAI,CAACrB,IAAI,MAAA,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,WAAWsB,CAAAA,cAAa,CAC1B,CACD;QACD9H,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBE,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBmG,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBD,QAAQ,EAAE,IAAI,CAACA,QAAAA;AAChB,OAAA;KACF,CAAA;GACF;AACD/E,EAAAA,QAAQ,EAAE;AACR0G,IAAAA,gBAAgB,EAAA,SAAA,gBAAA,GAAA;MACd,OAAO,CACL,IAAI,CAACpB,SAAS,EACd,IAAI,CAACE,WAAW,EAChB,IAAI,CAACG,aAAa,EAClB,IAAI,CAACV,cAAc,EACnB,IAAI,CAACC,GAAG,EACR,IAAI,CAACE,gBAAgB,CACtB,CAAA;KACF;AACDuB,IAAAA,WAAW,EAAA,SAAA,WAAA,GAAA;MACT,OAAO;AACL7B,QAAAA,IAAI,EAAE,IAAI,CAACpF,SAAS,CAACqG,IAAI,CAACjB,IAAI;AAC9B8B,QAAAA,MAAM,EAAE,IAAI,CAAClH,SAAS,CAACqG,IAAI,CAACa,MAAAA;OAC7B,CAAA;AACH,KAAA;GACD;AACDC,EAAAA,KAAK,EAAE;IACL5I,MAAM,EAAA,SAAA,MAAA,CAAC6I,SAAS,EAAA;AACd,MAAA,IAAMvB,aAAY,GAAIhB,QAAQ,CAAC,IAAI,CAACO,IAAI,CAAA,GAAI,IAAI,CAACA,IAAG,GAAI,EAAE,CAAA;AAC1D,MAAA,IAAI,CAACU,WAAY,GAAEsB,SAAU,aAAVA,SAAU,KAAA,KAAA,CAAA,GAAVA,SAAU,GAAGrB,QAAQ,CAACC,UAAU,CAACH,aAAa,CAAC,CAAA;AAClE,MAAA,IAAI,CAAC,IAAI,CAACjH,QAAQ,EAAE;QAClB,IAAI,CAACqH,aAAY,GAAIF,QAAQ,CAACG,QAAQ,CAAC,IAAI,CAACJ,WAAW,CAAC,CAAA;AAC1D,OAAA;KACD;IACDlH,QAAQ,EAAA,SAAA,QAAA,CAACyI,WAAW,EAAA;AAClB,MAAA,IAAI,CAACpB,aAAY,GAAIoB,WAAU,KAAA,IAAA,IAAVA,WAAU,KAAVA,KAAAA,CAAAA,GAAAA,WAAU,GAAKtB,QAAQ,CAACG,QAAQ,CAAC,IAAI,CAACJ,WAAW,CAAC,CAAA;KACxE;IACDV,IAAI,EAAA,SAAA,IAAA,CAACkC,OAAO,EAAA;MACV,IAAI,CAAC1B,SAAQ,GAAI0B,OAAO,CAAA;KACzB;IACDrI,SAAS,EAAA,SAAA,SAAA,CAACsI,YAAY,EAAA;AACpB,MAAA,IAAI,CAACvH,SAAS,CAACf,SAAU,GAAEsI,YAAY,CAAA;KACxC;IACDpI,KAAK,EAAA,SAAA,KAAA,CAACqI,QAAQ,EAAA;AACZ,MAAA,IAAI,CAACxH,SAAS,CAACb,KAAI,GAAIqI,QAAQ,CAAA;KAChC;IACDlC,SAAS,EAAA,SAAA,SAAA,CAACmC,YAAY,EAAA;AACpB,MAAA,IAAI,CAACzH,SAAS,CAACsF,SAAU,GAAEmC,YAAY,CAAA;KACxC;AACDrI,IAAAA,MAAM,EAAE;MACNsI,OAAO,EAAA,SAAA,OAAA,CAACC,SAAS,EAAA;AACf,QAAA,IAAI,CAAC3H,SAAS,CAACZ,MAAK,GAAIqH,aAAa,CACnCzH,SAAS,EACTuH,OAAO,CAACG,SAAS,CAACiB,SAAS,CAAA,CAC5B,CAAA;OACF;AACDC,MAAAA,IAAI,EAAE,IAAA;KACP;IACDvC,QAAQ,EAAA,SAAA,QAAA,CAACwC,WAAW,EAAA;AAClB,MAAA,IAAI,CAAC7H,SAAS,CAACqF,QAAO,GAAIwC,WAAW,CAAA;KACtC;AACDb,IAAAA,gBAAgB,EAAA,SAAA,gBAAA,GAAA;AACd,MAAA,IAAI,CAAChH,SAAS,CAACqG,IAAG,GAAIC,WAAW,CAC/B,IAAI,CAACtG,SAAS,CAACqG,IAAqB,EACpCE,OAAO,CAACuB,UAAU,CAChB,IAAI,CAAClC,SAAS,EACd,IAAI,CAACE,WAAW,EAChB,IAAI,CAACG,aAAa,EAClB;QACEV,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCC,GAAG,EAAE,IAAI,CAACA,GAAG;QACbE,gBAAgB,EAAE,IAAI,CAACA,gBAAAA;AACzB,OAAA,CACF,CACD,CAAA;KACF;IACDuB,WAAW,EAAA,SAAA,WAAA,CAACc,QAAQ,EAAA;AAClB,MAAA,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAED,QAAQ,CAAC,CAAA;KAC/B;AACDtC,IAAAA,IAAI,EAAE;MACJiC,OAAO,EAAA,SAAA,OAAA,CAACO,OAAO,EAAA;AACb,QAAA,IAAI,CAACjI,SAAS,CAACyF,IAAG,GAAIkB,WAAW,CAC/B,IAAI,CAAC3G,SAAS,CAACyF,IAAI,EACnBc,OAAO,CAACK,UAAU,CAChBqB,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEpB,MAAM,EACfoB,OAAO,KAAPA,IAAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEnB,SAAS,EAClBmB,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAElB,cAAa,CACxB,CACD,CAAA;OACF;AACDa,MAAAA,IAAI,EAAE,IAAA;AACP,KAAA;GACF;AACDM,EAAAA,OAAO,EAAA,SAAA,OAAA,GAAA;AAEL,IAAA,IAAI,CAACF,KAAK,CAAC,QAAQ,EAAE;AACnB5C,MAAAA,IAAI,EAAE,IAAI,CAACpF,SAAS,CAACqG,IAAI,CAACjB,IAAI;AAC9B8B,MAAAA,MAAM,EAAE,IAAI,CAAClH,SAAS,CAACqG,IAAI,CAACa,MAAAA;AAC7B,KAAA,CAAC,CAAA;GACH;AACDiB,EAAAA,OAAO,EAAE;IACPjI,QAAQ,EAAA,SAAA,QAAA,CAACkI,MAAmB,EAAA;AAC1B,MAAA,IAAI,CAACpI,SAAS,CAACqG,IAAG,GAAIC,WAAW,CAC/B,IAAI,CAACtG,SAAS,CAACqG,IAAqB,EACpC+B,MAAK,CACN,CAAA;AACH,KAAA;AACD,GAAA;AACF,CAAA,CAAC;;;;sBC/PA7D,WAIC,CAAA8D,4BAAA,EAAA;AAHE9J,IAAAA,MAAM,EAAEkG,IAAA,CAAAzE,SAAS,CAACqG,IAAI,CAAC9H,MAAM;AAC7BK,IAAAA,QAAQ,EAAE6F,IAAA,CAAAzE,SAAS,CAACqG,IAAI,CAACzH,QAAQ;AACjCC,IAAAA,IAAI,EAAE,EAAA;;;;;;;;"}